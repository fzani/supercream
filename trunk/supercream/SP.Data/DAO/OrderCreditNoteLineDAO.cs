/***************************************************************************************************
// -- Generated by AlteraxGen 28/04/2010 22:21:37
// Version 1.0
***************************************************************************************************/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using SP.Core.Domain;
using SP.Core.DataInterfaces;

namespace SP.Data.LTS
{
    public class OrderCreditNoteLineDao : AbstractLTSDao<OrderCreditNoteLine, int>, IOrderCreditNoteLineDao
    {
        public OrderCreditNoteLineDao()
        {
        }

        public OrderCreditNoteLineDao(LTSDataContext ctx)
            : base(ctx)
        {
        }

        public bool CheckIfOrderLineAlreadyExists(int orderLineId)
        {
            var p = db.OrderCreditNoteLine
                .Where(q => q.OrderLineID == orderLineId).FirstOrDefault();
            return p != null;           
        }

        public bool CheckIfCreditNoteLineExists(int creditNoteid, int orderLineId)
        {
            var p = db.OrderCreditNoteLine
                .Where(q => q.OrderCreditNoteID == creditNoteid && q.OrderLineID == orderLineId).SingleOrDefault();
            return p != null;                  
        }

        public OrderCreditNoteLine GetCreditNoteLineByOrderIdAndOrderLineId(int creditNoteid, int orderLineId)
        {
            return db.OrderCreditNoteLine
                .Where(q => q.OrderCreditNoteID == creditNoteid && q.OrderLineID == orderLineId)
                .SingleOrDefault();
        }

        public override OrderCreditNoteLine GetById(int id)
        {
            return db.OrderCreditNoteLine.Single<OrderCreditNoteLine>(q => q.ID == id);
        }

        public int GetAvailableNoOfUnitsOnOrderLine(int orderLineId)
        {
            var orderLine = db.OrderLine.SingleOrDefault(ol => ol.ID == orderLineId);

            var noOfCreditNoteUnits = 0;
            var creditNoteLines = db.OrderCreditNoteLine.Where(q => q.OrderLineID == orderLineId);
            if(creditNoteLines.Count() != 0)
            {
                noOfCreditNoteUnits = creditNoteLines.Sum(q => q.NoOfUnits);
            }

            return orderLine.NoOfUnits - noOfCreditNoteUnits;

        }
    }
}
