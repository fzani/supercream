/***************************************************************************************************
// -- Generated by AlteraxGen 03/03/2010 11:19:48
// Version 1.0
***************************************************************************************************/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using SP.Core.Domain;
using SP.Core.DataInterfaces;

namespace SP.Data.LTS
{
   public class CreditNoteDao : AbstractLTSDao<CreditNote, int>, ICreditNoteDao
   {
      public CreditNoteDao()
      {
      }

      public CreditNoteDao(LTSDataContext ctx)
         : base(ctx)
      {
      }

      public override CreditNote GetById(int id)
      {
         return db.CreditNote.Single<CreditNote>(q => q.ID == id);
      }

      public List<CreditNoteDetails> SearchCreditNotes(int orderId, string orderNo, string invoiceNo, string customerName, DateTime dateFrom, DateTime dateTo)
      {
          var creditNotes = (from o in db.OrderHeader
                              join ons in db.OrderNotesStatus on o.ID equals ons.OrderID
                              join cr in db.CreditNote on o.ID equals cr.OrderID
                              join c in db.Customer on o.CustomerID equals c.ID                             
                              select new CreditNoteDetails
                              {
                                  OrderID = o.ID,
                                  OrderNo = o.AlphaID,
                                  InvoiceNo = o.InvoiceNo,
                                  CustomerName = c.Name,
                                  DateCreated = cr.DateCreated,                                  
                              });

          return FilterCreditNotes(creditNotes,
                  orderNo,
                  invoiceNo,
                  customerName,
                  dateFrom,
                  dateTo).ToList<CreditNoteDetails>();
      }

      private static IQueryable<CreditNoteDetails> FilterCreditNotes(IQueryable<CreditNoteDetails> creditNotes,
         string orderNo,
         string invoiceNo,
         string customerName,
         DateTime dateFrom,
         DateTime dateTo)
      {
          IQueryable<CreditNoteDetails> filteredCreditNotes = creditNotes;
          if (!String.IsNullOrEmpty(orderNo))
          {
              filteredCreditNotes = filteredCreditNotes.Where<CreditNoteDetails>(q => q.OrderNo.Contains(orderNo));
          }

          if (!String.IsNullOrEmpty(invoiceNo))
          {
              filteredCreditNotes = filteredCreditNotes.Where<CreditNoteDetails>(q => q.InvoiceNo.Contains(invoiceNo));
          }

          if (!String.IsNullOrEmpty(customerName))
          {
              filteredCreditNotes = filteredCreditNotes.Where<CreditNoteDetails>(q => q.CustomerName.Contains(customerName));
          }

          if (dateFrom != DateTime.MinValue)
          {
              filteredCreditNotes = filteredCreditNotes.Where<CreditNoteDetails>(q => q.DateCreated >= dateFrom);
          }

          if (dateTo != DateTime.MinValue)
          {
              filteredCreditNotes = filteredCreditNotes.Where<CreditNoteDetails>(q => q.DateCreated >= dateTo);
          }
         
          return filteredCreditNotes;
      }
   }
}
