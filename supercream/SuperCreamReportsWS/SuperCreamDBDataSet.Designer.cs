//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SuperCreamReportsWS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SuperCreamDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SuperCreamDBDataSet : global::System.Data.DataSet {
        
        private AccountDataTable tableAccount;
        
        private rptDetailsGetDeliveryNoteDataTable tablerptDetailsGetDeliveryNote;
        
        private rptGetDeliveryAddressLinesDataTable tablerptGetDeliveryAddressLines;
        
        private rptGetFoundationFacilityAddressLinesDataTable tablerptGetFoundationFacilityAddressLines;
        
        private rptGetOrderTotalsDataTable tablerptGetOrderTotals;
        
        private rptDetailsGetDeliveryNote1DataTable tablerptDetailsGetDeliveryNote1;
        
        private rptGetAddressLinesForInvoiceDataTable tablerptGetAddressLinesForInvoice;
        
        private rptDetailsGetInvoiceDataTable tablerptDetailsGetInvoice;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SuperCreamDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SuperCreamDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Account"] != null)) {
                    base.Tables.Add(new AccountDataTable(ds.Tables["Account"]));
                }
                if ((ds.Tables["rptDetailsGetDeliveryNote"] != null)) {
                    base.Tables.Add(new rptDetailsGetDeliveryNoteDataTable(ds.Tables["rptDetailsGetDeliveryNote"]));
                }
                if ((ds.Tables["rptGetDeliveryAddressLines"] != null)) {
                    base.Tables.Add(new rptGetDeliveryAddressLinesDataTable(ds.Tables["rptGetDeliveryAddressLines"]));
                }
                if ((ds.Tables["rptGetFoundationFacilityAddressLines"] != null)) {
                    base.Tables.Add(new rptGetFoundationFacilityAddressLinesDataTable(ds.Tables["rptGetFoundationFacilityAddressLines"]));
                }
                if ((ds.Tables["rptGetOrderTotals"] != null)) {
                    base.Tables.Add(new rptGetOrderTotalsDataTable(ds.Tables["rptGetOrderTotals"]));
                }
                if ((ds.Tables["rptDetailsGetDeliveryNote1"] != null)) {
                    base.Tables.Add(new rptDetailsGetDeliveryNote1DataTable(ds.Tables["rptDetailsGetDeliveryNote1"]));
                }
                if ((ds.Tables["rptGetAddressLinesForInvoice"] != null)) {
                    base.Tables.Add(new rptGetAddressLinesForInvoiceDataTable(ds.Tables["rptGetAddressLinesForInvoice"]));
                }
                if ((ds.Tables["rptDetailsGetInvoice"] != null)) {
                    base.Tables.Add(new rptDetailsGetInvoiceDataTable(ds.Tables["rptDetailsGetInvoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccountDataTable Account {
            get {
                return this.tableAccount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptDetailsGetDeliveryNoteDataTable rptDetailsGetDeliveryNote {
            get {
                return this.tablerptDetailsGetDeliveryNote;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptGetDeliveryAddressLinesDataTable rptGetDeliveryAddressLines {
            get {
                return this.tablerptGetDeliveryAddressLines;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptGetFoundationFacilityAddressLinesDataTable rptGetFoundationFacilityAddressLines {
            get {
                return this.tablerptGetFoundationFacilityAddressLines;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptGetOrderTotalsDataTable rptGetOrderTotals {
            get {
                return this.tablerptGetOrderTotals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptDetailsGetDeliveryNote1DataTable rptDetailsGetDeliveryNote1 {
            get {
                return this.tablerptDetailsGetDeliveryNote1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptGetAddressLinesForInvoiceDataTable rptGetAddressLinesForInvoice {
            get {
                return this.tablerptGetAddressLinesForInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptDetailsGetInvoiceDataTable rptDetailsGetInvoice {
            get {
                return this.tablerptDetailsGetInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SuperCreamDBDataSet cln = ((SuperCreamDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Account"] != null)) {
                    base.Tables.Add(new AccountDataTable(ds.Tables["Account"]));
                }
                if ((ds.Tables["rptDetailsGetDeliveryNote"] != null)) {
                    base.Tables.Add(new rptDetailsGetDeliveryNoteDataTable(ds.Tables["rptDetailsGetDeliveryNote"]));
                }
                if ((ds.Tables["rptGetDeliveryAddressLines"] != null)) {
                    base.Tables.Add(new rptGetDeliveryAddressLinesDataTable(ds.Tables["rptGetDeliveryAddressLines"]));
                }
                if ((ds.Tables["rptGetFoundationFacilityAddressLines"] != null)) {
                    base.Tables.Add(new rptGetFoundationFacilityAddressLinesDataTable(ds.Tables["rptGetFoundationFacilityAddressLines"]));
                }
                if ((ds.Tables["rptGetOrderTotals"] != null)) {
                    base.Tables.Add(new rptGetOrderTotalsDataTable(ds.Tables["rptGetOrderTotals"]));
                }
                if ((ds.Tables["rptDetailsGetDeliveryNote1"] != null)) {
                    base.Tables.Add(new rptDetailsGetDeliveryNote1DataTable(ds.Tables["rptDetailsGetDeliveryNote1"]));
                }
                if ((ds.Tables["rptGetAddressLinesForInvoice"] != null)) {
                    base.Tables.Add(new rptGetAddressLinesForInvoiceDataTable(ds.Tables["rptGetAddressLinesForInvoice"]));
                }
                if ((ds.Tables["rptDetailsGetInvoice"] != null)) {
                    base.Tables.Add(new rptDetailsGetInvoiceDataTable(ds.Tables["rptDetailsGetInvoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAccount = ((AccountDataTable)(base.Tables["Account"]));
            if ((initTable == true)) {
                if ((this.tableAccount != null)) {
                    this.tableAccount.InitVars();
                }
            }
            this.tablerptDetailsGetDeliveryNote = ((rptDetailsGetDeliveryNoteDataTable)(base.Tables["rptDetailsGetDeliveryNote"]));
            if ((initTable == true)) {
                if ((this.tablerptDetailsGetDeliveryNote != null)) {
                    this.tablerptDetailsGetDeliveryNote.InitVars();
                }
            }
            this.tablerptGetDeliveryAddressLines = ((rptGetDeliveryAddressLinesDataTable)(base.Tables["rptGetDeliveryAddressLines"]));
            if ((initTable == true)) {
                if ((this.tablerptGetDeliveryAddressLines != null)) {
                    this.tablerptGetDeliveryAddressLines.InitVars();
                }
            }
            this.tablerptGetFoundationFacilityAddressLines = ((rptGetFoundationFacilityAddressLinesDataTable)(base.Tables["rptGetFoundationFacilityAddressLines"]));
            if ((initTable == true)) {
                if ((this.tablerptGetFoundationFacilityAddressLines != null)) {
                    this.tablerptGetFoundationFacilityAddressLines.InitVars();
                }
            }
            this.tablerptGetOrderTotals = ((rptGetOrderTotalsDataTable)(base.Tables["rptGetOrderTotals"]));
            if ((initTable == true)) {
                if ((this.tablerptGetOrderTotals != null)) {
                    this.tablerptGetOrderTotals.InitVars();
                }
            }
            this.tablerptDetailsGetDeliveryNote1 = ((rptDetailsGetDeliveryNote1DataTable)(base.Tables["rptDetailsGetDeliveryNote1"]));
            if ((initTable == true)) {
                if ((this.tablerptDetailsGetDeliveryNote1 != null)) {
                    this.tablerptDetailsGetDeliveryNote1.InitVars();
                }
            }
            this.tablerptGetAddressLinesForInvoice = ((rptGetAddressLinesForInvoiceDataTable)(base.Tables["rptGetAddressLinesForInvoice"]));
            if ((initTable == true)) {
                if ((this.tablerptGetAddressLinesForInvoice != null)) {
                    this.tablerptGetAddressLinesForInvoice.InitVars();
                }
            }
            this.tablerptDetailsGetInvoice = ((rptDetailsGetInvoiceDataTable)(base.Tables["rptDetailsGetInvoice"]));
            if ((initTable == true)) {
                if ((this.tablerptDetailsGetInvoice != null)) {
                    this.tablerptDetailsGetInvoice.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SuperCreamDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SuperCreamDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAccount = new AccountDataTable();
            base.Tables.Add(this.tableAccount);
            this.tablerptDetailsGetDeliveryNote = new rptDetailsGetDeliveryNoteDataTable();
            base.Tables.Add(this.tablerptDetailsGetDeliveryNote);
            this.tablerptGetDeliveryAddressLines = new rptGetDeliveryAddressLinesDataTable();
            base.Tables.Add(this.tablerptGetDeliveryAddressLines);
            this.tablerptGetFoundationFacilityAddressLines = new rptGetFoundationFacilityAddressLinesDataTable();
            base.Tables.Add(this.tablerptGetFoundationFacilityAddressLines);
            this.tablerptGetOrderTotals = new rptGetOrderTotalsDataTable();
            base.Tables.Add(this.tablerptGetOrderTotals);
            this.tablerptDetailsGetDeliveryNote1 = new rptDetailsGetDeliveryNote1DataTable();
            base.Tables.Add(this.tablerptDetailsGetDeliveryNote1);
            this.tablerptGetAddressLinesForInvoice = new rptGetAddressLinesForInvoiceDataTable();
            base.Tables.Add(this.tablerptGetAddressLinesForInvoice);
            this.tablerptDetailsGetInvoice = new rptDetailsGetInvoiceDataTable();
            base.Tables.Add(this.tablerptDetailsGetInvoice);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAccount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptDetailsGetDeliveryNote() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptGetDeliveryAddressLines() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptGetFoundationFacilityAddressLines() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptGetOrderTotals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptDetailsGetDeliveryNote1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptGetAddressLinesForInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptDetailsGetInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AccountRowChangeEventHandler(object sender, AccountRowChangeEvent e);
        
        public delegate void rptDetailsGetDeliveryNoteRowChangeEventHandler(object sender, rptDetailsGetDeliveryNoteRowChangeEvent e);
        
        public delegate void rptGetDeliveryAddressLinesRowChangeEventHandler(object sender, rptGetDeliveryAddressLinesRowChangeEvent e);
        
        public delegate void rptGetFoundationFacilityAddressLinesRowChangeEventHandler(object sender, rptGetFoundationFacilityAddressLinesRowChangeEvent e);
        
        public delegate void rptGetOrderTotalsRowChangeEventHandler(object sender, rptGetOrderTotalsRowChangeEvent e);
        
        public delegate void rptDetailsGetDeliveryNote1RowChangeEventHandler(object sender, rptDetailsGetDeliveryNote1RowChangeEvent e);
        
        public delegate void rptGetAddressLinesForInvoiceRowChangeEventHandler(object sender, rptGetAddressLinesForInvoiceRowChangeEvent e);
        
        public delegate void rptDetailsGetInvoiceRowChangeEventHandler(object sender, rptDetailsGetInvoiceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AccountDataTable : global::System.Data.TypedTableBase<AccountRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnInvoiceAddressID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnContactDetailID;
            
            private global::System.Data.DataColumn columnTermTypeID;
            
            private global::System.Data.DataColumn columnAlphaID;
            
            private global::System.Data.DataColumn columnCompanyToInvoiceTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountDataTable() {
                this.TableName = "Account";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AccountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AccountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressIDColumn {
                get {
                    return this.columnInvoiceAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactDetailIDColumn {
                get {
                    return this.columnContactDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermTypeIDColumn {
                get {
                    return this.columnTermTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlphaIDColumn {
                get {
                    return this.columnAlphaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyToInvoiceToColumn {
                get {
                    return this.columnCompanyToInvoiceTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountRow this[int index] {
                get {
                    return ((AccountRow)(this.Rows[index]));
                }
            }
            
            public event AccountRowChangeEventHandler AccountRowChanging;
            
            public event AccountRowChangeEventHandler AccountRowChanged;
            
            public event AccountRowChangeEventHandler AccountRowDeleting;
            
            public event AccountRowChangeEventHandler AccountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAccountRow(AccountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountRow AddAccountRow(int InvoiceAddressID, int CustomerID, int ContactDetailID, int TermTypeID, string AlphaID, string CompanyToInvoiceTo) {
                AccountRow rowAccountRow = ((AccountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InvoiceAddressID,
                        CustomerID,
                        ContactDetailID,
                        TermTypeID,
                        AlphaID,
                        CompanyToInvoiceTo};
                rowAccountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAccountRow);
                return rowAccountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountRow FindByID(int ID) {
                return ((AccountRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AccountDataTable cln = ((AccountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AccountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnInvoiceAddressID = base.Columns["InvoiceAddressID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnContactDetailID = base.Columns["ContactDetailID"];
                this.columnTermTypeID = base.Columns["TermTypeID"];
                this.columnAlphaID = base.Columns["AlphaID"];
                this.columnCompanyToInvoiceTo = base.Columns["CompanyToInvoiceTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnInvoiceAddressID = new global::System.Data.DataColumn("InvoiceAddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnContactDetailID = new global::System.Data.DataColumn("ContactDetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactDetailID);
                this.columnTermTypeID = new global::System.Data.DataColumn("TermTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermTypeID);
                this.columnAlphaID = new global::System.Data.DataColumn("AlphaID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlphaID);
                this.columnCompanyToInvoiceTo = new global::System.Data.DataColumn("CompanyToInvoiceTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyToInvoiceTo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAlphaID.MaxLength = 20;
                this.columnCompanyToInvoiceTo.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountRow NewAccountRow() {
                return ((AccountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AccountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AccountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccountRowChanged != null)) {
                    this.AccountRowChanged(this, new AccountRowChangeEvent(((AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccountRowChanging != null)) {
                    this.AccountRowChanging(this, new AccountRowChangeEvent(((AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccountRowDeleted != null)) {
                    this.AccountRowDeleted(this, new AccountRowChangeEvent(((AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccountRowDeleting != null)) {
                    this.AccountRowDeleting(this, new AccountRowChangeEvent(((AccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAccountRow(AccountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AccountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptDetailsGetDeliveryNoteDataTable : global::System.Data.TypedTableBase<rptDetailsGetDeliveryNoteRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnAlphaPrefixOrPostFix;
            
            private global::System.Data.DataColumn columnAlphaID;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            private global::System.Data.DataColumn columnOrderStatus;
            
            private global::System.Data.DataColumn columnHeaderSpecialInstructions;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyEMailAddress;
            
            private global::System.Data.DataColumn columnCompanyOfficePhoneNumber1;
            
            private global::System.Data.DataColumn columnCompanyOfficePhoneNumber2;
            
            private global::System.Data.DataColumn columnCompanyVatRegistrationNumber;
            
            private global::System.Data.DataColumn columnCompanyAddressLines;
            
            private global::System.Data.DataColumn columnCompanyCounty;
            
            private global::System.Data.DataColumn columnCompanyMapReference;
            
            private global::System.Data.DataColumn columnCompanyPostCode;
            
            private global::System.Data.DataColumn columnCompanyTown;
            
            private global::System.Data.DataColumn columnCompanyAddressType;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCompanyToInvoiceTo;
            
            private global::System.Data.DataColumn columnInvoiceAddressID;
            
            private global::System.Data.DataColumn columnContactDetailID;
            
            private global::System.Data.DataColumn columnEMailAddress;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnInitialNote;
            
            private global::System.Data.DataColumn columnJobRole;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnAccountPhoneNumber;
            
            private global::System.Data.DataColumn columnOutletStoreName;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnOpeningHoursNotes;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnInvoiceAddressMapReference;
            
            private global::System.Data.DataColumn columnInvoiceAddressCounty;
            
            private global::System.Data.DataColumn columnInvoiceAddressTown;
            
            private global::System.Data.DataColumn columnInvoiceAddressPostCode;
            
            private global::System.Data.DataColumn columnOutletStoreAddressLines;
            
            private global::System.Data.DataColumn columnOutletStoreCounty;
            
            private global::System.Data.DataColumn columnOutletStoreMapReference;
            
            private global::System.Data.DataColumn columnOutletStorePostCode;
            
            private global::System.Data.DataColumn columnOutletStoreTown;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNoOfUnits;
            
            private global::System.Data.DataColumn columnOrderLineStatus;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnQtyPerUnit;
            
            private global::System.Data.DataColumn columnSpecialInstructions;
            
            private global::System.Data.DataColumn columnProductDescription;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnRRPPerItem;
            
            private global::System.Data.DataColumn columnVatExempt;
            
            private global::System.Data.DataColumn columnPaymentTerms;
            
            private global::System.Data.DataColumn columnVanDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNoteDataTable() {
                this.TableName = "rptDetailsGetDeliveryNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDetailsGetDeliveryNoteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptDetailsGetDeliveryNoteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlphaPrefixOrPostFixColumn {
                get {
                    return this.columnAlphaPrefixOrPostFix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlphaIDColumn {
                get {
                    return this.columnAlphaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderStatusColumn {
                get {
                    return this.columnOrderStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderSpecialInstructionsColumn {
                get {
                    return this.columnHeaderSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyEMailAddressColumn {
                get {
                    return this.columnCompanyEMailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyOfficePhoneNumber1Column {
                get {
                    return this.columnCompanyOfficePhoneNumber1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyOfficePhoneNumber2Column {
                get {
                    return this.columnCompanyOfficePhoneNumber2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyVatRegistrationNumberColumn {
                get {
                    return this.columnCompanyVatRegistrationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressLinesColumn {
                get {
                    return this.columnCompanyAddressLines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyCountyColumn {
                get {
                    return this.columnCompanyCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyMapReferenceColumn {
                get {
                    return this.columnCompanyMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyPostCodeColumn {
                get {
                    return this.columnCompanyPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTownColumn {
                get {
                    return this.columnCompanyTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressTypeColumn {
                get {
                    return this.columnCompanyAddressType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyToInvoiceToColumn {
                get {
                    return this.columnCompanyToInvoiceTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressIDColumn {
                get {
                    return this.columnInvoiceAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactDetailIDColumn {
                get {
                    return this.columnContactDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMailAddressColumn {
                get {
                    return this.columnEMailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InitialNoteColumn {
                get {
                    return this.columnInitialNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobRoleColumn {
                get {
                    return this.columnJobRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountPhoneNumberColumn {
                get {
                    return this.columnAccountPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreNameColumn {
                get {
                    return this.columnOutletStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningHoursNotesColumn {
                get {
                    return this.columnOpeningHoursNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressMapReferenceColumn {
                get {
                    return this.columnInvoiceAddressMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressCountyColumn {
                get {
                    return this.columnInvoiceAddressCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressTownColumn {
                get {
                    return this.columnInvoiceAddressTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressPostCodeColumn {
                get {
                    return this.columnInvoiceAddressPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreAddressLinesColumn {
                get {
                    return this.columnOutletStoreAddressLines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreCountyColumn {
                get {
                    return this.columnOutletStoreCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreMapReferenceColumn {
                get {
                    return this.columnOutletStoreMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStorePostCodeColumn {
                get {
                    return this.columnOutletStorePostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreTownColumn {
                get {
                    return this.columnOutletStoreTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoOfUnitsColumn {
                get {
                    return this.columnNoOfUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderLineStatusColumn {
                get {
                    return this.columnOrderLineStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyPerUnitColumn {
                get {
                    return this.columnQtyPerUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialInstructionsColumn {
                get {
                    return this.columnSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductDescriptionColumn {
                get {
                    return this.columnProductDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RRPPerItemColumn {
                get {
                    return this.columnRRPPerItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatExemptColumn {
                get {
                    return this.columnVatExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentTermsColumn {
                get {
                    return this.columnPaymentTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VanDescriptionColumn {
                get {
                    return this.columnVanDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNoteRow this[int index] {
                get {
                    return ((rptDetailsGetDeliveryNoteRow)(this.Rows[index]));
                }
            }
            
            public event rptDetailsGetDeliveryNoteRowChangeEventHandler rptDetailsGetDeliveryNoteRowChanging;
            
            public event rptDetailsGetDeliveryNoteRowChangeEventHandler rptDetailsGetDeliveryNoteRowChanged;
            
            public event rptDetailsGetDeliveryNoteRowChangeEventHandler rptDetailsGetDeliveryNoteRowDeleting;
            
            public event rptDetailsGetDeliveryNoteRowChangeEventHandler rptDetailsGetDeliveryNoteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptDetailsGetDeliveryNoteRow(rptDetailsGetDeliveryNoteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNoteRow AddrptDetailsGetDeliveryNoteRow(
                        int CustomerID, 
                        short AlphaPrefixOrPostFix, 
                        string AlphaID, 
                        System.DateTime OrderDate, 
                        System.DateTime DeliveryDate, 
                        short OrderStatus, 
                        string HeaderSpecialInstructions, 
                        string InvoiceNo, 
                        string CompanyName, 
                        string CompanyEMailAddress, 
                        string CompanyOfficePhoneNumber1, 
                        string CompanyOfficePhoneNumber2, 
                        string CompanyVatRegistrationNumber, 
                        string CompanyAddressLines, 
                        string CompanyCounty, 
                        string CompanyMapReference, 
                        string CompanyPostCode, 
                        string CompanyTown, 
                        short CompanyAddressType, 
                        string CustomerName, 
                        string CompanyToInvoiceTo, 
                        int InvoiceAddressID, 
                        int ContactDetailID, 
                        string EMailAddress, 
                        string FirstName, 
                        string InitialNote, 
                        string JobRole, 
                        string LastName, 
                        string Title, 
                        string AccountPhoneNumber, 
                        string OutletStoreName, 
                        string Note, 
                        string OpeningHoursNotes, 
                        string Name, 
                        string InvoiceAddressMapReference, 
                        string InvoiceAddressCounty, 
                        string InvoiceAddressTown, 
                        string InvoiceAddressPostCode, 
                        string OutletStoreAddressLines, 
                        string OutletStoreCounty, 
                        string OutletStoreMapReference, 
                        string OutletStorePostCode, 
                        string OutletStoreTown, 
                        double Discount, 
                        int NoOfUnits, 
                        short OrderLineStatus, 
                        decimal Price, 
                        int QtyPerUnit, 
                        string SpecialInstructions, 
                        string ProductDescription, 
                        string ProductCode, 
                        decimal RRPPerItem, 
                        bool VatExempt, 
                        string PaymentTerms, 
                        string VanDescription) {
                rptDetailsGetDeliveryNoteRow rowrptDetailsGetDeliveryNoteRow = ((rptDetailsGetDeliveryNoteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CustomerID,
                        AlphaPrefixOrPostFix,
                        AlphaID,
                        OrderDate,
                        DeliveryDate,
                        OrderStatus,
                        HeaderSpecialInstructions,
                        InvoiceNo,
                        CompanyName,
                        CompanyEMailAddress,
                        CompanyOfficePhoneNumber1,
                        CompanyOfficePhoneNumber2,
                        CompanyVatRegistrationNumber,
                        CompanyAddressLines,
                        CompanyCounty,
                        CompanyMapReference,
                        CompanyPostCode,
                        CompanyTown,
                        CompanyAddressType,
                        CustomerName,
                        CompanyToInvoiceTo,
                        InvoiceAddressID,
                        ContactDetailID,
                        EMailAddress,
                        FirstName,
                        InitialNote,
                        JobRole,
                        LastName,
                        Title,
                        AccountPhoneNumber,
                        OutletStoreName,
                        Note,
                        OpeningHoursNotes,
                        Name,
                        InvoiceAddressMapReference,
                        InvoiceAddressCounty,
                        InvoiceAddressTown,
                        InvoiceAddressPostCode,
                        OutletStoreAddressLines,
                        OutletStoreCounty,
                        OutletStoreMapReference,
                        OutletStorePostCode,
                        OutletStoreTown,
                        Discount,
                        NoOfUnits,
                        OrderLineStatus,
                        Price,
                        QtyPerUnit,
                        SpecialInstructions,
                        ProductDescription,
                        ProductCode,
                        RRPPerItem,
                        VatExempt,
                        PaymentTerms,
                        VanDescription};
                rowrptDetailsGetDeliveryNoteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptDetailsGetDeliveryNoteRow);
                return rowrptDetailsGetDeliveryNoteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNoteRow FindByID(int ID) {
                return ((rptDetailsGetDeliveryNoteRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptDetailsGetDeliveryNoteDataTable cln = ((rptDetailsGetDeliveryNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptDetailsGetDeliveryNoteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnAlphaPrefixOrPostFix = base.Columns["AlphaPrefixOrPostFix"];
                this.columnAlphaID = base.Columns["AlphaID"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnOrderStatus = base.Columns["OrderStatus"];
                this.columnHeaderSpecialInstructions = base.Columns["HeaderSpecialInstructions"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyEMailAddress = base.Columns["CompanyEMailAddress"];
                this.columnCompanyOfficePhoneNumber1 = base.Columns["CompanyOfficePhoneNumber1"];
                this.columnCompanyOfficePhoneNumber2 = base.Columns["CompanyOfficePhoneNumber2"];
                this.columnCompanyVatRegistrationNumber = base.Columns["CompanyVatRegistrationNumber"];
                this.columnCompanyAddressLines = base.Columns["CompanyAddressLines"];
                this.columnCompanyCounty = base.Columns["CompanyCounty"];
                this.columnCompanyMapReference = base.Columns["CompanyMapReference"];
                this.columnCompanyPostCode = base.Columns["CompanyPostCode"];
                this.columnCompanyTown = base.Columns["CompanyTown"];
                this.columnCompanyAddressType = base.Columns["CompanyAddressType"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCompanyToInvoiceTo = base.Columns["CompanyToInvoiceTo"];
                this.columnInvoiceAddressID = base.Columns["InvoiceAddressID"];
                this.columnContactDetailID = base.Columns["ContactDetailID"];
                this.columnEMailAddress = base.Columns["EMailAddress"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnInitialNote = base.Columns["InitialNote"];
                this.columnJobRole = base.Columns["JobRole"];
                this.columnLastName = base.Columns["LastName"];
                this.columnTitle = base.Columns["Title"];
                this.columnAccountPhoneNumber = base.Columns["AccountPhoneNumber"];
                this.columnOutletStoreName = base.Columns["OutletStoreName"];
                this.columnNote = base.Columns["Note"];
                this.columnOpeningHoursNotes = base.Columns["OpeningHoursNotes"];
                this.columnName = base.Columns["Name"];
                this.columnInvoiceAddressMapReference = base.Columns["InvoiceAddressMapReference"];
                this.columnInvoiceAddressCounty = base.Columns["InvoiceAddressCounty"];
                this.columnInvoiceAddressTown = base.Columns["InvoiceAddressTown"];
                this.columnInvoiceAddressPostCode = base.Columns["InvoiceAddressPostCode"];
                this.columnOutletStoreAddressLines = base.Columns["OutletStoreAddressLines"];
                this.columnOutletStoreCounty = base.Columns["OutletStoreCounty"];
                this.columnOutletStoreMapReference = base.Columns["OutletStoreMapReference"];
                this.columnOutletStorePostCode = base.Columns["OutletStorePostCode"];
                this.columnOutletStoreTown = base.Columns["OutletStoreTown"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNoOfUnits = base.Columns["NoOfUnits"];
                this.columnOrderLineStatus = base.Columns["OrderLineStatus"];
                this.columnPrice = base.Columns["Price"];
                this.columnQtyPerUnit = base.Columns["QtyPerUnit"];
                this.columnSpecialInstructions = base.Columns["SpecialInstructions"];
                this.columnProductDescription = base.Columns["ProductDescription"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnRRPPerItem = base.Columns["RRPPerItem"];
                this.columnVatExempt = base.Columns["VatExempt"];
                this.columnPaymentTerms = base.Columns["PaymentTerms"];
                this.columnVanDescription = base.Columns["VanDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnAlphaPrefixOrPostFix = new global::System.Data.DataColumn("AlphaPrefixOrPostFix", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlphaPrefixOrPostFix);
                this.columnAlphaID = new global::System.Data.DataColumn("AlphaID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlphaID);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnOrderStatus = new global::System.Data.DataColumn("OrderStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderStatus);
                this.columnHeaderSpecialInstructions = new global::System.Data.DataColumn("HeaderSpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderSpecialInstructions);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyEMailAddress = new global::System.Data.DataColumn("CompanyEMailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyEMailAddress);
                this.columnCompanyOfficePhoneNumber1 = new global::System.Data.DataColumn("CompanyOfficePhoneNumber1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyOfficePhoneNumber1);
                this.columnCompanyOfficePhoneNumber2 = new global::System.Data.DataColumn("CompanyOfficePhoneNumber2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyOfficePhoneNumber2);
                this.columnCompanyVatRegistrationNumber = new global::System.Data.DataColumn("CompanyVatRegistrationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyVatRegistrationNumber);
                this.columnCompanyAddressLines = new global::System.Data.DataColumn("CompanyAddressLines", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddressLines);
                this.columnCompanyCounty = new global::System.Data.DataColumn("CompanyCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCounty);
                this.columnCompanyMapReference = new global::System.Data.DataColumn("CompanyMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyMapReference);
                this.columnCompanyPostCode = new global::System.Data.DataColumn("CompanyPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyPostCode);
                this.columnCompanyTown = new global::System.Data.DataColumn("CompanyTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyTown);
                this.columnCompanyAddressType = new global::System.Data.DataColumn("CompanyAddressType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddressType);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCompanyToInvoiceTo = new global::System.Data.DataColumn("CompanyToInvoiceTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyToInvoiceTo);
                this.columnInvoiceAddressID = new global::System.Data.DataColumn("InvoiceAddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressID);
                this.columnContactDetailID = new global::System.Data.DataColumn("ContactDetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactDetailID);
                this.columnEMailAddress = new global::System.Data.DataColumn("EMailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailAddress);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnInitialNote = new global::System.Data.DataColumn("InitialNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialNote);
                this.columnJobRole = new global::System.Data.DataColumn("JobRole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobRole);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnAccountPhoneNumber = new global::System.Data.DataColumn("AccountPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountPhoneNumber);
                this.columnOutletStoreName = new global::System.Data.DataColumn("OutletStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreName);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnOpeningHoursNotes = new global::System.Data.DataColumn("OpeningHoursNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningHoursNotes);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnInvoiceAddressMapReference = new global::System.Data.DataColumn("InvoiceAddressMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressMapReference);
                this.columnInvoiceAddressCounty = new global::System.Data.DataColumn("InvoiceAddressCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressCounty);
                this.columnInvoiceAddressTown = new global::System.Data.DataColumn("InvoiceAddressTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressTown);
                this.columnInvoiceAddressPostCode = new global::System.Data.DataColumn("InvoiceAddressPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressPostCode);
                this.columnOutletStoreAddressLines = new global::System.Data.DataColumn("OutletStoreAddressLines", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreAddressLines);
                this.columnOutletStoreCounty = new global::System.Data.DataColumn("OutletStoreCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreCounty);
                this.columnOutletStoreMapReference = new global::System.Data.DataColumn("OutletStoreMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreMapReference);
                this.columnOutletStorePostCode = new global::System.Data.DataColumn("OutletStorePostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStorePostCode);
                this.columnOutletStoreTown = new global::System.Data.DataColumn("OutletStoreTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreTown);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNoOfUnits = new global::System.Data.DataColumn("NoOfUnits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfUnits);
                this.columnOrderLineStatus = new global::System.Data.DataColumn("OrderLineStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderLineStatus);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnQtyPerUnit = new global::System.Data.DataColumn("QtyPerUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyPerUnit);
                this.columnSpecialInstructions = new global::System.Data.DataColumn("SpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialInstructions);
                this.columnProductDescription = new global::System.Data.DataColumn("ProductDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDescription);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnRRPPerItem = new global::System.Data.DataColumn("RRPPerItem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRPPerItem);
                this.columnVatExempt = new global::System.Data.DataColumn("VatExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatExempt);
                this.columnPaymentTerms = new global::System.Data.DataColumn("PaymentTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTerms);
                this.columnVanDescription = new global::System.Data.DataColumn("VanDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVanDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAlphaID.MaxLength = 20;
                this.columnHeaderSpecialInstructions.MaxLength = 8000;
                this.columnInvoiceNo.MaxLength = 50;
                this.columnCompanyName.MaxLength = 50;
                this.columnCompanyEMailAddress.MaxLength = 50;
                this.columnCompanyOfficePhoneNumber1.MaxLength = 50;
                this.columnCompanyOfficePhoneNumber2.MaxLength = 50;
                this.columnCompanyVatRegistrationNumber.MaxLength = 50;
                this.columnCompanyAddressLines.MaxLength = 8000;
                this.columnCompanyCounty.MaxLength = 50;
                this.columnCompanyMapReference.MaxLength = 50;
                this.columnCompanyPostCode.MaxLength = 8;
                this.columnCompanyTown.MaxLength = 50;
                this.columnCustomerName.MaxLength = 50;
                this.columnCompanyToInvoiceTo.MaxLength = 150;
                this.columnEMailAddress.MaxLength = 50;
                this.columnFirstName.MaxLength = 50;
                this.columnInitialNote.MaxLength = 8000;
                this.columnJobRole.MaxLength = 50;
                this.columnLastName.MaxLength = 50;
                this.columnTitle.MaxLength = 50;
                this.columnAccountPhoneNumber.MaxLength = 20;
                this.columnOutletStoreName.MaxLength = 150;
                this.columnNote.MaxLength = 8000;
                this.columnOpeningHoursNotes.MaxLength = 512;
                this.columnName.MaxLength = 150;
                this.columnInvoiceAddressMapReference.MaxLength = 50;
                this.columnInvoiceAddressCounty.MaxLength = 50;
                this.columnInvoiceAddressTown.MaxLength = 50;
                this.columnInvoiceAddressPostCode.MaxLength = 8;
                this.columnOutletStoreAddressLines.MaxLength = 8000;
                this.columnOutletStoreCounty.MaxLength = 50;
                this.columnOutletStoreMapReference.MaxLength = 50;
                this.columnOutletStorePostCode.MaxLength = 8;
                this.columnOutletStoreTown.MaxLength = 50;
                this.columnSpecialInstructions.MaxLength = 8000;
                this.columnProductDescription.MaxLength = 150;
                this.columnProductCode.MaxLength = 10;
                this.columnPaymentTerms.MaxLength = 128;
                this.columnVanDescription.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNoteRow NewrptDetailsGetDeliveryNoteRow() {
                return ((rptDetailsGetDeliveryNoteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptDetailsGetDeliveryNoteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptDetailsGetDeliveryNoteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptDetailsGetDeliveryNoteRowChanged != null)) {
                    this.rptDetailsGetDeliveryNoteRowChanged(this, new rptDetailsGetDeliveryNoteRowChangeEvent(((rptDetailsGetDeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptDetailsGetDeliveryNoteRowChanging != null)) {
                    this.rptDetailsGetDeliveryNoteRowChanging(this, new rptDetailsGetDeliveryNoteRowChangeEvent(((rptDetailsGetDeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptDetailsGetDeliveryNoteRowDeleted != null)) {
                    this.rptDetailsGetDeliveryNoteRowDeleted(this, new rptDetailsGetDeliveryNoteRowChangeEvent(((rptDetailsGetDeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptDetailsGetDeliveryNoteRowDeleting != null)) {
                    this.rptDetailsGetDeliveryNoteRowDeleting(this, new rptDetailsGetDeliveryNoteRowChangeEvent(((rptDetailsGetDeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptDetailsGetDeliveryNoteRow(rptDetailsGetDeliveryNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptDetailsGetDeliveryNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptGetDeliveryAddressLinesDataTable : global::System.Data.TypedTableBase<rptGetDeliveryAddressLinesRow> {
            
            private global::System.Data.DataColumn columnAddressLine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetDeliveryAddressLinesDataTable() {
                this.TableName = "rptGetDeliveryAddressLines";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetDeliveryAddressLinesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptGetDeliveryAddressLinesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressLineColumn {
                get {
                    return this.columnAddressLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetDeliveryAddressLinesRow this[int index] {
                get {
                    return ((rptGetDeliveryAddressLinesRow)(this.Rows[index]));
                }
            }
            
            public event rptGetDeliveryAddressLinesRowChangeEventHandler rptGetDeliveryAddressLinesRowChanging;
            
            public event rptGetDeliveryAddressLinesRowChangeEventHandler rptGetDeliveryAddressLinesRowChanged;
            
            public event rptGetDeliveryAddressLinesRowChangeEventHandler rptGetDeliveryAddressLinesRowDeleting;
            
            public event rptGetDeliveryAddressLinesRowChangeEventHandler rptGetDeliveryAddressLinesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptGetDeliveryAddressLinesRow(rptGetDeliveryAddressLinesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetDeliveryAddressLinesRow AddrptGetDeliveryAddressLinesRow(string AddressLine) {
                rptGetDeliveryAddressLinesRow rowrptGetDeliveryAddressLinesRow = ((rptGetDeliveryAddressLinesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AddressLine};
                rowrptGetDeliveryAddressLinesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptGetDeliveryAddressLinesRow);
                return rowrptGetDeliveryAddressLinesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptGetDeliveryAddressLinesDataTable cln = ((rptGetDeliveryAddressLinesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptGetDeliveryAddressLinesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddressLine = base.Columns["AddressLine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddressLine = new global::System.Data.DataColumn("AddressLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressLine);
                this.columnAddressLine.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetDeliveryAddressLinesRow NewrptGetDeliveryAddressLinesRow() {
                return ((rptGetDeliveryAddressLinesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptGetDeliveryAddressLinesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptGetDeliveryAddressLinesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptGetDeliveryAddressLinesRowChanged != null)) {
                    this.rptGetDeliveryAddressLinesRowChanged(this, new rptGetDeliveryAddressLinesRowChangeEvent(((rptGetDeliveryAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptGetDeliveryAddressLinesRowChanging != null)) {
                    this.rptGetDeliveryAddressLinesRowChanging(this, new rptGetDeliveryAddressLinesRowChangeEvent(((rptGetDeliveryAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptGetDeliveryAddressLinesRowDeleted != null)) {
                    this.rptGetDeliveryAddressLinesRowDeleted(this, new rptGetDeliveryAddressLinesRowChangeEvent(((rptGetDeliveryAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptGetDeliveryAddressLinesRowDeleting != null)) {
                    this.rptGetDeliveryAddressLinesRowDeleting(this, new rptGetDeliveryAddressLinesRowChangeEvent(((rptGetDeliveryAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptGetDeliveryAddressLinesRow(rptGetDeliveryAddressLinesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptGetDeliveryAddressLinesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptGetFoundationFacilityAddressLinesDataTable : global::System.Data.TypedTableBase<rptGetFoundationFacilityAddressLinesRow> {
            
            private global::System.Data.DataColumn columnAddressLine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetFoundationFacilityAddressLinesDataTable() {
                this.TableName = "rptGetFoundationFacilityAddressLines";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetFoundationFacilityAddressLinesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptGetFoundationFacilityAddressLinesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressLineColumn {
                get {
                    return this.columnAddressLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetFoundationFacilityAddressLinesRow this[int index] {
                get {
                    return ((rptGetFoundationFacilityAddressLinesRow)(this.Rows[index]));
                }
            }
            
            public event rptGetFoundationFacilityAddressLinesRowChangeEventHandler rptGetFoundationFacilityAddressLinesRowChanging;
            
            public event rptGetFoundationFacilityAddressLinesRowChangeEventHandler rptGetFoundationFacilityAddressLinesRowChanged;
            
            public event rptGetFoundationFacilityAddressLinesRowChangeEventHandler rptGetFoundationFacilityAddressLinesRowDeleting;
            
            public event rptGetFoundationFacilityAddressLinesRowChangeEventHandler rptGetFoundationFacilityAddressLinesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptGetFoundationFacilityAddressLinesRow(rptGetFoundationFacilityAddressLinesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetFoundationFacilityAddressLinesRow AddrptGetFoundationFacilityAddressLinesRow(string AddressLine) {
                rptGetFoundationFacilityAddressLinesRow rowrptGetFoundationFacilityAddressLinesRow = ((rptGetFoundationFacilityAddressLinesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AddressLine};
                rowrptGetFoundationFacilityAddressLinesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptGetFoundationFacilityAddressLinesRow);
                return rowrptGetFoundationFacilityAddressLinesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptGetFoundationFacilityAddressLinesDataTable cln = ((rptGetFoundationFacilityAddressLinesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptGetFoundationFacilityAddressLinesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddressLine = base.Columns["AddressLine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddressLine = new global::System.Data.DataColumn("AddressLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressLine);
                this.columnAddressLine.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetFoundationFacilityAddressLinesRow NewrptGetFoundationFacilityAddressLinesRow() {
                return ((rptGetFoundationFacilityAddressLinesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptGetFoundationFacilityAddressLinesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptGetFoundationFacilityAddressLinesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptGetFoundationFacilityAddressLinesRowChanged != null)) {
                    this.rptGetFoundationFacilityAddressLinesRowChanged(this, new rptGetFoundationFacilityAddressLinesRowChangeEvent(((rptGetFoundationFacilityAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptGetFoundationFacilityAddressLinesRowChanging != null)) {
                    this.rptGetFoundationFacilityAddressLinesRowChanging(this, new rptGetFoundationFacilityAddressLinesRowChangeEvent(((rptGetFoundationFacilityAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptGetFoundationFacilityAddressLinesRowDeleted != null)) {
                    this.rptGetFoundationFacilityAddressLinesRowDeleted(this, new rptGetFoundationFacilityAddressLinesRowChangeEvent(((rptGetFoundationFacilityAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptGetFoundationFacilityAddressLinesRowDeleting != null)) {
                    this.rptGetFoundationFacilityAddressLinesRowDeleting(this, new rptGetFoundationFacilityAddressLinesRowChangeEvent(((rptGetFoundationFacilityAddressLinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptGetFoundationFacilityAddressLinesRow(rptGetFoundationFacilityAddressLinesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptGetFoundationFacilityAddressLinesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptGetOrderTotalsDataTable : global::System.Data.TypedTableBase<rptGetOrderTotalsRow> {
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnVatTotal;
            
            private global::System.Data.DataColumn columnNetTotal;
            
            private global::System.Data.DataColumn columnNonVatableTotal;
            
            private global::System.Data.DataColumn columnVatableTotal;
            
            private global::System.Data.DataColumn columnPercentageValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetOrderTotalsDataTable() {
                this.TableName = "rptGetOrderTotals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetOrderTotalsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptGetOrderTotalsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatTotalColumn {
                get {
                    return this.columnVatTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetTotalColumn {
                get {
                    return this.columnNetTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonVatableTotalColumn {
                get {
                    return this.columnNonVatableTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatableTotalColumn {
                get {
                    return this.columnVatableTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageValueColumn {
                get {
                    return this.columnPercentageValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetOrderTotalsRow this[int index] {
                get {
                    return ((rptGetOrderTotalsRow)(this.Rows[index]));
                }
            }
            
            public event rptGetOrderTotalsRowChangeEventHandler rptGetOrderTotalsRowChanging;
            
            public event rptGetOrderTotalsRowChangeEventHandler rptGetOrderTotalsRowChanged;
            
            public event rptGetOrderTotalsRowChangeEventHandler rptGetOrderTotalsRowDeleting;
            
            public event rptGetOrderTotalsRowChangeEventHandler rptGetOrderTotalsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptGetOrderTotalsRow(rptGetOrderTotalsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetOrderTotalsRow AddrptGetOrderTotalsRow(decimal Total, decimal VatTotal, decimal NetTotal, decimal NonVatableTotal, decimal VatableTotal, string PercentageValue) {
                rptGetOrderTotalsRow rowrptGetOrderTotalsRow = ((rptGetOrderTotalsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Total,
                        VatTotal,
                        NetTotal,
                        NonVatableTotal,
                        VatableTotal,
                        PercentageValue};
                rowrptGetOrderTotalsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptGetOrderTotalsRow);
                return rowrptGetOrderTotalsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptGetOrderTotalsDataTable cln = ((rptGetOrderTotalsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptGetOrderTotalsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTotal = base.Columns["Total"];
                this.columnVatTotal = base.Columns["VatTotal"];
                this.columnNetTotal = base.Columns["NetTotal"];
                this.columnNonVatableTotal = base.Columns["NonVatableTotal"];
                this.columnVatableTotal = base.Columns["VatableTotal"];
                this.columnPercentageValue = base.Columns["PercentageValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnVatTotal = new global::System.Data.DataColumn("VatTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatTotal);
                this.columnNetTotal = new global::System.Data.DataColumn("NetTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetTotal);
                this.columnNonVatableTotal = new global::System.Data.DataColumn("NonVatableTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonVatableTotal);
                this.columnVatableTotal = new global::System.Data.DataColumn("VatableTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatableTotal);
                this.columnPercentageValue = new global::System.Data.DataColumn("PercentageValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageValue);
                this.columnTotal.ReadOnly = true;
                this.columnVatTotal.ReadOnly = true;
                this.columnNetTotal.ReadOnly = true;
                this.columnNonVatableTotal.ReadOnly = true;
                this.columnVatableTotal.ReadOnly = true;
                this.columnPercentageValue.ReadOnly = true;
                this.columnPercentageValue.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetOrderTotalsRow NewrptGetOrderTotalsRow() {
                return ((rptGetOrderTotalsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptGetOrderTotalsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptGetOrderTotalsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptGetOrderTotalsRowChanged != null)) {
                    this.rptGetOrderTotalsRowChanged(this, new rptGetOrderTotalsRowChangeEvent(((rptGetOrderTotalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptGetOrderTotalsRowChanging != null)) {
                    this.rptGetOrderTotalsRowChanging(this, new rptGetOrderTotalsRowChangeEvent(((rptGetOrderTotalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptGetOrderTotalsRowDeleted != null)) {
                    this.rptGetOrderTotalsRowDeleted(this, new rptGetOrderTotalsRowChangeEvent(((rptGetOrderTotalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptGetOrderTotalsRowDeleting != null)) {
                    this.rptGetOrderTotalsRowDeleting(this, new rptGetOrderTotalsRowChangeEvent(((rptGetOrderTotalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptGetOrderTotalsRow(rptGetOrderTotalsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptGetOrderTotalsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptDetailsGetDeliveryNote1DataTable : global::System.Data.TypedTableBase<rptDetailsGetDeliveryNote1Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnAlphaPrefixOrPostFix;
            
            private global::System.Data.DataColumn columnAlphaID;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            private global::System.Data.DataColumn columnOrderStatus;
            
            private global::System.Data.DataColumn columnHeaderSpecialInstructions;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyEMailAddress;
            
            private global::System.Data.DataColumn columnCompanyOfficePhoneNumber1;
            
            private global::System.Data.DataColumn columnCompanyOfficePhoneNumber2;
            
            private global::System.Data.DataColumn columnCompanyVatRegistrationNumber;
            
            private global::System.Data.DataColumn columnCompanyAddressLines;
            
            private global::System.Data.DataColumn columnCompanyCounty;
            
            private global::System.Data.DataColumn columnCompanyMapReference;
            
            private global::System.Data.DataColumn columnCompanyPostCode;
            
            private global::System.Data.DataColumn columnCompanyTown;
            
            private global::System.Data.DataColumn columnCompanyAddressType;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCompanyToInvoiceTo;
            
            private global::System.Data.DataColumn columnInvoiceAddressID;
            
            private global::System.Data.DataColumn columnContactDetailID;
            
            private global::System.Data.DataColumn columnEMailAddress;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnInitialNote;
            
            private global::System.Data.DataColumn columnJobRole;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnAccountPhoneNumber;
            
            private global::System.Data.DataColumn columnOutletStoreName;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnOpeningHoursNotes;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnInvoiceAddressMapReference;
            
            private global::System.Data.DataColumn columnInvoiceAddressCounty;
            
            private global::System.Data.DataColumn columnInvoiceAddressTown;
            
            private global::System.Data.DataColumn columnInvoiceAddressPostCode;
            
            private global::System.Data.DataColumn columnOutletStoreAddressLines;
            
            private global::System.Data.DataColumn columnOutletStoreCounty;
            
            private global::System.Data.DataColumn columnOutletStoreMapReference;
            
            private global::System.Data.DataColumn columnOutletStorePostCode;
            
            private global::System.Data.DataColumn columnOutletStoreTown;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNoOfUnits;
            
            private global::System.Data.DataColumn columnOrderLineStatus;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnQtyPerUnit;
            
            private global::System.Data.DataColumn columnSpecialInstructions;
            
            private global::System.Data.DataColumn columnProductDescription;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnRRPPerItem;
            
            private global::System.Data.DataColumn columnVatExempt;
            
            private global::System.Data.DataColumn columnPaymentTerms;
            
            private global::System.Data.DataColumn columnVanDescription;
            
            private global::System.Data.DataColumn columnDeliveryNoteNo;
            
            private global::System.Data.DataColumn columnInvoiceProformaNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNote1DataTable() {
                this.TableName = "rptDetailsGetDeliveryNote1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDetailsGetDeliveryNote1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptDetailsGetDeliveryNote1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlphaPrefixOrPostFixColumn {
                get {
                    return this.columnAlphaPrefixOrPostFix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlphaIDColumn {
                get {
                    return this.columnAlphaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderStatusColumn {
                get {
                    return this.columnOrderStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderSpecialInstructionsColumn {
                get {
                    return this.columnHeaderSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyEMailAddressColumn {
                get {
                    return this.columnCompanyEMailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyOfficePhoneNumber1Column {
                get {
                    return this.columnCompanyOfficePhoneNumber1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyOfficePhoneNumber2Column {
                get {
                    return this.columnCompanyOfficePhoneNumber2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyVatRegistrationNumberColumn {
                get {
                    return this.columnCompanyVatRegistrationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressLinesColumn {
                get {
                    return this.columnCompanyAddressLines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyCountyColumn {
                get {
                    return this.columnCompanyCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyMapReferenceColumn {
                get {
                    return this.columnCompanyMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyPostCodeColumn {
                get {
                    return this.columnCompanyPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTownColumn {
                get {
                    return this.columnCompanyTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressTypeColumn {
                get {
                    return this.columnCompanyAddressType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyToInvoiceToColumn {
                get {
                    return this.columnCompanyToInvoiceTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressIDColumn {
                get {
                    return this.columnInvoiceAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactDetailIDColumn {
                get {
                    return this.columnContactDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMailAddressColumn {
                get {
                    return this.columnEMailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InitialNoteColumn {
                get {
                    return this.columnInitialNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobRoleColumn {
                get {
                    return this.columnJobRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountPhoneNumberColumn {
                get {
                    return this.columnAccountPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreNameColumn {
                get {
                    return this.columnOutletStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningHoursNotesColumn {
                get {
                    return this.columnOpeningHoursNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressMapReferenceColumn {
                get {
                    return this.columnInvoiceAddressMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressCountyColumn {
                get {
                    return this.columnInvoiceAddressCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressTownColumn {
                get {
                    return this.columnInvoiceAddressTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressPostCodeColumn {
                get {
                    return this.columnInvoiceAddressPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreAddressLinesColumn {
                get {
                    return this.columnOutletStoreAddressLines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreCountyColumn {
                get {
                    return this.columnOutletStoreCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreMapReferenceColumn {
                get {
                    return this.columnOutletStoreMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStorePostCodeColumn {
                get {
                    return this.columnOutletStorePostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreTownColumn {
                get {
                    return this.columnOutletStoreTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoOfUnitsColumn {
                get {
                    return this.columnNoOfUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderLineStatusColumn {
                get {
                    return this.columnOrderLineStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyPerUnitColumn {
                get {
                    return this.columnQtyPerUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialInstructionsColumn {
                get {
                    return this.columnSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductDescriptionColumn {
                get {
                    return this.columnProductDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RRPPerItemColumn {
                get {
                    return this.columnRRPPerItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatExemptColumn {
                get {
                    return this.columnVatExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentTermsColumn {
                get {
                    return this.columnPaymentTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VanDescriptionColumn {
                get {
                    return this.columnVanDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryNoteNoColumn {
                get {
                    return this.columnDeliveryNoteNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceProformaNoColumn {
                get {
                    return this.columnInvoiceProformaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNote1Row this[int index] {
                get {
                    return ((rptDetailsGetDeliveryNote1Row)(this.Rows[index]));
                }
            }
            
            public event rptDetailsGetDeliveryNote1RowChangeEventHandler rptDetailsGetDeliveryNote1RowChanging;
            
            public event rptDetailsGetDeliveryNote1RowChangeEventHandler rptDetailsGetDeliveryNote1RowChanged;
            
            public event rptDetailsGetDeliveryNote1RowChangeEventHandler rptDetailsGetDeliveryNote1RowDeleting;
            
            public event rptDetailsGetDeliveryNote1RowChangeEventHandler rptDetailsGetDeliveryNote1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptDetailsGetDeliveryNote1Row(rptDetailsGetDeliveryNote1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNote1Row AddrptDetailsGetDeliveryNote1Row(
                        int CustomerID, 
                        short AlphaPrefixOrPostFix, 
                        string AlphaID, 
                        System.DateTime OrderDate, 
                        System.DateTime DeliveryDate, 
                        short OrderStatus, 
                        string HeaderSpecialInstructions, 
                        string InvoiceNo, 
                        string CompanyName, 
                        string CompanyEMailAddress, 
                        string CompanyOfficePhoneNumber1, 
                        string CompanyOfficePhoneNumber2, 
                        string CompanyVatRegistrationNumber, 
                        string CompanyAddressLines, 
                        string CompanyCounty, 
                        string CompanyMapReference, 
                        string CompanyPostCode, 
                        string CompanyTown, 
                        short CompanyAddressType, 
                        string CustomerName, 
                        string CompanyToInvoiceTo, 
                        int InvoiceAddressID, 
                        int ContactDetailID, 
                        string EMailAddress, 
                        string FirstName, 
                        string InitialNote, 
                        string JobRole, 
                        string LastName, 
                        string Title, 
                        string AccountPhoneNumber, 
                        string OutletStoreName, 
                        string Note, 
                        string OpeningHoursNotes, 
                        string Name, 
                        string InvoiceAddressMapReference, 
                        string InvoiceAddressCounty, 
                        string InvoiceAddressTown, 
                        string InvoiceAddressPostCode, 
                        string OutletStoreAddressLines, 
                        string OutletStoreCounty, 
                        string OutletStoreMapReference, 
                        string OutletStorePostCode, 
                        string OutletStoreTown, 
                        double Discount, 
                        int NoOfUnits, 
                        short OrderLineStatus, 
                        decimal Price, 
                        int QtyPerUnit, 
                        string SpecialInstructions, 
                        string ProductDescription, 
                        string ProductCode, 
                        decimal RRPPerItem, 
                        bool VatExempt, 
                        string PaymentTerms, 
                        string VanDescription, 
                        string DeliveryNoteNo, 
                        string InvoiceProformaNo) {
                rptDetailsGetDeliveryNote1Row rowrptDetailsGetDeliveryNote1Row = ((rptDetailsGetDeliveryNote1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CustomerID,
                        AlphaPrefixOrPostFix,
                        AlphaID,
                        OrderDate,
                        DeliveryDate,
                        OrderStatus,
                        HeaderSpecialInstructions,
                        InvoiceNo,
                        CompanyName,
                        CompanyEMailAddress,
                        CompanyOfficePhoneNumber1,
                        CompanyOfficePhoneNumber2,
                        CompanyVatRegistrationNumber,
                        CompanyAddressLines,
                        CompanyCounty,
                        CompanyMapReference,
                        CompanyPostCode,
                        CompanyTown,
                        CompanyAddressType,
                        CustomerName,
                        CompanyToInvoiceTo,
                        InvoiceAddressID,
                        ContactDetailID,
                        EMailAddress,
                        FirstName,
                        InitialNote,
                        JobRole,
                        LastName,
                        Title,
                        AccountPhoneNumber,
                        OutletStoreName,
                        Note,
                        OpeningHoursNotes,
                        Name,
                        InvoiceAddressMapReference,
                        InvoiceAddressCounty,
                        InvoiceAddressTown,
                        InvoiceAddressPostCode,
                        OutletStoreAddressLines,
                        OutletStoreCounty,
                        OutletStoreMapReference,
                        OutletStorePostCode,
                        OutletStoreTown,
                        Discount,
                        NoOfUnits,
                        OrderLineStatus,
                        Price,
                        QtyPerUnit,
                        SpecialInstructions,
                        ProductDescription,
                        ProductCode,
                        RRPPerItem,
                        VatExempt,
                        PaymentTerms,
                        VanDescription,
                        DeliveryNoteNo,
                        InvoiceProformaNo};
                rowrptDetailsGetDeliveryNote1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptDetailsGetDeliveryNote1Row);
                return rowrptDetailsGetDeliveryNote1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNote1Row FindByID(int ID) {
                return ((rptDetailsGetDeliveryNote1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptDetailsGetDeliveryNote1DataTable cln = ((rptDetailsGetDeliveryNote1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptDetailsGetDeliveryNote1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnAlphaPrefixOrPostFix = base.Columns["AlphaPrefixOrPostFix"];
                this.columnAlphaID = base.Columns["AlphaID"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnOrderStatus = base.Columns["OrderStatus"];
                this.columnHeaderSpecialInstructions = base.Columns["HeaderSpecialInstructions"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyEMailAddress = base.Columns["CompanyEMailAddress"];
                this.columnCompanyOfficePhoneNumber1 = base.Columns["CompanyOfficePhoneNumber1"];
                this.columnCompanyOfficePhoneNumber2 = base.Columns["CompanyOfficePhoneNumber2"];
                this.columnCompanyVatRegistrationNumber = base.Columns["CompanyVatRegistrationNumber"];
                this.columnCompanyAddressLines = base.Columns["CompanyAddressLines"];
                this.columnCompanyCounty = base.Columns["CompanyCounty"];
                this.columnCompanyMapReference = base.Columns["CompanyMapReference"];
                this.columnCompanyPostCode = base.Columns["CompanyPostCode"];
                this.columnCompanyTown = base.Columns["CompanyTown"];
                this.columnCompanyAddressType = base.Columns["CompanyAddressType"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCompanyToInvoiceTo = base.Columns["CompanyToInvoiceTo"];
                this.columnInvoiceAddressID = base.Columns["InvoiceAddressID"];
                this.columnContactDetailID = base.Columns["ContactDetailID"];
                this.columnEMailAddress = base.Columns["EMailAddress"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnInitialNote = base.Columns["InitialNote"];
                this.columnJobRole = base.Columns["JobRole"];
                this.columnLastName = base.Columns["LastName"];
                this.columnTitle = base.Columns["Title"];
                this.columnAccountPhoneNumber = base.Columns["AccountPhoneNumber"];
                this.columnOutletStoreName = base.Columns["OutletStoreName"];
                this.columnNote = base.Columns["Note"];
                this.columnOpeningHoursNotes = base.Columns["OpeningHoursNotes"];
                this.columnName = base.Columns["Name"];
                this.columnInvoiceAddressMapReference = base.Columns["InvoiceAddressMapReference"];
                this.columnInvoiceAddressCounty = base.Columns["InvoiceAddressCounty"];
                this.columnInvoiceAddressTown = base.Columns["InvoiceAddressTown"];
                this.columnInvoiceAddressPostCode = base.Columns["InvoiceAddressPostCode"];
                this.columnOutletStoreAddressLines = base.Columns["OutletStoreAddressLines"];
                this.columnOutletStoreCounty = base.Columns["OutletStoreCounty"];
                this.columnOutletStoreMapReference = base.Columns["OutletStoreMapReference"];
                this.columnOutletStorePostCode = base.Columns["OutletStorePostCode"];
                this.columnOutletStoreTown = base.Columns["OutletStoreTown"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNoOfUnits = base.Columns["NoOfUnits"];
                this.columnOrderLineStatus = base.Columns["OrderLineStatus"];
                this.columnPrice = base.Columns["Price"];
                this.columnQtyPerUnit = base.Columns["QtyPerUnit"];
                this.columnSpecialInstructions = base.Columns["SpecialInstructions"];
                this.columnProductDescription = base.Columns["ProductDescription"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnRRPPerItem = base.Columns["RRPPerItem"];
                this.columnVatExempt = base.Columns["VatExempt"];
                this.columnPaymentTerms = base.Columns["PaymentTerms"];
                this.columnVanDescription = base.Columns["VanDescription"];
                this.columnDeliveryNoteNo = base.Columns["DeliveryNoteNo"];
                this.columnInvoiceProformaNo = base.Columns["InvoiceProformaNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnAlphaPrefixOrPostFix = new global::System.Data.DataColumn("AlphaPrefixOrPostFix", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlphaPrefixOrPostFix);
                this.columnAlphaID = new global::System.Data.DataColumn("AlphaID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlphaID);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnOrderStatus = new global::System.Data.DataColumn("OrderStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderStatus);
                this.columnHeaderSpecialInstructions = new global::System.Data.DataColumn("HeaderSpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderSpecialInstructions);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyEMailAddress = new global::System.Data.DataColumn("CompanyEMailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyEMailAddress);
                this.columnCompanyOfficePhoneNumber1 = new global::System.Data.DataColumn("CompanyOfficePhoneNumber1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyOfficePhoneNumber1);
                this.columnCompanyOfficePhoneNumber2 = new global::System.Data.DataColumn("CompanyOfficePhoneNumber2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyOfficePhoneNumber2);
                this.columnCompanyVatRegistrationNumber = new global::System.Data.DataColumn("CompanyVatRegistrationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyVatRegistrationNumber);
                this.columnCompanyAddressLines = new global::System.Data.DataColumn("CompanyAddressLines", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddressLines);
                this.columnCompanyCounty = new global::System.Data.DataColumn("CompanyCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCounty);
                this.columnCompanyMapReference = new global::System.Data.DataColumn("CompanyMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyMapReference);
                this.columnCompanyPostCode = new global::System.Data.DataColumn("CompanyPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyPostCode);
                this.columnCompanyTown = new global::System.Data.DataColumn("CompanyTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyTown);
                this.columnCompanyAddressType = new global::System.Data.DataColumn("CompanyAddressType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddressType);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCompanyToInvoiceTo = new global::System.Data.DataColumn("CompanyToInvoiceTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyToInvoiceTo);
                this.columnInvoiceAddressID = new global::System.Data.DataColumn("InvoiceAddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressID);
                this.columnContactDetailID = new global::System.Data.DataColumn("ContactDetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactDetailID);
                this.columnEMailAddress = new global::System.Data.DataColumn("EMailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailAddress);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnInitialNote = new global::System.Data.DataColumn("InitialNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialNote);
                this.columnJobRole = new global::System.Data.DataColumn("JobRole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobRole);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnAccountPhoneNumber = new global::System.Data.DataColumn("AccountPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountPhoneNumber);
                this.columnOutletStoreName = new global::System.Data.DataColumn("OutletStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreName);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnOpeningHoursNotes = new global::System.Data.DataColumn("OpeningHoursNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningHoursNotes);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnInvoiceAddressMapReference = new global::System.Data.DataColumn("InvoiceAddressMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressMapReference);
                this.columnInvoiceAddressCounty = new global::System.Data.DataColumn("InvoiceAddressCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressCounty);
                this.columnInvoiceAddressTown = new global::System.Data.DataColumn("InvoiceAddressTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressTown);
                this.columnInvoiceAddressPostCode = new global::System.Data.DataColumn("InvoiceAddressPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressPostCode);
                this.columnOutletStoreAddressLines = new global::System.Data.DataColumn("OutletStoreAddressLines", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreAddressLines);
                this.columnOutletStoreCounty = new global::System.Data.DataColumn("OutletStoreCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreCounty);
                this.columnOutletStoreMapReference = new global::System.Data.DataColumn("OutletStoreMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreMapReference);
                this.columnOutletStorePostCode = new global::System.Data.DataColumn("OutletStorePostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStorePostCode);
                this.columnOutletStoreTown = new global::System.Data.DataColumn("OutletStoreTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreTown);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNoOfUnits = new global::System.Data.DataColumn("NoOfUnits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfUnits);
                this.columnOrderLineStatus = new global::System.Data.DataColumn("OrderLineStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderLineStatus);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnQtyPerUnit = new global::System.Data.DataColumn("QtyPerUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyPerUnit);
                this.columnSpecialInstructions = new global::System.Data.DataColumn("SpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialInstructions);
                this.columnProductDescription = new global::System.Data.DataColumn("ProductDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDescription);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnRRPPerItem = new global::System.Data.DataColumn("RRPPerItem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRPPerItem);
                this.columnVatExempt = new global::System.Data.DataColumn("VatExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatExempt);
                this.columnPaymentTerms = new global::System.Data.DataColumn("PaymentTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTerms);
                this.columnVanDescription = new global::System.Data.DataColumn("VanDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVanDescription);
                this.columnDeliveryNoteNo = new global::System.Data.DataColumn("DeliveryNoteNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryNoteNo);
                this.columnInvoiceProformaNo = new global::System.Data.DataColumn("InvoiceProformaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceProformaNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAlphaID.MaxLength = 20;
                this.columnHeaderSpecialInstructions.MaxLength = 8000;
                this.columnInvoiceNo.MaxLength = 50;
                this.columnCompanyName.MaxLength = 50;
                this.columnCompanyEMailAddress.MaxLength = 50;
                this.columnCompanyOfficePhoneNumber1.MaxLength = 50;
                this.columnCompanyOfficePhoneNumber2.MaxLength = 50;
                this.columnCompanyVatRegistrationNumber.MaxLength = 50;
                this.columnCompanyAddressLines.MaxLength = 8000;
                this.columnCompanyCounty.MaxLength = 50;
                this.columnCompanyMapReference.MaxLength = 50;
                this.columnCompanyPostCode.MaxLength = 8;
                this.columnCompanyTown.MaxLength = 50;
                this.columnCustomerName.MaxLength = 50;
                this.columnCompanyToInvoiceTo.MaxLength = 150;
                this.columnEMailAddress.MaxLength = 50;
                this.columnFirstName.MaxLength = 50;
                this.columnInitialNote.MaxLength = 8000;
                this.columnJobRole.MaxLength = 50;
                this.columnLastName.MaxLength = 50;
                this.columnTitle.MaxLength = 50;
                this.columnAccountPhoneNumber.MaxLength = 20;
                this.columnOutletStoreName.MaxLength = 150;
                this.columnNote.MaxLength = 8000;
                this.columnOpeningHoursNotes.MaxLength = 512;
                this.columnName.MaxLength = 150;
                this.columnInvoiceAddressMapReference.MaxLength = 50;
                this.columnInvoiceAddressCounty.MaxLength = 50;
                this.columnInvoiceAddressTown.MaxLength = 50;
                this.columnInvoiceAddressPostCode.MaxLength = 8;
                this.columnOutletStoreAddressLines.MaxLength = 8000;
                this.columnOutletStoreCounty.MaxLength = 50;
                this.columnOutletStoreMapReference.MaxLength = 50;
                this.columnOutletStorePostCode.MaxLength = 8;
                this.columnOutletStoreTown.MaxLength = 50;
                this.columnSpecialInstructions.MaxLength = 8000;
                this.columnProductDescription.MaxLength = 150;
                this.columnProductCode.MaxLength = 10;
                this.columnPaymentTerms.MaxLength = 128;
                this.columnVanDescription.MaxLength = 150;
                this.columnDeliveryNoteNo.MaxLength = 50;
                this.columnInvoiceProformaNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNote1Row NewrptDetailsGetDeliveryNote1Row() {
                return ((rptDetailsGetDeliveryNote1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptDetailsGetDeliveryNote1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptDetailsGetDeliveryNote1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptDetailsGetDeliveryNote1RowChanged != null)) {
                    this.rptDetailsGetDeliveryNote1RowChanged(this, new rptDetailsGetDeliveryNote1RowChangeEvent(((rptDetailsGetDeliveryNote1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptDetailsGetDeliveryNote1RowChanging != null)) {
                    this.rptDetailsGetDeliveryNote1RowChanging(this, new rptDetailsGetDeliveryNote1RowChangeEvent(((rptDetailsGetDeliveryNote1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptDetailsGetDeliveryNote1RowDeleted != null)) {
                    this.rptDetailsGetDeliveryNote1RowDeleted(this, new rptDetailsGetDeliveryNote1RowChangeEvent(((rptDetailsGetDeliveryNote1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptDetailsGetDeliveryNote1RowDeleting != null)) {
                    this.rptDetailsGetDeliveryNote1RowDeleting(this, new rptDetailsGetDeliveryNote1RowChangeEvent(((rptDetailsGetDeliveryNote1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptDetailsGetDeliveryNote1Row(rptDetailsGetDeliveryNote1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptDetailsGetDeliveryNote1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptGetAddressLinesForInvoiceDataTable : global::System.Data.TypedTableBase<rptGetAddressLinesForInvoiceRow> {
            
            private global::System.Data.DataColumn columnAddressLine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetAddressLinesForInvoiceDataTable() {
                this.TableName = "rptGetAddressLinesForInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetAddressLinesForInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptGetAddressLinesForInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressLineColumn {
                get {
                    return this.columnAddressLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetAddressLinesForInvoiceRow this[int index] {
                get {
                    return ((rptGetAddressLinesForInvoiceRow)(this.Rows[index]));
                }
            }
            
            public event rptGetAddressLinesForInvoiceRowChangeEventHandler rptGetAddressLinesForInvoiceRowChanging;
            
            public event rptGetAddressLinesForInvoiceRowChangeEventHandler rptGetAddressLinesForInvoiceRowChanged;
            
            public event rptGetAddressLinesForInvoiceRowChangeEventHandler rptGetAddressLinesForInvoiceRowDeleting;
            
            public event rptGetAddressLinesForInvoiceRowChangeEventHandler rptGetAddressLinesForInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptGetAddressLinesForInvoiceRow(rptGetAddressLinesForInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetAddressLinesForInvoiceRow AddrptGetAddressLinesForInvoiceRow(string AddressLine) {
                rptGetAddressLinesForInvoiceRow rowrptGetAddressLinesForInvoiceRow = ((rptGetAddressLinesForInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AddressLine};
                rowrptGetAddressLinesForInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptGetAddressLinesForInvoiceRow);
                return rowrptGetAddressLinesForInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptGetAddressLinesForInvoiceDataTable cln = ((rptGetAddressLinesForInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptGetAddressLinesForInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddressLine = base.Columns["AddressLine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddressLine = new global::System.Data.DataColumn("AddressLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressLine);
                this.columnAddressLine.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetAddressLinesForInvoiceRow NewrptGetAddressLinesForInvoiceRow() {
                return ((rptGetAddressLinesForInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptGetAddressLinesForInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptGetAddressLinesForInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptGetAddressLinesForInvoiceRowChanged != null)) {
                    this.rptGetAddressLinesForInvoiceRowChanged(this, new rptGetAddressLinesForInvoiceRowChangeEvent(((rptGetAddressLinesForInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptGetAddressLinesForInvoiceRowChanging != null)) {
                    this.rptGetAddressLinesForInvoiceRowChanging(this, new rptGetAddressLinesForInvoiceRowChangeEvent(((rptGetAddressLinesForInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptGetAddressLinesForInvoiceRowDeleted != null)) {
                    this.rptGetAddressLinesForInvoiceRowDeleted(this, new rptGetAddressLinesForInvoiceRowChangeEvent(((rptGetAddressLinesForInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptGetAddressLinesForInvoiceRowDeleting != null)) {
                    this.rptGetAddressLinesForInvoiceRowDeleting(this, new rptGetAddressLinesForInvoiceRowChangeEvent(((rptGetAddressLinesForInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptGetAddressLinesForInvoiceRow(rptGetAddressLinesForInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptGetAddressLinesForInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptDetailsGetInvoiceDataTable : global::System.Data.TypedTableBase<rptDetailsGetInvoiceRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnAlphaPrefixOrPostFix;
            
            private global::System.Data.DataColumn columnAlphaID;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            private global::System.Data.DataColumn columnOrderStatus;
            
            private global::System.Data.DataColumn columnHeaderSpecialInstructions;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyEMailAddress;
            
            private global::System.Data.DataColumn columnCompanyOfficePhoneNumber1;
            
            private global::System.Data.DataColumn columnCompanyOfficePhoneNumber2;
            
            private global::System.Data.DataColumn columnCompanyVatRegistrationNumber;
            
            private global::System.Data.DataColumn columnCompanyAddressLines;
            
            private global::System.Data.DataColumn columnCompanyCounty;
            
            private global::System.Data.DataColumn columnCompanyMapReference;
            
            private global::System.Data.DataColumn columnCompanyPostCode;
            
            private global::System.Data.DataColumn columnCompanyTown;
            
            private global::System.Data.DataColumn columnCompanyAddressType;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCompanyToInvoiceTo;
            
            private global::System.Data.DataColumn columnInvoiceAddressID;
            
            private global::System.Data.DataColumn columnContactDetailID;
            
            private global::System.Data.DataColumn columnEMailAddress;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnInitialNote;
            
            private global::System.Data.DataColumn columnJobRole;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnAccountPhoneNumber;
            
            private global::System.Data.DataColumn columnOutletStoreName;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnOpeningHoursNotes;
            
            private global::System.Data.DataColumn columnInvoiceAddressMapReference;
            
            private global::System.Data.DataColumn columnInvoiceAddressCounty;
            
            private global::System.Data.DataColumn columnInvoiceAddressTown;
            
            private global::System.Data.DataColumn columnInvoiceAddressPostCode;
            
            private global::System.Data.DataColumn columnOutletStoreAddressLines;
            
            private global::System.Data.DataColumn columnOutletStoreCounty;
            
            private global::System.Data.DataColumn columnOutletStoreMapReference;
            
            private global::System.Data.DataColumn columnOutletStorePostCode;
            
            private global::System.Data.DataColumn columnOutletStoreTown;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNoOfUnits;
            
            private global::System.Data.DataColumn columnOrderLineStatus;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnQtyPerUnit;
            
            private global::System.Data.DataColumn columnSpecialInstructions;
            
            private global::System.Data.DataColumn columnProductDescription;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnRRPPerItem;
            
            private global::System.Data.DataColumn columnVatExempt;
            
            private global::System.Data.DataColumn columnPaymentTerms;
            
            private global::System.Data.DataColumn columnVanDescription;
            
            private global::System.Data.DataColumn columnDeliveryNoteNo;
            
            private global::System.Data.DataColumn columnInvoiceProformaNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetInvoiceDataTable() {
                this.TableName = "rptDetailsGetInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDetailsGetInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptDetailsGetInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlphaPrefixOrPostFixColumn {
                get {
                    return this.columnAlphaPrefixOrPostFix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlphaIDColumn {
                get {
                    return this.columnAlphaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderStatusColumn {
                get {
                    return this.columnOrderStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderSpecialInstructionsColumn {
                get {
                    return this.columnHeaderSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyEMailAddressColumn {
                get {
                    return this.columnCompanyEMailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyOfficePhoneNumber1Column {
                get {
                    return this.columnCompanyOfficePhoneNumber1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyOfficePhoneNumber2Column {
                get {
                    return this.columnCompanyOfficePhoneNumber2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyVatRegistrationNumberColumn {
                get {
                    return this.columnCompanyVatRegistrationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressLinesColumn {
                get {
                    return this.columnCompanyAddressLines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyCountyColumn {
                get {
                    return this.columnCompanyCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyMapReferenceColumn {
                get {
                    return this.columnCompanyMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyPostCodeColumn {
                get {
                    return this.columnCompanyPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTownColumn {
                get {
                    return this.columnCompanyTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressTypeColumn {
                get {
                    return this.columnCompanyAddressType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyToInvoiceToColumn {
                get {
                    return this.columnCompanyToInvoiceTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressIDColumn {
                get {
                    return this.columnInvoiceAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactDetailIDColumn {
                get {
                    return this.columnContactDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMailAddressColumn {
                get {
                    return this.columnEMailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InitialNoteColumn {
                get {
                    return this.columnInitialNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobRoleColumn {
                get {
                    return this.columnJobRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountPhoneNumberColumn {
                get {
                    return this.columnAccountPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreNameColumn {
                get {
                    return this.columnOutletStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningHoursNotesColumn {
                get {
                    return this.columnOpeningHoursNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressMapReferenceColumn {
                get {
                    return this.columnInvoiceAddressMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressCountyColumn {
                get {
                    return this.columnInvoiceAddressCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressTownColumn {
                get {
                    return this.columnInvoiceAddressTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceAddressPostCodeColumn {
                get {
                    return this.columnInvoiceAddressPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreAddressLinesColumn {
                get {
                    return this.columnOutletStoreAddressLines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreCountyColumn {
                get {
                    return this.columnOutletStoreCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreMapReferenceColumn {
                get {
                    return this.columnOutletStoreMapReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStorePostCodeColumn {
                get {
                    return this.columnOutletStorePostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletStoreTownColumn {
                get {
                    return this.columnOutletStoreTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoOfUnitsColumn {
                get {
                    return this.columnNoOfUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderLineStatusColumn {
                get {
                    return this.columnOrderLineStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyPerUnitColumn {
                get {
                    return this.columnQtyPerUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialInstructionsColumn {
                get {
                    return this.columnSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductDescriptionColumn {
                get {
                    return this.columnProductDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RRPPerItemColumn {
                get {
                    return this.columnRRPPerItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatExemptColumn {
                get {
                    return this.columnVatExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentTermsColumn {
                get {
                    return this.columnPaymentTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VanDescriptionColumn {
                get {
                    return this.columnVanDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryNoteNoColumn {
                get {
                    return this.columnDeliveryNoteNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceProformaNoColumn {
                get {
                    return this.columnInvoiceProformaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetInvoiceRow this[int index] {
                get {
                    return ((rptDetailsGetInvoiceRow)(this.Rows[index]));
                }
            }
            
            public event rptDetailsGetInvoiceRowChangeEventHandler rptDetailsGetInvoiceRowChanging;
            
            public event rptDetailsGetInvoiceRowChangeEventHandler rptDetailsGetInvoiceRowChanged;
            
            public event rptDetailsGetInvoiceRowChangeEventHandler rptDetailsGetInvoiceRowDeleting;
            
            public event rptDetailsGetInvoiceRowChangeEventHandler rptDetailsGetInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptDetailsGetInvoiceRow(rptDetailsGetInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetInvoiceRow AddrptDetailsGetInvoiceRow(
                        int CustomerID, 
                        short AlphaPrefixOrPostFix, 
                        string AlphaID, 
                        System.DateTime OrderDate, 
                        System.DateTime DeliveryDate, 
                        short OrderStatus, 
                        string HeaderSpecialInstructions, 
                        string InvoiceNo, 
                        string CompanyName, 
                        string CompanyEMailAddress, 
                        string CompanyOfficePhoneNumber1, 
                        string CompanyOfficePhoneNumber2, 
                        string CompanyVatRegistrationNumber, 
                        string CompanyAddressLines, 
                        string CompanyCounty, 
                        string CompanyMapReference, 
                        string CompanyPostCode, 
                        string CompanyTown, 
                        short CompanyAddressType, 
                        string CustomerName, 
                        string CompanyToInvoiceTo, 
                        int InvoiceAddressID, 
                        int ContactDetailID, 
                        string EMailAddress, 
                        string FirstName, 
                        string InitialNote, 
                        string JobRole, 
                        string LastName, 
                        string Title, 
                        string AccountPhoneNumber, 
                        string OutletStoreName, 
                        string Note, 
                        string OpeningHoursNotes, 
                        string InvoiceAddressMapReference, 
                        string InvoiceAddressCounty, 
                        string InvoiceAddressTown, 
                        string InvoiceAddressPostCode, 
                        string OutletStoreAddressLines, 
                        string OutletStoreCounty, 
                        string OutletStoreMapReference, 
                        string OutletStorePostCode, 
                        string OutletStoreTown, 
                        double Discount, 
                        int NoOfUnits, 
                        short OrderLineStatus, 
                        decimal Price, 
                        int QtyPerUnit, 
                        string SpecialInstructions, 
                        string ProductDescription, 
                        string ProductCode, 
                        decimal RRPPerItem, 
                        bool VatExempt, 
                        string PaymentTerms, 
                        string VanDescription, 
                        string DeliveryNoteNo, 
                        string InvoiceProformaNo) {
                rptDetailsGetInvoiceRow rowrptDetailsGetInvoiceRow = ((rptDetailsGetInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CustomerID,
                        AlphaPrefixOrPostFix,
                        AlphaID,
                        OrderDate,
                        DeliveryDate,
                        OrderStatus,
                        HeaderSpecialInstructions,
                        InvoiceNo,
                        CompanyName,
                        CompanyEMailAddress,
                        CompanyOfficePhoneNumber1,
                        CompanyOfficePhoneNumber2,
                        CompanyVatRegistrationNumber,
                        CompanyAddressLines,
                        CompanyCounty,
                        CompanyMapReference,
                        CompanyPostCode,
                        CompanyTown,
                        CompanyAddressType,
                        CustomerName,
                        CompanyToInvoiceTo,
                        InvoiceAddressID,
                        ContactDetailID,
                        EMailAddress,
                        FirstName,
                        InitialNote,
                        JobRole,
                        LastName,
                        Title,
                        AccountPhoneNumber,
                        OutletStoreName,
                        Note,
                        OpeningHoursNotes,
                        InvoiceAddressMapReference,
                        InvoiceAddressCounty,
                        InvoiceAddressTown,
                        InvoiceAddressPostCode,
                        OutletStoreAddressLines,
                        OutletStoreCounty,
                        OutletStoreMapReference,
                        OutletStorePostCode,
                        OutletStoreTown,
                        Discount,
                        NoOfUnits,
                        OrderLineStatus,
                        Price,
                        QtyPerUnit,
                        SpecialInstructions,
                        ProductDescription,
                        ProductCode,
                        RRPPerItem,
                        VatExempt,
                        PaymentTerms,
                        VanDescription,
                        DeliveryNoteNo,
                        InvoiceProformaNo};
                rowrptDetailsGetInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptDetailsGetInvoiceRow);
                return rowrptDetailsGetInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetInvoiceRow FindByID(int ID) {
                return ((rptDetailsGetInvoiceRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptDetailsGetInvoiceDataTable cln = ((rptDetailsGetInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptDetailsGetInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnAlphaPrefixOrPostFix = base.Columns["AlphaPrefixOrPostFix"];
                this.columnAlphaID = base.Columns["AlphaID"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnOrderStatus = base.Columns["OrderStatus"];
                this.columnHeaderSpecialInstructions = base.Columns["HeaderSpecialInstructions"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyEMailAddress = base.Columns["CompanyEMailAddress"];
                this.columnCompanyOfficePhoneNumber1 = base.Columns["CompanyOfficePhoneNumber1"];
                this.columnCompanyOfficePhoneNumber2 = base.Columns["CompanyOfficePhoneNumber2"];
                this.columnCompanyVatRegistrationNumber = base.Columns["CompanyVatRegistrationNumber"];
                this.columnCompanyAddressLines = base.Columns["CompanyAddressLines"];
                this.columnCompanyCounty = base.Columns["CompanyCounty"];
                this.columnCompanyMapReference = base.Columns["CompanyMapReference"];
                this.columnCompanyPostCode = base.Columns["CompanyPostCode"];
                this.columnCompanyTown = base.Columns["CompanyTown"];
                this.columnCompanyAddressType = base.Columns["CompanyAddressType"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCompanyToInvoiceTo = base.Columns["CompanyToInvoiceTo"];
                this.columnInvoiceAddressID = base.Columns["InvoiceAddressID"];
                this.columnContactDetailID = base.Columns["ContactDetailID"];
                this.columnEMailAddress = base.Columns["EMailAddress"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnInitialNote = base.Columns["InitialNote"];
                this.columnJobRole = base.Columns["JobRole"];
                this.columnLastName = base.Columns["LastName"];
                this.columnTitle = base.Columns["Title"];
                this.columnAccountPhoneNumber = base.Columns["AccountPhoneNumber"];
                this.columnOutletStoreName = base.Columns["OutletStoreName"];
                this.columnNote = base.Columns["Note"];
                this.columnOpeningHoursNotes = base.Columns["OpeningHoursNotes"];
                this.columnInvoiceAddressMapReference = base.Columns["InvoiceAddressMapReference"];
                this.columnInvoiceAddressCounty = base.Columns["InvoiceAddressCounty"];
                this.columnInvoiceAddressTown = base.Columns["InvoiceAddressTown"];
                this.columnInvoiceAddressPostCode = base.Columns["InvoiceAddressPostCode"];
                this.columnOutletStoreAddressLines = base.Columns["OutletStoreAddressLines"];
                this.columnOutletStoreCounty = base.Columns["OutletStoreCounty"];
                this.columnOutletStoreMapReference = base.Columns["OutletStoreMapReference"];
                this.columnOutletStorePostCode = base.Columns["OutletStorePostCode"];
                this.columnOutletStoreTown = base.Columns["OutletStoreTown"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNoOfUnits = base.Columns["NoOfUnits"];
                this.columnOrderLineStatus = base.Columns["OrderLineStatus"];
                this.columnPrice = base.Columns["Price"];
                this.columnQtyPerUnit = base.Columns["QtyPerUnit"];
                this.columnSpecialInstructions = base.Columns["SpecialInstructions"];
                this.columnProductDescription = base.Columns["ProductDescription"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnRRPPerItem = base.Columns["RRPPerItem"];
                this.columnVatExempt = base.Columns["VatExempt"];
                this.columnPaymentTerms = base.Columns["PaymentTerms"];
                this.columnVanDescription = base.Columns["VanDescription"];
                this.columnDeliveryNoteNo = base.Columns["DeliveryNoteNo"];
                this.columnInvoiceProformaNo = base.Columns["InvoiceProformaNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnAlphaPrefixOrPostFix = new global::System.Data.DataColumn("AlphaPrefixOrPostFix", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlphaPrefixOrPostFix);
                this.columnAlphaID = new global::System.Data.DataColumn("AlphaID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlphaID);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnOrderStatus = new global::System.Data.DataColumn("OrderStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderStatus);
                this.columnHeaderSpecialInstructions = new global::System.Data.DataColumn("HeaderSpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderSpecialInstructions);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyEMailAddress = new global::System.Data.DataColumn("CompanyEMailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyEMailAddress);
                this.columnCompanyOfficePhoneNumber1 = new global::System.Data.DataColumn("CompanyOfficePhoneNumber1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyOfficePhoneNumber1);
                this.columnCompanyOfficePhoneNumber2 = new global::System.Data.DataColumn("CompanyOfficePhoneNumber2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyOfficePhoneNumber2);
                this.columnCompanyVatRegistrationNumber = new global::System.Data.DataColumn("CompanyVatRegistrationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyVatRegistrationNumber);
                this.columnCompanyAddressLines = new global::System.Data.DataColumn("CompanyAddressLines", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddressLines);
                this.columnCompanyCounty = new global::System.Data.DataColumn("CompanyCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCounty);
                this.columnCompanyMapReference = new global::System.Data.DataColumn("CompanyMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyMapReference);
                this.columnCompanyPostCode = new global::System.Data.DataColumn("CompanyPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyPostCode);
                this.columnCompanyTown = new global::System.Data.DataColumn("CompanyTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyTown);
                this.columnCompanyAddressType = new global::System.Data.DataColumn("CompanyAddressType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddressType);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCompanyToInvoiceTo = new global::System.Data.DataColumn("CompanyToInvoiceTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyToInvoiceTo);
                this.columnInvoiceAddressID = new global::System.Data.DataColumn("InvoiceAddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressID);
                this.columnContactDetailID = new global::System.Data.DataColumn("ContactDetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactDetailID);
                this.columnEMailAddress = new global::System.Data.DataColumn("EMailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailAddress);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnInitialNote = new global::System.Data.DataColumn("InitialNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialNote);
                this.columnJobRole = new global::System.Data.DataColumn("JobRole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobRole);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnAccountPhoneNumber = new global::System.Data.DataColumn("AccountPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountPhoneNumber);
                this.columnOutletStoreName = new global::System.Data.DataColumn("OutletStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreName);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnOpeningHoursNotes = new global::System.Data.DataColumn("OpeningHoursNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningHoursNotes);
                this.columnInvoiceAddressMapReference = new global::System.Data.DataColumn("InvoiceAddressMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressMapReference);
                this.columnInvoiceAddressCounty = new global::System.Data.DataColumn("InvoiceAddressCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressCounty);
                this.columnInvoiceAddressTown = new global::System.Data.DataColumn("InvoiceAddressTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressTown);
                this.columnInvoiceAddressPostCode = new global::System.Data.DataColumn("InvoiceAddressPostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddressPostCode);
                this.columnOutletStoreAddressLines = new global::System.Data.DataColumn("OutletStoreAddressLines", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreAddressLines);
                this.columnOutletStoreCounty = new global::System.Data.DataColumn("OutletStoreCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreCounty);
                this.columnOutletStoreMapReference = new global::System.Data.DataColumn("OutletStoreMapReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreMapReference);
                this.columnOutletStorePostCode = new global::System.Data.DataColumn("OutletStorePostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStorePostCode);
                this.columnOutletStoreTown = new global::System.Data.DataColumn("OutletStoreTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletStoreTown);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNoOfUnits = new global::System.Data.DataColumn("NoOfUnits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfUnits);
                this.columnOrderLineStatus = new global::System.Data.DataColumn("OrderLineStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderLineStatus);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnQtyPerUnit = new global::System.Data.DataColumn("QtyPerUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyPerUnit);
                this.columnSpecialInstructions = new global::System.Data.DataColumn("SpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialInstructions);
                this.columnProductDescription = new global::System.Data.DataColumn("ProductDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDescription);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnRRPPerItem = new global::System.Data.DataColumn("RRPPerItem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRPPerItem);
                this.columnVatExempt = new global::System.Data.DataColumn("VatExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatExempt);
                this.columnPaymentTerms = new global::System.Data.DataColumn("PaymentTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTerms);
                this.columnVanDescription = new global::System.Data.DataColumn("VanDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVanDescription);
                this.columnDeliveryNoteNo = new global::System.Data.DataColumn("DeliveryNoteNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryNoteNo);
                this.columnInvoiceProformaNo = new global::System.Data.DataColumn("InvoiceProformaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceProformaNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAlphaID.MaxLength = 20;
                this.columnHeaderSpecialInstructions.MaxLength = 8000;
                this.columnInvoiceNo.MaxLength = 50;
                this.columnCompanyName.MaxLength = 50;
                this.columnCompanyEMailAddress.MaxLength = 50;
                this.columnCompanyOfficePhoneNumber1.MaxLength = 50;
                this.columnCompanyOfficePhoneNumber2.MaxLength = 50;
                this.columnCompanyVatRegistrationNumber.MaxLength = 50;
                this.columnCompanyAddressLines.MaxLength = 8000;
                this.columnCompanyCounty.MaxLength = 50;
                this.columnCompanyMapReference.MaxLength = 50;
                this.columnCompanyPostCode.MaxLength = 8;
                this.columnCompanyTown.MaxLength = 50;
                this.columnCustomerName.MaxLength = 50;
                this.columnCompanyToInvoiceTo.MaxLength = 150;
                this.columnEMailAddress.MaxLength = 50;
                this.columnFirstName.MaxLength = 50;
                this.columnInitialNote.MaxLength = 8000;
                this.columnJobRole.MaxLength = 50;
                this.columnLastName.MaxLength = 50;
                this.columnTitle.MaxLength = 50;
                this.columnAccountPhoneNumber.MaxLength = 20;
                this.columnOutletStoreName.MaxLength = 150;
                this.columnNote.MaxLength = 8000;
                this.columnOpeningHoursNotes.MaxLength = 512;
                this.columnInvoiceAddressMapReference.MaxLength = 50;
                this.columnInvoiceAddressCounty.MaxLength = 50;
                this.columnInvoiceAddressTown.MaxLength = 50;
                this.columnInvoiceAddressPostCode.MaxLength = 8;
                this.columnOutletStoreAddressLines.MaxLength = 8000;
                this.columnOutletStoreCounty.MaxLength = 50;
                this.columnOutletStoreMapReference.MaxLength = 50;
                this.columnOutletStorePostCode.MaxLength = 8;
                this.columnOutletStoreTown.MaxLength = 50;
                this.columnSpecialInstructions.MaxLength = 8000;
                this.columnProductDescription.MaxLength = 150;
                this.columnProductCode.MaxLength = 10;
                this.columnPaymentTerms.MaxLength = 128;
                this.columnVanDescription.MaxLength = 150;
                this.columnDeliveryNoteNo.MaxLength = 50;
                this.columnInvoiceProformaNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetInvoiceRow NewrptDetailsGetInvoiceRow() {
                return ((rptDetailsGetInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptDetailsGetInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptDetailsGetInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptDetailsGetInvoiceRowChanged != null)) {
                    this.rptDetailsGetInvoiceRowChanged(this, new rptDetailsGetInvoiceRowChangeEvent(((rptDetailsGetInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptDetailsGetInvoiceRowChanging != null)) {
                    this.rptDetailsGetInvoiceRowChanging(this, new rptDetailsGetInvoiceRowChangeEvent(((rptDetailsGetInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptDetailsGetInvoiceRowDeleted != null)) {
                    this.rptDetailsGetInvoiceRowDeleted(this, new rptDetailsGetInvoiceRowChangeEvent(((rptDetailsGetInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptDetailsGetInvoiceRowDeleting != null)) {
                    this.rptDetailsGetInvoiceRowDeleting(this, new rptDetailsGetInvoiceRowChangeEvent(((rptDetailsGetInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptDetailsGetInvoiceRow(rptDetailsGetInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuperCreamDBDataSet ds = new SuperCreamDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptDetailsGetInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AccountRow : global::System.Data.DataRow {
            
            private AccountDataTable tableAccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AccountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccount = ((AccountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableAccount.IDColumn]));
                }
                set {
                    this[this.tableAccount.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvoiceAddressID {
                get {
                    try {
                        return ((int)(this[this.tableAccount.InvoiceAddressIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressID\' in table \'Account\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccount.InvoiceAddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tableAccount.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'Account\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccount.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactDetailID {
                get {
                    try {
                        return ((int)(this[this.tableAccount.ContactDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactDetailID\' in table \'Account\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccount.ContactDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TermTypeID {
                get {
                    try {
                        return ((int)(this[this.tableAccount.TermTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TermTypeID\' in table \'Account\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccount.TermTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlphaID {
                get {
                    try {
                        return ((string)(this[this.tableAccount.AlphaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlphaID\' in table \'Account\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccount.AlphaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyToInvoiceTo {
                get {
                    try {
                        return ((string)(this[this.tableAccount.CompanyToInvoiceToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyToInvoiceTo\' in table \'Account\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccount.CompanyToInvoiceToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressIDNull() {
                return this.IsNull(this.tableAccount.InvoiceAddressIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressIDNull() {
                this[this.tableAccount.InvoiceAddressIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableAccount.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableAccount.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactDetailIDNull() {
                return this.IsNull(this.tableAccount.ContactDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactDetailIDNull() {
                this[this.tableAccount.ContactDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTermTypeIDNull() {
                return this.IsNull(this.tableAccount.TermTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTermTypeIDNull() {
                this[this.tableAccount.TermTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlphaIDNull() {
                return this.IsNull(this.tableAccount.AlphaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlphaIDNull() {
                this[this.tableAccount.AlphaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyToInvoiceToNull() {
                return this.IsNull(this.tableAccount.CompanyToInvoiceToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyToInvoiceToNull() {
                this[this.tableAccount.CompanyToInvoiceToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptDetailsGetDeliveryNoteRow : global::System.Data.DataRow {
            
            private rptDetailsGetDeliveryNoteDataTable tablerptDetailsGetDeliveryNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDetailsGetDeliveryNoteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptDetailsGetDeliveryNote = ((rptDetailsGetDeliveryNoteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tablerptDetailsGetDeliveryNote.IDColumn]));
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'rptDetailsGetDeliveryNote\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AlphaPrefixOrPostFix {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote.AlphaPrefixOrPostFixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlphaPrefixOrPostFix\' in table \'rptDetailsGetDeliveryNote\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.AlphaPrefixOrPostFixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlphaID {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.AlphaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlphaID\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.AlphaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablerptDetailsGetDeliveryNote.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablerptDetailsGetDeliveryNote.DeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDate\' in table \'rptDetailsGetDeliveryNote\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OrderStatus {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote.OrderStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderStatus\' in table \'rptDetailsGetDeliveryNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OrderStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderSpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.HeaderSpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderSpecialInstructions\' in table \'rptDetailsGetDeliveryN" +
                                "ote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.HeaderSpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'rptDetailsGetDeliveryNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyEMailAddress {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyEMailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyEMailAddress\' in table \'rptDetailsGetDeliveryNote\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyEMailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyOfficePhoneNumber1 {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyOfficePhoneNumber1\' in table \'rptDetailsGetDeliveryN" +
                                "ote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyOfficePhoneNumber2 {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyOfficePhoneNumber2\' in table \'rptDetailsGetDeliveryN" +
                                "ote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyVatRegistrationNumber {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyVatRegistrationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyVatRegistrationNumber\' in table \'rptDetailsGetDelive" +
                                "ryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyVatRegistrationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyAddressLines {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyAddressLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddressLines\' in table \'rptDetailsGetDeliveryNote\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyAddressLinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCounty\' in table \'rptDetailsGetDeliveryNote\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyMapReference\' in table \'rptDetailsGetDeliveryNote\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyPostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyPostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyPostCode\' in table \'rptDetailsGetDeliveryNote\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyTown\' in table \'rptDetailsGetDeliveryNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CompanyAddressType {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote.CompanyAddressTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddressType\' in table \'rptDetailsGetDeliveryNote\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyAddressTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'rptDetailsGetDeliveryNote\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyToInvoiceTo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.CompanyToInvoiceToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyToInvoiceTo\' in table \'rptDetailsGetDeliveryNote\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.CompanyToInvoiceToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvoiceAddressID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressID\' in table \'rptDetailsGetDeliveryNote\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactDetailID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote.ContactDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactDetailID\' in table \'rptDetailsGetDeliveryNote\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.ContactDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMailAddress {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.EMailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailAddress\' in table \'rptDetailsGetDeliveryNote\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.EMailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InitialNote {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.InitialNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitialNote\' in table \'rptDetailsGetDeliveryNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.InitialNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobRole {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.JobRoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobRole\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.JobRoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.AccountPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountPhoneNumber\' in table \'rptDetailsGetDeliveryNote\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.AccountPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.OutletStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreName\' in table \'rptDetailsGetDeliveryNote\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OutletStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OpeningHoursNotes {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.OpeningHoursNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningHoursNotes\' in table \'rptDetailsGetDeliveryNote\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OpeningHoursNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressMapReference\' in table \'rptDetailsGetDelivery" +
                                "Note\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressCounty\' in table \'rptDetailsGetDeliveryNote\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressTown\' in table \'rptDetailsGetDeliveryNote\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressPostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressPostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressPostCode\' in table \'rptDetailsGetDeliveryNote" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreAddressLines {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.OutletStoreAddressLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreAddressLines\' in table \'rptDetailsGetDeliveryNot" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OutletStoreAddressLinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.OutletStoreCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreCounty\' in table \'rptDetailsGetDeliveryNote\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OutletStoreCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.OutletStoreMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreMapReference\' in table \'rptDetailsGetDeliveryNot" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OutletStoreMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStorePostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.OutletStorePostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStorePostCode\' in table \'rptDetailsGetDeliveryNote\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OutletStorePostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.OutletStoreTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreTown\' in table \'rptDetailsGetDeliveryNote\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OutletStoreTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tablerptDetailsGetDeliveryNote.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoOfUnits {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote.NoOfUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfUnits\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.NoOfUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OrderLineStatus {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote.OrderLineStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderLineStatus\' in table \'rptDetailsGetDeliveryNote\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.OrderLineStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablerptDetailsGetDeliveryNote.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyPerUnit {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote.QtyPerUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyPerUnit\' in table \'rptDetailsGetDeliveryNote\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.QtyPerUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.SpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialInstructions\' in table \'rptDetailsGetDeliveryNote\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.SpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductDescription {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.ProductDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductDescription\' in table \'rptDetailsGetDeliveryNote\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.ProductDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'rptDetailsGetDeliveryNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RRPPerItem {
                get {
                    try {
                        return ((decimal)(this[this.tablerptDetailsGetDeliveryNote.RRPPerItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RRPPerItem\' in table \'rptDetailsGetDeliveryNote\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.RRPPerItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VatExempt {
                get {
                    try {
                        return ((bool)(this[this.tablerptDetailsGetDeliveryNote.VatExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatExempt\' in table \'rptDetailsGetDeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.VatExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentTerms {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.PaymentTermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentTerms\' in table \'rptDetailsGetDeliveryNote\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.PaymentTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VanDescription {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote.VanDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VanDescription\' in table \'rptDetailsGetDeliveryNote\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote.VanDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablerptDetailsGetDeliveryNote.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlphaPrefixOrPostFixNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.AlphaPrefixOrPostFixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlphaPrefixOrPostFixNull() {
                this[this.tablerptDetailsGetDeliveryNote.AlphaPrefixOrPostFixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlphaIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.AlphaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlphaIDNull() {
                this[this.tablerptDetailsGetDeliveryNote.AlphaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tablerptDetailsGetDeliveryNote.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.DeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateNull() {
                this[this.tablerptDetailsGetDeliveryNote.DeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderStatusNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OrderStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderStatusNull() {
                this[this.tablerptDetailsGetDeliveryNote.OrderStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderSpecialInstructionsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.HeaderSpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderSpecialInstructionsNull() {
                this[this.tablerptDetailsGetDeliveryNote.HeaderSpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNoNull() {
                this[this.tablerptDetailsGetDeliveryNote.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyEMailAddressNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyEMailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyEMailAddressNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyEMailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyOfficePhoneNumber1Null() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyOfficePhoneNumber1Null() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyOfficePhoneNumber2Null() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyOfficePhoneNumber2Null() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyOfficePhoneNumber2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyVatRegistrationNumberNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyVatRegistrationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyVatRegistrationNumberNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyVatRegistrationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressLinesNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyAddressLinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressLinesNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyAddressLinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyCountyNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyCountyNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyMapReferenceNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyPostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyPostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyPostCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyPostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTownNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTownNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressTypeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyAddressTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressTypeNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyAddressTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tablerptDetailsGetDeliveryNote.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyToInvoiceToNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.CompanyToInvoiceToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyToInvoiceToNull() {
                this[this.tablerptDetailsGetDeliveryNote.CompanyToInvoiceToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.InvoiceAddressIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressIDNull() {
                this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactDetailIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.ContactDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactDetailIDNull() {
                this[this.tablerptDetailsGetDeliveryNote.ContactDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMailAddressNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.EMailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMailAddressNull() {
                this[this.tablerptDetailsGetDeliveryNote.EMailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tablerptDetailsGetDeliveryNote.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInitialNoteNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.InitialNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInitialNoteNull() {
                this[this.tablerptDetailsGetDeliveryNote.InitialNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobRoleNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.JobRoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobRoleNull() {
                this[this.tablerptDetailsGetDeliveryNote.JobRoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tablerptDetailsGetDeliveryNote.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tablerptDetailsGetDeliveryNote.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountPhoneNumberNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.AccountPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountPhoneNumberNull() {
                this[this.tablerptDetailsGetDeliveryNote.AccountPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OutletStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreNameNull() {
                this[this.tablerptDetailsGetDeliveryNote.OutletStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tablerptDetailsGetDeliveryNote.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningHoursNotesNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OpeningHoursNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningHoursNotesNull() {
                this[this.tablerptDetailsGetDeliveryNote.OpeningHoursNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tablerptDetailsGetDeliveryNote.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.InvoiceAddressMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressMapReferenceNull() {
                this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressCountyNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.InvoiceAddressCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressCountyNull() {
                this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressTownNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.InvoiceAddressTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressTownNull() {
                this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressPostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.InvoiceAddressPostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressPostCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote.InvoiceAddressPostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreAddressLinesNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OutletStoreAddressLinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreAddressLinesNull() {
                this[this.tablerptDetailsGetDeliveryNote.OutletStoreAddressLinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreCountyNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OutletStoreCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreCountyNull() {
                this[this.tablerptDetailsGetDeliveryNote.OutletStoreCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OutletStoreMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreMapReferenceNull() {
                this[this.tablerptDetailsGetDeliveryNote.OutletStoreMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStorePostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OutletStorePostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStorePostCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote.OutletStorePostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreTownNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OutletStoreTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreTownNull() {
                this[this.tablerptDetailsGetDeliveryNote.OutletStoreTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tablerptDetailsGetDeliveryNote.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoOfUnitsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.NoOfUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoOfUnitsNull() {
                this[this.tablerptDetailsGetDeliveryNote.NoOfUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderLineStatusNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.OrderLineStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderLineStatusNull() {
                this[this.tablerptDetailsGetDeliveryNote.OrderLineStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablerptDetailsGetDeliveryNote.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyPerUnitNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.QtyPerUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyPerUnitNull() {
                this[this.tablerptDetailsGetDeliveryNote.QtyPerUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialInstructionsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.SpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialInstructionsNull() {
                this[this.tablerptDetailsGetDeliveryNote.SpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductDescriptionNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.ProductDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductDescriptionNull() {
                this[this.tablerptDetailsGetDeliveryNote.ProductDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRRPPerItemNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.RRPPerItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRRPPerItemNull() {
                this[this.tablerptDetailsGetDeliveryNote.RRPPerItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatExemptNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.VatExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatExemptNull() {
                this[this.tablerptDetailsGetDeliveryNote.VatExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentTermsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.PaymentTermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentTermsNull() {
                this[this.tablerptDetailsGetDeliveryNote.PaymentTermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVanDescriptionNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote.VanDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVanDescriptionNull() {
                this[this.tablerptDetailsGetDeliveryNote.VanDescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptGetDeliveryAddressLinesRow : global::System.Data.DataRow {
            
            private rptGetDeliveryAddressLinesDataTable tablerptGetDeliveryAddressLines;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetDeliveryAddressLinesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptGetDeliveryAddressLines = ((rptGetDeliveryAddressLinesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLine {
                get {
                    try {
                        return ((string)(this[this.tablerptGetDeliveryAddressLines.AddressLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressLine\' in table \'rptGetDeliveryAddressLines\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptGetDeliveryAddressLines.AddressLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLineNull() {
                return this.IsNull(this.tablerptGetDeliveryAddressLines.AddressLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLineNull() {
                this[this.tablerptGetDeliveryAddressLines.AddressLineColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptGetFoundationFacilityAddressLinesRow : global::System.Data.DataRow {
            
            private rptGetFoundationFacilityAddressLinesDataTable tablerptGetFoundationFacilityAddressLines;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetFoundationFacilityAddressLinesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptGetFoundationFacilityAddressLines = ((rptGetFoundationFacilityAddressLinesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLine {
                get {
                    try {
                        return ((string)(this[this.tablerptGetFoundationFacilityAddressLines.AddressLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressLine\' in table \'rptGetFoundationFacilityAddressLines" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptGetFoundationFacilityAddressLines.AddressLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLineNull() {
                return this.IsNull(this.tablerptGetFoundationFacilityAddressLines.AddressLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLineNull() {
                this[this.tablerptGetFoundationFacilityAddressLines.AddressLineColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptGetOrderTotalsRow : global::System.Data.DataRow {
            
            private rptGetOrderTotalsDataTable tablerptGetOrderTotals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetOrderTotalsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptGetOrderTotals = ((rptGetOrderTotalsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tablerptGetOrderTotals.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'rptGetOrderTotals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptGetOrderTotals.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VatTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablerptGetOrderTotals.VatTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatTotal\' in table \'rptGetOrderTotals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptGetOrderTotals.VatTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablerptGetOrderTotals.NetTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetTotal\' in table \'rptGetOrderTotals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptGetOrderTotals.NetTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NonVatableTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablerptGetOrderTotals.NonVatableTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonVatableTotal\' in table \'rptGetOrderTotals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptGetOrderTotals.NonVatableTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VatableTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablerptGetOrderTotals.VatableTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatableTotal\' in table \'rptGetOrderTotals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptGetOrderTotals.VatableTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PercentageValue {
                get {
                    try {
                        return ((string)(this[this.tablerptGetOrderTotals.PercentageValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageValue\' in table \'rptGetOrderTotals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptGetOrderTotals.PercentageValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablerptGetOrderTotals.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablerptGetOrderTotals.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatTotalNull() {
                return this.IsNull(this.tablerptGetOrderTotals.VatTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatTotalNull() {
                this[this.tablerptGetOrderTotals.VatTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetTotalNull() {
                return this.IsNull(this.tablerptGetOrderTotals.NetTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetTotalNull() {
                this[this.tablerptGetOrderTotals.NetTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonVatableTotalNull() {
                return this.IsNull(this.tablerptGetOrderTotals.NonVatableTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonVatableTotalNull() {
                this[this.tablerptGetOrderTotals.NonVatableTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatableTotalNull() {
                return this.IsNull(this.tablerptGetOrderTotals.VatableTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatableTotalNull() {
                this[this.tablerptGetOrderTotals.VatableTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentageValueNull() {
                return this.IsNull(this.tablerptGetOrderTotals.PercentageValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentageValueNull() {
                this[this.tablerptGetOrderTotals.PercentageValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptDetailsGetDeliveryNote1Row : global::System.Data.DataRow {
            
            private rptDetailsGetDeliveryNote1DataTable tablerptDetailsGetDeliveryNote1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDetailsGetDeliveryNote1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptDetailsGetDeliveryNote1 = ((rptDetailsGetDeliveryNote1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tablerptDetailsGetDeliveryNote1.IDColumn]));
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote1.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'rptDetailsGetDeliveryNote1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AlphaPrefixOrPostFix {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote1.AlphaPrefixOrPostFixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlphaPrefixOrPostFix\' in table \'rptDetailsGetDeliveryNote1\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.AlphaPrefixOrPostFixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlphaID {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.AlphaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlphaID\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.AlphaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablerptDetailsGetDeliveryNote1.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'rptDetailsGetDeliveryNote1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablerptDetailsGetDeliveryNote1.DeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDate\' in table \'rptDetailsGetDeliveryNote1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OrderStatus {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote1.OrderStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderStatus\' in table \'rptDetailsGetDeliveryNote1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OrderStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderSpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.HeaderSpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderSpecialInstructions\' in table \'rptDetailsGetDeliveryN" +
                                "ote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.HeaderSpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'rptDetailsGetDeliveryNote1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'rptDetailsGetDeliveryNote1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyEMailAddress {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyEMailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyEMailAddress\' in table \'rptDetailsGetDeliveryNote1\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyEMailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyOfficePhoneNumber1 {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyOfficePhoneNumber1\' in table \'rptDetailsGetDeliveryN" +
                                "ote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyOfficePhoneNumber2 {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyOfficePhoneNumber2\' in table \'rptDetailsGetDeliveryN" +
                                "ote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyVatRegistrationNumber {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyVatRegistrationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyVatRegistrationNumber\' in table \'rptDetailsGetDelive" +
                                "ryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyVatRegistrationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyAddressLines {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyAddressLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddressLines\' in table \'rptDetailsGetDeliveryNote1\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyAddressLinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCounty\' in table \'rptDetailsGetDeliveryNote1\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyMapReference\' in table \'rptDetailsGetDeliveryNote1\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyPostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyPostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyPostCode\' in table \'rptDetailsGetDeliveryNote1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyTown\' in table \'rptDetailsGetDeliveryNote1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CompanyAddressType {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote1.CompanyAddressTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddressType\' in table \'rptDetailsGetDeliveryNote1\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyAddressTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'rptDetailsGetDeliveryNote1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyToInvoiceTo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.CompanyToInvoiceToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyToInvoiceTo\' in table \'rptDetailsGetDeliveryNote1\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.CompanyToInvoiceToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvoiceAddressID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressID\' in table \'rptDetailsGetDeliveryNote1\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactDetailID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote1.ContactDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactDetailID\' in table \'rptDetailsGetDeliveryNote1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.ContactDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMailAddress {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.EMailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailAddress\' in table \'rptDetailsGetDeliveryNote1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.EMailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'rptDetailsGetDeliveryNote1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InitialNote {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.InitialNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitialNote\' in table \'rptDetailsGetDeliveryNote1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InitialNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobRole {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.JobRoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobRole\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.JobRoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.AccountPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountPhoneNumber\' in table \'rptDetailsGetDeliveryNote1\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.AccountPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.OutletStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreName\' in table \'rptDetailsGetDeliveryNote1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OutletStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OpeningHoursNotes {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.OpeningHoursNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningHoursNotes\' in table \'rptDetailsGetDeliveryNote1\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OpeningHoursNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressMapReference\' in table \'rptDetailsGetDelivery" +
                                "Note1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressCounty\' in table \'rptDetailsGetDeliveryNote1\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressTown\' in table \'rptDetailsGetDeliveryNote1\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressPostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressPostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressPostCode\' in table \'rptDetailsGetDeliveryNote" +
                                "1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreAddressLines {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.OutletStoreAddressLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreAddressLines\' in table \'rptDetailsGetDeliveryNot" +
                                "e1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OutletStoreAddressLinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.OutletStoreCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreCounty\' in table \'rptDetailsGetDeliveryNote1\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OutletStoreCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.OutletStoreMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreMapReference\' in table \'rptDetailsGetDeliveryNot" +
                                "e1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OutletStoreMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStorePostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.OutletStorePostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStorePostCode\' in table \'rptDetailsGetDeliveryNote1\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OutletStorePostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.OutletStoreTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreTown\' in table \'rptDetailsGetDeliveryNote1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OutletStoreTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tablerptDetailsGetDeliveryNote1.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoOfUnits {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote1.NoOfUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfUnits\' in table \'rptDetailsGetDeliveryNote1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.NoOfUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OrderLineStatus {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetDeliveryNote1.OrderLineStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderLineStatus\' in table \'rptDetailsGetDeliveryNote1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.OrderLineStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablerptDetailsGetDeliveryNote1.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'rptDetailsGetDeliveryNote1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyPerUnit {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetDeliveryNote1.QtyPerUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyPerUnit\' in table \'rptDetailsGetDeliveryNote1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.QtyPerUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.SpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialInstructions\' in table \'rptDetailsGetDeliveryNote1\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.SpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductDescription {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.ProductDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductDescription\' in table \'rptDetailsGetDeliveryNote1\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.ProductDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'rptDetailsGetDeliveryNote1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RRPPerItem {
                get {
                    try {
                        return ((decimal)(this[this.tablerptDetailsGetDeliveryNote1.RRPPerItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RRPPerItem\' in table \'rptDetailsGetDeliveryNote1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.RRPPerItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VatExempt {
                get {
                    try {
                        return ((bool)(this[this.tablerptDetailsGetDeliveryNote1.VatExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatExempt\' in table \'rptDetailsGetDeliveryNote1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.VatExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentTerms {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.PaymentTermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentTerms\' in table \'rptDetailsGetDeliveryNote1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.PaymentTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VanDescription {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.VanDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VanDescription\' in table \'rptDetailsGetDeliveryNote1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.VanDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryNoteNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.DeliveryNoteNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryNoteNo\' in table \'rptDetailsGetDeliveryNote1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.DeliveryNoteNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceProformaNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetDeliveryNote1.InvoiceProformaNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceProformaNo\' in table \'rptDetailsGetDeliveryNote1\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetDeliveryNote1.InvoiceProformaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlphaPrefixOrPostFixNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.AlphaPrefixOrPostFixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlphaPrefixOrPostFixNull() {
                this[this.tablerptDetailsGetDeliveryNote1.AlphaPrefixOrPostFixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlphaIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.AlphaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlphaIDNull() {
                this[this.tablerptDetailsGetDeliveryNote1.AlphaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.DeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateNull() {
                this[this.tablerptDetailsGetDeliveryNote1.DeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderStatusNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OrderStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderStatusNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OrderStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderSpecialInstructionsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.HeaderSpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderSpecialInstructionsNull() {
                this[this.tablerptDetailsGetDeliveryNote1.HeaderSpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNoNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyEMailAddressNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyEMailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyEMailAddressNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyEMailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyOfficePhoneNumber1Null() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyOfficePhoneNumber1Null() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyOfficePhoneNumber2Null() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyOfficePhoneNumber2Null() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyOfficePhoneNumber2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyVatRegistrationNumberNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyVatRegistrationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyVatRegistrationNumberNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyVatRegistrationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressLinesNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyAddressLinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressLinesNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyAddressLinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyCountyNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyCountyNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyMapReferenceNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyPostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyPostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyPostCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyPostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTownNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTownNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressTypeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyAddressTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressTypeNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyAddressTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyToInvoiceToNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.CompanyToInvoiceToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyToInvoiceToNull() {
                this[this.tablerptDetailsGetDeliveryNote1.CompanyToInvoiceToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InvoiceAddressIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressIDNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactDetailIDNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.ContactDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactDetailIDNull() {
                this[this.tablerptDetailsGetDeliveryNote1.ContactDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMailAddressNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.EMailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMailAddressNull() {
                this[this.tablerptDetailsGetDeliveryNote1.EMailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tablerptDetailsGetDeliveryNote1.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInitialNoteNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InitialNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInitialNoteNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InitialNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobRoleNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.JobRoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobRoleNull() {
                this[this.tablerptDetailsGetDeliveryNote1.JobRoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tablerptDetailsGetDeliveryNote1.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tablerptDetailsGetDeliveryNote1.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountPhoneNumberNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.AccountPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountPhoneNumberNull() {
                this[this.tablerptDetailsGetDeliveryNote1.AccountPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OutletStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreNameNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OutletStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tablerptDetailsGetDeliveryNote1.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningHoursNotesNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OpeningHoursNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningHoursNotesNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OpeningHoursNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tablerptDetailsGetDeliveryNote1.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InvoiceAddressMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressMapReferenceNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressCountyNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InvoiceAddressCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressCountyNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressTownNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InvoiceAddressTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressTownNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressPostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InvoiceAddressPostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressPostCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InvoiceAddressPostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreAddressLinesNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OutletStoreAddressLinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreAddressLinesNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OutletStoreAddressLinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreCountyNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OutletStoreCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreCountyNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OutletStoreCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OutletStoreMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreMapReferenceNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OutletStoreMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStorePostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OutletStorePostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStorePostCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OutletStorePostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreTownNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OutletStoreTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreTownNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OutletStoreTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tablerptDetailsGetDeliveryNote1.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoOfUnitsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.NoOfUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoOfUnitsNull() {
                this[this.tablerptDetailsGetDeliveryNote1.NoOfUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderLineStatusNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.OrderLineStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderLineStatusNull() {
                this[this.tablerptDetailsGetDeliveryNote1.OrderLineStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablerptDetailsGetDeliveryNote1.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyPerUnitNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.QtyPerUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyPerUnitNull() {
                this[this.tablerptDetailsGetDeliveryNote1.QtyPerUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialInstructionsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.SpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialInstructionsNull() {
                this[this.tablerptDetailsGetDeliveryNote1.SpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductDescriptionNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.ProductDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductDescriptionNull() {
                this[this.tablerptDetailsGetDeliveryNote1.ProductDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tablerptDetailsGetDeliveryNote1.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRRPPerItemNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.RRPPerItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRRPPerItemNull() {
                this[this.tablerptDetailsGetDeliveryNote1.RRPPerItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatExemptNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.VatExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatExemptNull() {
                this[this.tablerptDetailsGetDeliveryNote1.VatExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentTermsNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.PaymentTermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentTermsNull() {
                this[this.tablerptDetailsGetDeliveryNote1.PaymentTermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVanDescriptionNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.VanDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVanDescriptionNull() {
                this[this.tablerptDetailsGetDeliveryNote1.VanDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryNoteNoNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.DeliveryNoteNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryNoteNoNull() {
                this[this.tablerptDetailsGetDeliveryNote1.DeliveryNoteNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceProformaNoNull() {
                return this.IsNull(this.tablerptDetailsGetDeliveryNote1.InvoiceProformaNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceProformaNoNull() {
                this[this.tablerptDetailsGetDeliveryNote1.InvoiceProformaNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptGetAddressLinesForInvoiceRow : global::System.Data.DataRow {
            
            private rptGetAddressLinesForInvoiceDataTable tablerptGetAddressLinesForInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptGetAddressLinesForInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptGetAddressLinesForInvoice = ((rptGetAddressLinesForInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLine {
                get {
                    try {
                        return ((string)(this[this.tablerptGetAddressLinesForInvoice.AddressLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressLine\' in table \'rptGetAddressLinesForInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptGetAddressLinesForInvoice.AddressLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLineNull() {
                return this.IsNull(this.tablerptGetAddressLinesForInvoice.AddressLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLineNull() {
                this[this.tablerptGetAddressLinesForInvoice.AddressLineColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptDetailsGetInvoiceRow : global::System.Data.DataRow {
            
            private rptDetailsGetInvoiceDataTable tablerptDetailsGetInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDetailsGetInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptDetailsGetInvoice = ((rptDetailsGetInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tablerptDetailsGetInvoice.IDColumn]));
                }
                set {
                    this[this.tablerptDetailsGetInvoice.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetInvoice.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AlphaPrefixOrPostFix {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetInvoice.AlphaPrefixOrPostFixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlphaPrefixOrPostFix\' in table \'rptDetailsGetInvoice\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.AlphaPrefixOrPostFixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlphaID {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.AlphaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlphaID\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.AlphaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablerptDetailsGetInvoice.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablerptDetailsGetInvoice.DeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDate\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OrderStatus {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetInvoice.OrderStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderStatus\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OrderStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderSpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.HeaderSpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderSpecialInstructions\' in table \'rptDetailsGetInvoice\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.HeaderSpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyEMailAddress {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyEMailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyEMailAddress\' in table \'rptDetailsGetInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyEMailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyOfficePhoneNumber1 {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyOfficePhoneNumber1\' in table \'rptDetailsGetInvoice\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyOfficePhoneNumber2 {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyOfficePhoneNumber2\' in table \'rptDetailsGetInvoice\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyVatRegistrationNumber {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyVatRegistrationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyVatRegistrationNumber\' in table \'rptDetailsGetInvoic" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyVatRegistrationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyAddressLines {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyAddressLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddressLines\' in table \'rptDetailsGetInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyAddressLinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCounty\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyMapReference\' in table \'rptDetailsGetInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyPostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyPostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyPostCode\' in table \'rptDetailsGetInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyTown\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CompanyAddressType {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetInvoice.CompanyAddressTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddressType\' in table \'rptDetailsGetInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyAddressTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyToInvoiceTo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.CompanyToInvoiceToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyToInvoiceTo\' in table \'rptDetailsGetInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.CompanyToInvoiceToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvoiceAddressID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetInvoice.InvoiceAddressIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressID\' in table \'rptDetailsGetInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InvoiceAddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactDetailID {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetInvoice.ContactDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactDetailID\' in table \'rptDetailsGetInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.ContactDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMailAddress {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.EMailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMailAddress\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.EMailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InitialNote {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.InitialNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitialNote\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InitialNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobRole {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.JobRoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobRole\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.JobRoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.AccountPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountPhoneNumber\' in table \'rptDetailsGetInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.AccountPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreName {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.OutletStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreName\' in table \'rptDetailsGetInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OutletStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OpeningHoursNotes {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.OpeningHoursNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningHoursNotes\' in table \'rptDetailsGetInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OpeningHoursNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.InvoiceAddressMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressMapReference\' in table \'rptDetailsGetInvoice\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InvoiceAddressMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.InvoiceAddressCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressCounty\' in table \'rptDetailsGetInvoice\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InvoiceAddressCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.InvoiceAddressTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressTown\' in table \'rptDetailsGetInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InvoiceAddressTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceAddressPostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.InvoiceAddressPostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddressPostCode\' in table \'rptDetailsGetInvoice\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InvoiceAddressPostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreAddressLines {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.OutletStoreAddressLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreAddressLines\' in table \'rptDetailsGetInvoice\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OutletStoreAddressLinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreCounty {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.OutletStoreCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreCounty\' in table \'rptDetailsGetInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OutletStoreCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreMapReference {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.OutletStoreMapReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreMapReference\' in table \'rptDetailsGetInvoice\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OutletStoreMapReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStorePostCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.OutletStorePostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStorePostCode\' in table \'rptDetailsGetInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OutletStorePostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletStoreTown {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.OutletStoreTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletStoreTown\' in table \'rptDetailsGetInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OutletStoreTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tablerptDetailsGetInvoice.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoOfUnits {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetInvoice.NoOfUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfUnits\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.NoOfUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OrderLineStatus {
                get {
                    try {
                        return ((short)(this[this.tablerptDetailsGetInvoice.OrderLineStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderLineStatus\' in table \'rptDetailsGetInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.OrderLineStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablerptDetailsGetInvoice.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyPerUnit {
                get {
                    try {
                        return ((int)(this[this.tablerptDetailsGetInvoice.QtyPerUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyPerUnit\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.QtyPerUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.SpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialInstructions\' in table \'rptDetailsGetInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.SpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductDescription {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.ProductDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductDescription\' in table \'rptDetailsGetInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.ProductDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RRPPerItem {
                get {
                    try {
                        return ((decimal)(this[this.tablerptDetailsGetInvoice.RRPPerItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RRPPerItem\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.RRPPerItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VatExempt {
                get {
                    try {
                        return ((bool)(this[this.tablerptDetailsGetInvoice.VatExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatExempt\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.VatExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentTerms {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.PaymentTermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentTerms\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.PaymentTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VanDescription {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.VanDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VanDescription\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.VanDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryNoteNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.DeliveryNoteNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryNoteNo\' in table \'rptDetailsGetInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.DeliveryNoteNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceProformaNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDetailsGetInvoice.InvoiceProformaNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceProformaNo\' in table \'rptDetailsGetInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablerptDetailsGetInvoice.InvoiceProformaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablerptDetailsGetInvoice.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlphaPrefixOrPostFixNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.AlphaPrefixOrPostFixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlphaPrefixOrPostFixNull() {
                this[this.tablerptDetailsGetInvoice.AlphaPrefixOrPostFixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlphaIDNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.AlphaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlphaIDNull() {
                this[this.tablerptDetailsGetInvoice.AlphaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tablerptDetailsGetInvoice.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.DeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateNull() {
                this[this.tablerptDetailsGetInvoice.DeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderStatusNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OrderStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderStatusNull() {
                this[this.tablerptDetailsGetInvoice.OrderStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderSpecialInstructionsNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.HeaderSpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderSpecialInstructionsNull() {
                this[this.tablerptDetailsGetInvoice.HeaderSpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNoNull() {
                this[this.tablerptDetailsGetInvoice.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tablerptDetailsGetInvoice.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyEMailAddressNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyEMailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyEMailAddressNull() {
                this[this.tablerptDetailsGetInvoice.CompanyEMailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyOfficePhoneNumber1Null() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyOfficePhoneNumber1Null() {
                this[this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyOfficePhoneNumber2Null() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyOfficePhoneNumber2Null() {
                this[this.tablerptDetailsGetInvoice.CompanyOfficePhoneNumber2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyVatRegistrationNumberNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyVatRegistrationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyVatRegistrationNumberNull() {
                this[this.tablerptDetailsGetInvoice.CompanyVatRegistrationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressLinesNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyAddressLinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressLinesNull() {
                this[this.tablerptDetailsGetInvoice.CompanyAddressLinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyCountyNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyCountyNull() {
                this[this.tablerptDetailsGetInvoice.CompanyCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyMapReferenceNull() {
                this[this.tablerptDetailsGetInvoice.CompanyMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyPostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyPostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyPostCodeNull() {
                this[this.tablerptDetailsGetInvoice.CompanyPostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTownNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTownNull() {
                this[this.tablerptDetailsGetInvoice.CompanyTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressTypeNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyAddressTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressTypeNull() {
                this[this.tablerptDetailsGetInvoice.CompanyAddressTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tablerptDetailsGetInvoice.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyToInvoiceToNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.CompanyToInvoiceToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyToInvoiceToNull() {
                this[this.tablerptDetailsGetInvoice.CompanyToInvoiceToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressIDNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InvoiceAddressIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressIDNull() {
                this[this.tablerptDetailsGetInvoice.InvoiceAddressIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactDetailIDNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.ContactDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactDetailIDNull() {
                this[this.tablerptDetailsGetInvoice.ContactDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMailAddressNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.EMailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMailAddressNull() {
                this[this.tablerptDetailsGetInvoice.EMailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tablerptDetailsGetInvoice.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInitialNoteNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InitialNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInitialNoteNull() {
                this[this.tablerptDetailsGetInvoice.InitialNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobRoleNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.JobRoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobRoleNull() {
                this[this.tablerptDetailsGetInvoice.JobRoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tablerptDetailsGetInvoice.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tablerptDetailsGetInvoice.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountPhoneNumberNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.AccountPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountPhoneNumberNull() {
                this[this.tablerptDetailsGetInvoice.AccountPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreNameNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OutletStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreNameNull() {
                this[this.tablerptDetailsGetInvoice.OutletStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tablerptDetailsGetInvoice.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningHoursNotesNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OpeningHoursNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningHoursNotesNull() {
                this[this.tablerptDetailsGetInvoice.OpeningHoursNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InvoiceAddressMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressMapReferenceNull() {
                this[this.tablerptDetailsGetInvoice.InvoiceAddressMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressCountyNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InvoiceAddressCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressCountyNull() {
                this[this.tablerptDetailsGetInvoice.InvoiceAddressCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressTownNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InvoiceAddressTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressTownNull() {
                this[this.tablerptDetailsGetInvoice.InvoiceAddressTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceAddressPostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InvoiceAddressPostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceAddressPostCodeNull() {
                this[this.tablerptDetailsGetInvoice.InvoiceAddressPostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreAddressLinesNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OutletStoreAddressLinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreAddressLinesNull() {
                this[this.tablerptDetailsGetInvoice.OutletStoreAddressLinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreCountyNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OutletStoreCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreCountyNull() {
                this[this.tablerptDetailsGetInvoice.OutletStoreCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreMapReferenceNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OutletStoreMapReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreMapReferenceNull() {
                this[this.tablerptDetailsGetInvoice.OutletStoreMapReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStorePostCodeNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OutletStorePostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStorePostCodeNull() {
                this[this.tablerptDetailsGetInvoice.OutletStorePostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletStoreTownNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OutletStoreTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletStoreTownNull() {
                this[this.tablerptDetailsGetInvoice.OutletStoreTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tablerptDetailsGetInvoice.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoOfUnitsNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.NoOfUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoOfUnitsNull() {
                this[this.tablerptDetailsGetInvoice.NoOfUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderLineStatusNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.OrderLineStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderLineStatusNull() {
                this[this.tablerptDetailsGetInvoice.OrderLineStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablerptDetailsGetInvoice.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyPerUnitNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.QtyPerUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyPerUnitNull() {
                this[this.tablerptDetailsGetInvoice.QtyPerUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialInstructionsNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.SpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialInstructionsNull() {
                this[this.tablerptDetailsGetInvoice.SpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductDescriptionNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.ProductDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductDescriptionNull() {
                this[this.tablerptDetailsGetInvoice.ProductDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tablerptDetailsGetInvoice.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRRPPerItemNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.RRPPerItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRRPPerItemNull() {
                this[this.tablerptDetailsGetInvoice.RRPPerItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatExemptNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.VatExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatExemptNull() {
                this[this.tablerptDetailsGetInvoice.VatExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentTermsNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.PaymentTermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentTermsNull() {
                this[this.tablerptDetailsGetInvoice.PaymentTermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVanDescriptionNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.VanDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVanDescriptionNull() {
                this[this.tablerptDetailsGetInvoice.VanDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryNoteNoNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.DeliveryNoteNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryNoteNoNull() {
                this[this.tablerptDetailsGetInvoice.DeliveryNoteNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceProformaNoNull() {
                return this.IsNull(this.tablerptDetailsGetInvoice.InvoiceProformaNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceProformaNoNull() {
                this[this.tablerptDetailsGetInvoice.InvoiceProformaNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AccountRowChangeEvent : global::System.EventArgs {
            
            private AccountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountRowChangeEvent(AccountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptDetailsGetDeliveryNoteRowChangeEvent : global::System.EventArgs {
            
            private rptDetailsGetDeliveryNoteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNoteRowChangeEvent(rptDetailsGetDeliveryNoteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptGetDeliveryAddressLinesRowChangeEvent : global::System.EventArgs {
            
            private rptGetDeliveryAddressLinesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetDeliveryAddressLinesRowChangeEvent(rptGetDeliveryAddressLinesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetDeliveryAddressLinesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptGetFoundationFacilityAddressLinesRowChangeEvent : global::System.EventArgs {
            
            private rptGetFoundationFacilityAddressLinesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetFoundationFacilityAddressLinesRowChangeEvent(rptGetFoundationFacilityAddressLinesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetFoundationFacilityAddressLinesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptGetOrderTotalsRowChangeEvent : global::System.EventArgs {
            
            private rptGetOrderTotalsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetOrderTotalsRowChangeEvent(rptGetOrderTotalsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetOrderTotalsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptDetailsGetDeliveryNote1RowChangeEvent : global::System.EventArgs {
            
            private rptDetailsGetDeliveryNote1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNote1RowChangeEvent(rptDetailsGetDeliveryNote1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetDeliveryNote1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptGetAddressLinesForInvoiceRowChangeEvent : global::System.EventArgs {
            
            private rptGetAddressLinesForInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetAddressLinesForInvoiceRowChangeEvent(rptGetAddressLinesForInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptGetAddressLinesForInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptDetailsGetInvoiceRowChangeEvent : global::System.EventArgs {
            
            private rptDetailsGetInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetInvoiceRowChangeEvent(rptDetailsGetInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDetailsGetInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SuperCreamReportsWS.SuperCreamDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AccountTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AccountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Account";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("InvoiceAddressID", "InvoiceAddressID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("ContactDetailID", "ContactDetailID");
            tableMapping.ColumnMappings.Add("TermTypeID", "TermTypeID");
            tableMapping.ColumnMappings.Add("AlphaID", "AlphaID");
            tableMapping.ColumnMappings.Add("CompanyToInvoiceTo", "CompanyToInvoiceTo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Account] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Account] ([InvoiceAddressID], [CustomerID], [ContactDetailID]," +
                " [TermTypeID], [AlphaID], [CompanyToInvoiceTo]) VALUES (@InvoiceAddressID, @Cust" +
                "omerID, @ContactDetailID, @TermTypeID, @AlphaID, @CompanyToInvoiceTo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceAddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactDetailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactDetailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlphaID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlphaID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyToInvoiceTo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyToInvoiceTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Account] SET [InvoiceAddressID] = @InvoiceAddressID, [CustomerID] =" +
                " @CustomerID, [ContactDetailID] = @ContactDetailID, [TermTypeID] = @TermTypeID, " +
                "[AlphaID] = @AlphaID, [CompanyToInvoiceTo] = @CompanyToInvoiceTo WHERE (([ID] = " +
                "@Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceAddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactDetailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactDetailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlphaID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlphaID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyToInvoiceTo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyToInvoiceTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, InvoiceAddressID, CustomerID, ContactDetailID, TermTypeID, AlphaID, Co" +
                "mpanyToInvoiceTo FROM dbo.Account";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.AccountDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.AccountDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SuperCreamDBDataSet.AccountDataTable dataTable = new SuperCreamDBDataSet.AccountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SuperCreamDBDataSet.AccountDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SuperCreamDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Account");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> InvoiceAddressID, global::System.Nullable<int> CustomerID, global::System.Nullable<int> ContactDetailID, global::System.Nullable<int> TermTypeID, string AlphaID, string CompanyToInvoiceTo) {
            if ((InvoiceAddressID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(InvoiceAddressID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ContactDetailID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ContactDetailID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TermTypeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(TermTypeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AlphaID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(AlphaID));
            }
            if ((CompanyToInvoiceTo == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CompanyToInvoiceTo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> InvoiceAddressID, global::System.Nullable<int> CustomerID, global::System.Nullable<int> ContactDetailID, global::System.Nullable<int> TermTypeID, string AlphaID, string CompanyToInvoiceTo, int Original_ID) {
            if ((InvoiceAddressID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(InvoiceAddressID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ContactDetailID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ContactDetailID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TermTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(TermTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AlphaID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(AlphaID));
            }
            if ((CompanyToInvoiceTo == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CompanyToInvoiceTo));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptDetailsGetDeliveryNoteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rptDetailsGetDeliveryNoteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptDetailsGetDeliveryNote";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("AlphaPrefixOrPostFix", "AlphaPrefixOrPostFix");
            tableMapping.ColumnMappings.Add("AlphaID", "AlphaID");
            tableMapping.ColumnMappings.Add("OrderDate", "OrderDate");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            tableMapping.ColumnMappings.Add("OrderStatus", "OrderStatus");
            tableMapping.ColumnMappings.Add("HeaderSpecialInstructions", "HeaderSpecialInstructions");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("CompanyEMailAddress", "CompanyEMailAddress");
            tableMapping.ColumnMappings.Add("CompanyOfficePhoneNumber1", "CompanyOfficePhoneNumber1");
            tableMapping.ColumnMappings.Add("CompanyOfficePhoneNumber2", "CompanyOfficePhoneNumber2");
            tableMapping.ColumnMappings.Add("CompanyVatRegistrationNumber", "CompanyVatRegistrationNumber");
            tableMapping.ColumnMappings.Add("CompanyAddressLines", "CompanyAddressLines");
            tableMapping.ColumnMappings.Add("CompanyCounty", "CompanyCounty");
            tableMapping.ColumnMappings.Add("CompanyMapReference", "CompanyMapReference");
            tableMapping.ColumnMappings.Add("CompanyPostCode", "CompanyPostCode");
            tableMapping.ColumnMappings.Add("CompanyTown", "CompanyTown");
            tableMapping.ColumnMappings.Add("CompanyAddressType", "CompanyAddressType");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("CompanyToInvoiceTo", "CompanyToInvoiceTo");
            tableMapping.ColumnMappings.Add("InvoiceAddressID", "InvoiceAddressID");
            tableMapping.ColumnMappings.Add("ContactDetailID", "ContactDetailID");
            tableMapping.ColumnMappings.Add("EMailAddress", "EMailAddress");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("InitialNote", "InitialNote");
            tableMapping.ColumnMappings.Add("JobRole", "JobRole");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("AccountPhoneNumber", "AccountPhoneNumber");
            tableMapping.ColumnMappings.Add("OutletStoreName", "OutletStoreName");
            tableMapping.ColumnMappings.Add("Note", "Note");
            tableMapping.ColumnMappings.Add("OpeningHoursNotes", "OpeningHoursNotes");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("InvoiceAddressMapReference", "InvoiceAddressMapReference");
            tableMapping.ColumnMappings.Add("InvoiceAddressCounty", "InvoiceAddressCounty");
            tableMapping.ColumnMappings.Add("InvoiceAddressTown", "InvoiceAddressTown");
            tableMapping.ColumnMappings.Add("InvoiceAddressPostCode", "InvoiceAddressPostCode");
            tableMapping.ColumnMappings.Add("OutletStoreAddressLines", "OutletStoreAddressLines");
            tableMapping.ColumnMappings.Add("OutletStoreCounty", "OutletStoreCounty");
            tableMapping.ColumnMappings.Add("OutletStoreMapReference", "OutletStoreMapReference");
            tableMapping.ColumnMappings.Add("OutletStorePostCode", "OutletStorePostCode");
            tableMapping.ColumnMappings.Add("OutletStoreTown", "OutletStoreTown");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("NoOfUnits", "NoOfUnits");
            tableMapping.ColumnMappings.Add("OrderLineStatus", "OrderLineStatus");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("QtyPerUnit", "QtyPerUnit");
            tableMapping.ColumnMappings.Add("SpecialInstructions", "SpecialInstructions");
            tableMapping.ColumnMappings.Add("ProductDescription", "ProductDescription");
            tableMapping.ColumnMappings.Add("ProductCode", "ProductCode");
            tableMapping.ColumnMappings.Add("RRPPerItem", "RRPPerItem");
            tableMapping.ColumnMappings.Add("VatExempt", "VatExempt");
            tableMapping.ColumnMappings.Add("PaymentTerms", "PaymentTerms");
            tableMapping.ColumnMappings.Add("VanDescription", "VanDescription");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptDetailsGetDeliveryNote";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutletStoreID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.rptDetailsGetDeliveryNoteDataTable dataTable, global::System.Nullable<int> OrderID, global::System.Nullable<int> AccountID, global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.rptDetailsGetDeliveryNoteDataTable GetData(global::System.Nullable<int> OrderID, global::System.Nullable<int> AccountID, global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            SuperCreamDBDataSet.rptDetailsGetDeliveryNoteDataTable dataTable = new SuperCreamDBDataSet.rptDetailsGetDeliveryNoteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptGetDeliveryAddressLinesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rptGetDeliveryAddressLinesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptGetDeliveryAddressLines";
            tableMapping.ColumnMappings.Add("AddressLine", "AddressLine");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptGetDeliveryAddressLines";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutletStoreID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.rptGetDeliveryAddressLinesDataTable dataTable, global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.rptGetDeliveryAddressLinesDataTable GetData(global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SuperCreamDBDataSet.rptGetDeliveryAddressLinesDataTable dataTable = new SuperCreamDBDataSet.rptGetDeliveryAddressLinesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptGetFoundationFacilityAddressLinesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rptGetFoundationFacilityAddressLinesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptGetFoundationFacilityAddressLines";
            tableMapping.ColumnMappings.Add("AddressLine", "AddressLine");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptGetFoundationFacilityAddressLines";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.rptGetFoundationFacilityAddressLinesDataTable dataTable, global::System.Nullable<int> AccountID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.rptGetFoundationFacilityAddressLinesDataTable GetData(global::System.Nullable<int> AccountID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SuperCreamDBDataSet.rptGetFoundationFacilityAddressLinesDataTable dataTable = new SuperCreamDBDataSet.rptGetFoundationFacilityAddressLinesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptGetOrderTotalsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rptGetOrderTotalsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptGetOrderTotals";
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("VatTotal", "VatTotal");
            tableMapping.ColumnMappings.Add("NetTotal", "NetTotal");
            tableMapping.ColumnMappings.Add("NonVatableTotal", "NonVatableTotal");
            tableMapping.ColumnMappings.Add("VatableTotal", "VatableTotal");
            tableMapping.ColumnMappings.Add("PercentageValue", "PercentageValue");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptGetOrderTotals";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.rptGetOrderTotalsDataTable dataTable, global::System.Nullable<int> OrderID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.rptGetOrderTotalsDataTable GetData(global::System.Nullable<int> OrderID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SuperCreamDBDataSet.rptGetOrderTotalsDataTable dataTable = new SuperCreamDBDataSet.rptGetOrderTotalsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptDetailsGetDeliveryNote1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rptDetailsGetDeliveryNote1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptDetailsGetDeliveryNote1";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("AlphaPrefixOrPostFix", "AlphaPrefixOrPostFix");
            tableMapping.ColumnMappings.Add("AlphaID", "AlphaID");
            tableMapping.ColumnMappings.Add("OrderDate", "OrderDate");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            tableMapping.ColumnMappings.Add("OrderStatus", "OrderStatus");
            tableMapping.ColumnMappings.Add("HeaderSpecialInstructions", "HeaderSpecialInstructions");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("CompanyEMailAddress", "CompanyEMailAddress");
            tableMapping.ColumnMappings.Add("CompanyOfficePhoneNumber1", "CompanyOfficePhoneNumber1");
            tableMapping.ColumnMappings.Add("CompanyOfficePhoneNumber2", "CompanyOfficePhoneNumber2");
            tableMapping.ColumnMappings.Add("CompanyVatRegistrationNumber", "CompanyVatRegistrationNumber");
            tableMapping.ColumnMappings.Add("CompanyAddressLines", "CompanyAddressLines");
            tableMapping.ColumnMappings.Add("CompanyCounty", "CompanyCounty");
            tableMapping.ColumnMappings.Add("CompanyMapReference", "CompanyMapReference");
            tableMapping.ColumnMappings.Add("CompanyPostCode", "CompanyPostCode");
            tableMapping.ColumnMappings.Add("CompanyTown", "CompanyTown");
            tableMapping.ColumnMappings.Add("CompanyAddressType", "CompanyAddressType");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("CompanyToInvoiceTo", "CompanyToInvoiceTo");
            tableMapping.ColumnMappings.Add("InvoiceAddressID", "InvoiceAddressID");
            tableMapping.ColumnMappings.Add("ContactDetailID", "ContactDetailID");
            tableMapping.ColumnMappings.Add("EMailAddress", "EMailAddress");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("InitialNote", "InitialNote");
            tableMapping.ColumnMappings.Add("JobRole", "JobRole");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("AccountPhoneNumber", "AccountPhoneNumber");
            tableMapping.ColumnMappings.Add("OutletStoreName", "OutletStoreName");
            tableMapping.ColumnMappings.Add("Note", "Note");
            tableMapping.ColumnMappings.Add("OpeningHoursNotes", "OpeningHoursNotes");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("InvoiceAddressMapReference", "InvoiceAddressMapReference");
            tableMapping.ColumnMappings.Add("InvoiceAddressCounty", "InvoiceAddressCounty");
            tableMapping.ColumnMappings.Add("InvoiceAddressTown", "InvoiceAddressTown");
            tableMapping.ColumnMappings.Add("InvoiceAddressPostCode", "InvoiceAddressPostCode");
            tableMapping.ColumnMappings.Add("OutletStoreAddressLines", "OutletStoreAddressLines");
            tableMapping.ColumnMappings.Add("OutletStoreCounty", "OutletStoreCounty");
            tableMapping.ColumnMappings.Add("OutletStoreMapReference", "OutletStoreMapReference");
            tableMapping.ColumnMappings.Add("OutletStorePostCode", "OutletStorePostCode");
            tableMapping.ColumnMappings.Add("OutletStoreTown", "OutletStoreTown");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("NoOfUnits", "NoOfUnits");
            tableMapping.ColumnMappings.Add("OrderLineStatus", "OrderLineStatus");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("QtyPerUnit", "QtyPerUnit");
            tableMapping.ColumnMappings.Add("SpecialInstructions", "SpecialInstructions");
            tableMapping.ColumnMappings.Add("ProductDescription", "ProductDescription");
            tableMapping.ColumnMappings.Add("ProductCode", "ProductCode");
            tableMapping.ColumnMappings.Add("RRPPerItem", "RRPPerItem");
            tableMapping.ColumnMappings.Add("VatExempt", "VatExempt");
            tableMapping.ColumnMappings.Add("PaymentTerms", "PaymentTerms");
            tableMapping.ColumnMappings.Add("VanDescription", "VanDescription");
            tableMapping.ColumnMappings.Add("DeliveryNoteNo", "DeliveryNoteNo");
            tableMapping.ColumnMappings.Add("InvoiceProformaNo", "InvoiceProformaNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptDetailsGetDeliveryNote";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutletStoreID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.rptDetailsGetDeliveryNote1DataTable dataTable, global::System.Nullable<int> OrderID, global::System.Nullable<int> AccountID, global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.rptDetailsGetDeliveryNote1DataTable GetData(global::System.Nullable<int> OrderID, global::System.Nullable<int> AccountID, global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            SuperCreamDBDataSet.rptDetailsGetDeliveryNote1DataTable dataTable = new SuperCreamDBDataSet.rptDetailsGetDeliveryNote1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptGetAddressLinesForInvoiceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rptGetAddressLinesForInvoiceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptGetAddressLinesForInvoice";
            tableMapping.ColumnMappings.Add("AddressLine", "AddressLine");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptGetAddressLinesForInvoice";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.rptGetAddressLinesForInvoiceDataTable dataTable, global::System.Nullable<int> AccountID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.rptGetAddressLinesForInvoiceDataTable GetData(global::System.Nullable<int> AccountID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SuperCreamDBDataSet.rptGetAddressLinesForInvoiceDataTable dataTable = new SuperCreamDBDataSet.rptGetAddressLinesForInvoiceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptDetailsGetInvoiceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rptDetailsGetInvoiceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptDetailsGetInvoice";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("AlphaPrefixOrPostFix", "AlphaPrefixOrPostFix");
            tableMapping.ColumnMappings.Add("AlphaID", "AlphaID");
            tableMapping.ColumnMappings.Add("OrderDate", "OrderDate");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            tableMapping.ColumnMappings.Add("OrderStatus", "OrderStatus");
            tableMapping.ColumnMappings.Add("HeaderSpecialInstructions", "HeaderSpecialInstructions");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("CompanyEMailAddress", "CompanyEMailAddress");
            tableMapping.ColumnMappings.Add("CompanyOfficePhoneNumber1", "CompanyOfficePhoneNumber1");
            tableMapping.ColumnMappings.Add("CompanyOfficePhoneNumber2", "CompanyOfficePhoneNumber2");
            tableMapping.ColumnMappings.Add("CompanyVatRegistrationNumber", "CompanyVatRegistrationNumber");
            tableMapping.ColumnMappings.Add("CompanyAddressLines", "CompanyAddressLines");
            tableMapping.ColumnMappings.Add("CompanyCounty", "CompanyCounty");
            tableMapping.ColumnMappings.Add("CompanyMapReference", "CompanyMapReference");
            tableMapping.ColumnMappings.Add("CompanyPostCode", "CompanyPostCode");
            tableMapping.ColumnMappings.Add("CompanyTown", "CompanyTown");
            tableMapping.ColumnMappings.Add("CompanyAddressType", "CompanyAddressType");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("CompanyToInvoiceTo", "CompanyToInvoiceTo");
            tableMapping.ColumnMappings.Add("InvoiceAddressID", "InvoiceAddressID");
            tableMapping.ColumnMappings.Add("ContactDetailID", "ContactDetailID");
            tableMapping.ColumnMappings.Add("EMailAddress", "EMailAddress");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("InitialNote", "InitialNote");
            tableMapping.ColumnMappings.Add("JobRole", "JobRole");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("AccountPhoneNumber", "AccountPhoneNumber");
            tableMapping.ColumnMappings.Add("OutletStoreName", "OutletStoreName");
            tableMapping.ColumnMappings.Add("Note", "Note");
            tableMapping.ColumnMappings.Add("OpeningHoursNotes", "OpeningHoursNotes");
            tableMapping.ColumnMappings.Add("InvoiceAddressMapReference", "InvoiceAddressMapReference");
            tableMapping.ColumnMappings.Add("InvoiceAddressCounty", "InvoiceAddressCounty");
            tableMapping.ColumnMappings.Add("InvoiceAddressTown", "InvoiceAddressTown");
            tableMapping.ColumnMappings.Add("InvoiceAddressPostCode", "InvoiceAddressPostCode");
            tableMapping.ColumnMappings.Add("OutletStoreAddressLines", "OutletStoreAddressLines");
            tableMapping.ColumnMappings.Add("OutletStoreCounty", "OutletStoreCounty");
            tableMapping.ColumnMappings.Add("OutletStoreMapReference", "OutletStoreMapReference");
            tableMapping.ColumnMappings.Add("OutletStorePostCode", "OutletStorePostCode");
            tableMapping.ColumnMappings.Add("OutletStoreTown", "OutletStoreTown");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("NoOfUnits", "NoOfUnits");
            tableMapping.ColumnMappings.Add("OrderLineStatus", "OrderLineStatus");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("QtyPerUnit", "QtyPerUnit");
            tableMapping.ColumnMappings.Add("SpecialInstructions", "SpecialInstructions");
            tableMapping.ColumnMappings.Add("ProductDescription", "ProductDescription");
            tableMapping.ColumnMappings.Add("ProductCode", "ProductCode");
            tableMapping.ColumnMappings.Add("RRPPerItem", "RRPPerItem");
            tableMapping.ColumnMappings.Add("VatExempt", "VatExempt");
            tableMapping.ColumnMappings.Add("PaymentTerms", "PaymentTerms");
            tableMapping.ColumnMappings.Add("VanDescription", "VanDescription");
            tableMapping.ColumnMappings.Add("DeliveryNoteNo", "DeliveryNoteNo");
            tableMapping.ColumnMappings.Add("InvoiceProformaNo", "InvoiceProformaNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SuperCreamDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptDetailsGetInvoice";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutletStoreID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SuperCreamDBDataSet.rptDetailsGetInvoiceDataTable dataTable, global::System.Nullable<int> OrderID, global::System.Nullable<int> AccountID, global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SuperCreamDBDataSet.rptDetailsGetInvoiceDataTable GetData(global::System.Nullable<int> OrderID, global::System.Nullable<int> AccountID, global::System.Nullable<int> OutletStoreID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((OrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(OrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(AccountID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OutletStoreID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(OutletStoreID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            SuperCreamDBDataSet.rptDetailsGetInvoiceDataTable dataTable = new SuperCreamDBDataSet.rptDetailsGetInvoiceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AccountTableAdapter _accountTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public AccountTableAdapter AccountTableAdapter {
            get {
                return this._accountTableAdapter;
            }
            set {
                this._accountTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._accountTableAdapter != null) 
                            && (this._accountTableAdapter.Connection != null))) {
                    return this._accountTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._accountTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(SuperCreamDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._accountTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Account.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._accountTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(SuperCreamDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._accountTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Account.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._accountTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(SuperCreamDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._accountTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Account.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._accountTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(SuperCreamDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._accountTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._accountTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._accountTableAdapter != null)) {
                    revertConnections.Add(this._accountTableAdapter, this._accountTableAdapter.Connection);
                    this._accountTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._accountTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._accountTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._accountTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._accountTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._accountTableAdapter != null)) {
                    this._accountTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._accountTableAdapter]));
                    this._accountTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591