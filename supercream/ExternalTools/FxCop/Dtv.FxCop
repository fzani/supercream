<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="DTV Project">
 <ProjectOptions>
  <PlatformAssembliesLocation>c:\WINDOWS\Microsoft.NET\Framework\v2.0.50727</PlatformAssembliesLocation>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="None" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="False" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="Message Level" Deterministic="False" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-GB" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>True</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>True</IgnoreGeneratedCode>
  <TargetFrameworkVersion>3.5</TargetFrameworkVersion>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>$(ProjectDir)/../../../../Program Files/Reference Assemblies/Microsoft/Framework/Silverlight/v3.0/</Directory>
   <Directory>$(ProjectDir)/../../CommandManager/Bin/Debug/</Directory>
   <Directory>$(ProjectDir)/../../CommonExtensions/Bin/Debug/</Directory>
   <Directory>$(ProjectDir)/../../DTV/Bin/Debug/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.CommandManager.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.commandmanager.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark" Analyze="True">
       <Types>
        <Type Name="Command" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#CommandParameter" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CommandParameter()" Analyze="True" />
            <Accessor Name="#set_CommandParameter(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CommandParameterProperty" Analyze="True" />
          <Member Name="#ConnectHandler()" Analyze="True" />
          <Member Name="#dependencyObject" Analyze="True" />
          <Member Name="#DependencyObject" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DependencyObject()" Analyze="True" />
            <Accessor Name="#set_DependencyObject(System.Windows.DependencyObject)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#DisconnectHandler()" Analyze="True" />
          <Member Name="#EventName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_EventName()" Analyze="True" />
            <Accessor Name="#set_EventName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#EventNameProperty" Analyze="True" />
          <Member Name="#GetCommandParameter(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#GetDelegate()" Analyze="True" />
          <Member Name="#GetEventInfo(System.String)" Analyze="True" />
          <Member Name="#GetEventName(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#GetTargetCommand(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#Handler(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#isConnected" Analyze="True" />
          <Member Name="#OnCommandParameterChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnEventNameChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnActionCommandChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#ParameterChanged()" Analyze="True" />
          <Member Name="#SetCommandParameter(System.Windows.DependencyObject,System.Object)" Analyze="True" />
          <Member Name="#SetEventName(System.Windows.DependencyObject,System.String)" Analyze="True" />
          <Member Name="#SetTargetCommand(System.Windows.DependencyObject,System.Windows.Input.ActionCommand)" Analyze="True" />
          <Member Name="#TargetCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetCommand()" Analyze="True" />
            <Accessor Name="#set_TargetCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#TargetCommandProperty" Analyze="True" />
         </Members>
        </Type>
        <Type Name="CommandCollection" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;Items&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;set_ChildDataContext&gt;b__0(Landmark.Command)" Analyze="True" />
          <Member Name="#&lt;set_Owner&gt;b__1(Landmark.Command)" Analyze="True" />
          <Member Name="#Add(System.Object)" Analyze="True" />
          <Member Name="#childContext" Analyze="True" />
          <Member Name="#ChildDataContext" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ChildDataContext()" Analyze="True" />
            <Accessor Name="#set_ChildDataContext(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Clear()" Analyze="True" />
          <Member Name="#Contains(System.Object)" Analyze="True" />
          <Member Name="#CopyTo(System.Array,System.Int32)" Analyze="True" />
          <Member Name="#Count" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Count()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#GetEnumerator()" Analyze="True" />
          <Member Name="#IndexOf(System.Object)" Analyze="True" />
          <Member Name="#Insert(System.Int32,System.Object)" Analyze="True" />
          <Member Name="#IsFixedSize" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsFixedSize()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#IsReadOnly" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsReadOnly()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#IsSynchronized" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsSynchronized()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Items" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Items()" Analyze="True" />
            <Accessor Name="#set_Items(System.Collections.Generic.List`1&lt;Landmark.Command&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#owner" Analyze="True" />
          <Member Name="#Owner" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Owner()" Analyze="True" />
            <Accessor Name="#set_Owner(System.Windows.DependencyObject)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Remove(System.Object)" Analyze="True" />
          <Member Name="#RemoveAt(System.Int32)" Analyze="True" />
          <Member Name="#SyncRoot" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SyncRoot()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#System.Collections.IList.Item[System.Int32]" Analyze="True">
           <Accessors>
            <Accessor Name="#System.Collections.IList.get_Item(System.Int32)" Analyze="True" />
            <Accessor Name="#System.Collections.IList.set_Item(System.Int32,System.Object)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CommandGroup" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#ChildDataContext" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ChildDataContext()" Analyze="True" />
            <Accessor Name="#set_ChildDataContext(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#children" Analyze="True" />
          <Member Name="#Commands" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Commands()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Owner" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Owner()" Analyze="True" />
            <Accessor Name="#set_Owner(System.Windows.DependencyObject)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CommandManager" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#&lt;Commands&gt;k__BackingField" Analyze="True" />
          <Member Name="#CommandEventNameProperty" Analyze="True" />
          <Member Name="#CommandParameterProperty" Analyze="True" />
          <Member Name="#CommandProperty" Analyze="True" />
          <Member Name="#Commands" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Commands()" Analyze="True" />
            <Accessor Name="#set_Commands(System.Collections.Generic.Dictionary`2&lt;System.Windows.DependencyObject,Landmark.Command&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CommandsContextProperty" Analyze="True" />
          <Member Name="#CommandsProperty" Analyze="True" />
          <Member Name="#GetCommand(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#GetCommandEventName(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#GetCommandForDependencyObject(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#GetCommandParameter(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#GetCommands(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#HasCommand(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#HasCommands(System.Windows.DependencyObject)" Analyze="True" />
          <Member Name="#OnCommandChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnCommandEventNameChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnCommandParameterChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnCommandsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnCommandsContextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#SetCommand(System.Windows.DependencyObject,System.Windows.Input.ActionCommand)" Analyze="True" />
          <Member Name="#SetCommandEventName(System.Windows.DependencyObject,System.String)" Analyze="True" />
          <Member Name="#SetCommandParameter(System.Windows.DependencyObject,System.String)" Analyze="True" />
          <Member Name="#SetCommands(System.Windows.DependencyObject,Landmark.CommandGroup)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="NotifyExecutingCommand" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.EventHandler`1&lt;Landmark.NotifyExecutingCommandEventArgs&gt;)" Analyze="True" />
          <Member Name="#CanExecute(System.Object)" Analyze="True" />
          <Member Name="#CanExecuteChanged" Analyze="True" />
          <Member Name="#Execute(System.Object)" Analyze="True" />
          <Member Name="#Executing" Analyze="True" />
          <Member Name="#RaiseCanExecuteChanged()" Analyze="True" />
          <Member Name="#CanExecuteChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_CanExecuteChanged(System.EventHandler)" Analyze="True" />
            <Accessor Name="#remove_CanExecuteChanged(System.EventHandler)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Executing" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_Executing(System.EventHandler`1&lt;Landmark.NotifyExecutingCommandEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_Executing(System.EventHandler`1&lt;Landmark.NotifyExecutingCommandEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="NotifyExecutingCommandEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Object)" Analyze="True" />
          <Member Name="#&lt;Parameter&gt;k__BackingField" Analyze="True" />
          <Member Name="#Parameter" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Parameter()" Analyze="True" />
            <Accessor Name="#set_Parameter(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.CommonExtensions.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.commonextensions.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark" Analyze="True">
       <Types>
        <Type Name="DecimalExtensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Decimal,System.Decimal,System.Decimal,System.Boolean)" Analyze="True" />
          <Member Name="#ToDouble(System.Decimal)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DictionaryExtensions" Analyze="True">
         <Members>
          <Member Name="#GetValueOrDefault`1(System.Collections.Generic.Dictionary`2&lt;System.String,!!0&gt;,System.String,!!0)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DictionaryExtensions+&lt;&gt;c__DisplayClass1`1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;GetValueOrDefault&gt;b__0(System.Collections.Generic.KeyValuePair`2&lt;System.String,!0&gt;)" Analyze="True" />
          <Member Name="#name" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DoubleExtensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Double,System.Double,System.Double,System.Boolean)" Analyze="True" />
          <Member Name="#ToDecimal(System.Double)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="EnumExtensions" Analyze="True">
         <Members>
          <Member Name="#ToInt32(System.Enum)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="FloatExtensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Single,System.Single,System.Single,System.Boolean)" Analyze="True" />
          <Member Name="#ToDouble(System.Single)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="Int32Extensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Int32,System.Int32,System.Int32,System.Boolean)" Analyze="True" />
          <Member Name="#ToDouble(System.Int32)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="NameValueCollectionExtensions" Analyze="True">
         <Members>
          <Member Name="#GetValueOrDefault`1(System.Collections.Specialized.NameValueCollection,System.String,!!0)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="StreamReaderExtensions" Analyze="True">
         <Members>
          <Member Name="#SkipLines(System.IO.StreamReader,System.Int32)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="StringExtensions" Analyze="True">
         <Members>
          <Member Name="#IsEmptyOrNull(System.String)" Analyze="True" />
          <Member Name="#IsNotEmptyOrNull(System.String)" Analyze="True" />
          <Member Name="#Left(System.String,System.Int32)" Analyze="True" />
          <Member Name="#ToDecimal(System.String)" Analyze="True" />
          <Member Name="#ToDouble(System.String)" Analyze="True" />
          <Member Name="#ToInt32(System.String)" Analyze="True" />
          <Member Name="#ToTitleCase(System.String)" Analyze="True" />
          <Member Name="#ToUnquotedString(System.String)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="StringExtensions+&lt;&gt;c__DisplayClass1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;ToTitleCase&gt;b__0(System.String)" Analyze="True" />
          <Member Name="#builder" Analyze="True" />
         </Members>
        </Type>
        <Type Name="WpfExtensions" Analyze="True">
         <Members>
          <Member Name="#ToVisibility(System.Boolean)" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.ClientComponents.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.clientcomponents.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
        <Type Name="&lt;PrivateImplementationDetails&gt;{4C29FFFC-EAAC-4923-8499-BD34FA2656A3}" Analyze="True">
         <Members>
          <Member Name="#$$method0x600027f-1" Analyze="True" />
          <Member Name="#$$method0x60002bd-1" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv" Analyze="True">
       <Types>
        <Type Name="About" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#ContentStackPanel" Analyze="True" />
          <Member Name="#ContentText" Analyze="True" />
          <Member Name="#HeaderText" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#PageScrollViewer" Analyze="True" />
         </Members>
        </Type>
        <Type Name="AddNewAddressControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#address1NumberTextBox" Analyze="True" />
          <Member Name="#address2NameTextBox" Analyze="True" />
          <Member Name="#addressTextBlock" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#postCodeTextBlock" Analyze="True" />
          <Member Name="#postCodeTextBox" Analyze="True" />
          <Member Name="#regionTextBlock" Analyze="True" />
          <Member Name="#regionTextBox" Analyze="True" />
          <Member Name="#ShowOnMapButton" Analyze="True" />
          <Member Name="#streetTextBox" Analyze="True" />
          <Member Name="#townTextBlock" Analyze="True" />
          <Member Name="#townTextBox" Analyze="True" />
         </Members>
        </Type>
        <Type Name="AddNewAddressControlWithMap" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AddressHolderImage" Analyze="True" />
          <Member Name="#AddressLayout" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
         </Members>
        </Type>
        <Type Name="AddressDisplayControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#Address1TextBlock" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
         </Members>
        </Type>
        <Type Name="AddressDisplayPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#address1" Analyze="True" />
          <Member Name="#Address1" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address1()" Analyze="True" />
            <Accessor Name="#set_Address1(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address2" Analyze="True" />
          <Member Name="#Address2" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address2()" Analyze="True" />
            <Accessor Name="#set_Address2(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address3" Analyze="True" />
          <Member Name="#Address3" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address3()" Analyze="True" />
            <Accessor Name="#set_Address3(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Intialise()" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#postcode" Analyze="True" />
          <Member Name="#Postcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Postcode()" Analyze="True" />
            <Accessor Name="#set_Postcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#region" Analyze="True" />
          <Member Name="#Region" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Region()" Analyze="True" />
            <Accessor Name="#set_Region(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#targetProperty" Analyze="True" />
          <Member Name="#TargetProperty" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetProperty()" Analyze="True" />
            <Accessor Name="#set_TargetProperty(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.MatchedPropertyPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#town" Analyze="True" />
          <Member Name="#Town" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Town()" Analyze="True" />
            <Accessor Name="#set_Town(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="AddressPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(Landmark.Dtv.ServiceModel.PropertyServices.Address)" Analyze="True" />
          <Member Name="#address1" Analyze="True" />
          <Member Name="#Address1" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address1()" Analyze="True" />
            <Accessor Name="#set_Address1(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address2" Analyze="True" />
          <Member Name="#Address2" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address2()" Analyze="True" />
            <Accessor Name="#set_Address2(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address3" Analyze="True" />
          <Member Name="#Address3" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address3()" Analyze="True" />
            <Accessor Name="#set_Address3(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddressPresentationModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#displayText" Analyze="True" />
          <Member Name="#DisplayText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DisplayText()" Analyze="True" />
            <Accessor Name="#set_DisplayText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#GetDisplayText()" Analyze="True" />
          <Member Name="#postCode" Analyze="True" />
          <Member Name="#Postcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Postcode()" Analyze="True" />
            <Accessor Name="#set_Postcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#region" Analyze="True" />
          <Member Name="#Region" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Region()" Analyze="True" />
            <Accessor Name="#set_Region(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#town" Analyze="True" />
          <Member Name="#Town" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Town()" Analyze="True" />
            <Accessor Name="#set_Town(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="AdvancedDetailsControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
         </Members>
        </Type>
        <Type Name="AlternatingRowConverter" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
          <Member Name="#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="AppHelper" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#CreateNewUser(System.String,System.String,System.String)" Analyze="True" />
          <Member Name="#GetServiceClient()" Analyze="True" />
          <Member Name="#HasError(System.ComponentModel.AsyncCompletedEventArgs)" Analyze="True" />
          <Member Name="#IsSuccessfulResult(System.ComponentModel.AsyncCompletedEventArgs)" Analyze="True" />
          <Member Name="#NotifyNotImplemented(System.String)" Analyze="True" />
          <Member Name="#NotSet" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ApplicationExtensions" Analyze="True">
         <Members>
          <Member Name="#ClearCurrentDialog(System.Windows.Application)" Analyze="True" />
          <Member Name="#GetCurrentDialog(System.Windows.Application)" Analyze="True" />
          <Member Name="#SetCurrentDialog(System.Windows.Application,Landmark.Dtv.DialogWindow)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="BooleanVisibilityConverter" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
          <Member Name="#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="BranchGridItemPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(Landmark.Dtv.ServiceModel.CustomerServices.Branch)" Analyze="True" />
          <Member Name="#address1" Analyze="True" />
          <Member Name="#Address1" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address1()" Analyze="True" />
            <Accessor Name="#set_Address1(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address2" Analyze="True" />
          <Member Name="#Address2" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address2()" Analyze="True" />
            <Accessor Name="#set_Address2(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address3" Analyze="True" />
          <Member Name="#Address3" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address3()" Analyze="True" />
            <Accessor Name="#set_Address3(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#county" Analyze="True" />
          <Member Name="#County" Analyze="True">
           <Accessors>
            <Accessor Name="#get_County()" Analyze="True" />
            <Accessor Name="#set_County(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#data" Analyze="True" />
          <Member Name="#name" Analyze="True" />
          <Member Name="#Name" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Name()" Analyze="True" />
            <Accessor Name="#set_Name(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#postCode" Analyze="True" />
          <Member Name="#Postcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Postcode()" Analyze="True" />
            <Accessor Name="#set_Postcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#town" Analyze="True" />
          <Member Name="#Town" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Town()" Analyze="True" />
            <Accessor Name="#set_Town(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="BranchManagerPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,Landmark.Dtv.TreeNodePresentationModel)" Analyze="True" />
          <Member Name="#&lt;Load&gt;b__0(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.GetBranchesCompletedEventArgs)" Analyze="True" />
          <Member Name="#branches" Analyze="True" />
          <Member Name="#Branches" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Branches()" Analyze="True" />
            <Accessor Name="#set_Branches(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.BranchGridItemPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#parent" Analyze="True" />
         </Members>
        </Type>
        <Type Name="BranchPropertiesPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,Landmark.Dtv.TreeNodePresentationModel)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ChangeNotifierBase" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#ContentChanged" Analyze="True" />
          <Member Name="#PropertyChanged" Analyze="True" />
          <Member Name="#RaiseContentChanged(System.Object)" Analyze="True" />
          <Member Name="#RaisePropertyChanged(System.String)" Analyze="True" />
          <Member Name="#ContentChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_ContentChanged(System.EventHandler`1&lt;Landmark.Dtv.ContentChangedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_ContentChanged(System.EventHandler`1&lt;Landmark.Dtv.ContentChangedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PropertyChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler)" Analyze="True" />
            <Accessor Name="#remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ContentChangedEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;Data&gt;k__BackingField" Analyze="True" />
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CurrencyConverter" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
          <Member Name="#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="CustomerGridItemPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#id" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#parentName" Analyze="True" />
          <Member Name="#ParentName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ParentName()" Analyze="True" />
            <Accessor Name="#set_ParentName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#statutoryName" Analyze="True" />
          <Member Name="#StatutoryName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_StatutoryName()" Analyze="True" />
            <Accessor Name="#set_StatutoryName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#subOrganisations" Analyze="True" />
          <Member Name="#SubOrganisations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SubOrganisations()" Analyze="True" />
            <Accessor Name="#set_SubOrganisations(System.Collections.Generic.List`1&lt;Landmark.Dtv.CustomerGridItemPresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#tradingName" Analyze="True" />
          <Member Name="#TradingName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TradingName()" Analyze="True" />
            <Accessor Name="#set_TradingName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CustomerManager" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#ContentFrame" Analyze="True" />
          <Member Name="#ContentFrame_Navigated(System.Object,System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#CustomerRoot" Analyze="True" />
          <Member Name="#CustomerTreeView" Analyze="True" />
          <Member Name="#CustomerTreeView_SelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs`1&lt;System.Object&gt;)" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnNavigate(System.Object,Landmark.Dtv.NavigateEventArgs)" Analyze="True" />
          <Member Name="#SelectedItem" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedItem()" Analyze="True" />
            <Accessor Name="#set_SelectedItem(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SelectedItemProperty" Analyze="True" />
          <Member Name="#SelectionChanged" Analyze="True" />
          <Member Name="#ViewLoaded" Analyze="True" />
          <Member Name="#SelectionChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_SelectionChanged(System.EventHandler`1&lt;Landmark.Dtv.ContentChangedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_SelectionChanged(System.EventHandler`1&lt;Landmark.Dtv.ContentChangedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ViewLoaded" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_ViewLoaded(System.EventHandler`1&lt;Landmark.Dtv.ViewLoadedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_ViewLoaded(System.EventHandler`1&lt;Landmark.Dtv.ViewLoadedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CustomerManagerEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;Data&gt;k__BackingField" Analyze="True" />
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CustomerManagerPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;Load&gt;b__8(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.GetOrganisationTreeCompletedEventArgs)" Analyze="True" />
          <Member Name="#&lt;OnViewLoaded&gt;b__0(System.Object,Landmark.Dtv.ContentChangedEventArgs)" Analyze="True" />
          <Member Name="#&lt;OnViewLoaded&gt;b__2(System.Object,Landmark.Dtv.ContentChangedEventArgs)" Analyze="True" />
          <Member Name="#BranchPropertiesPageName" Analyze="True" />
          <Member Name="#CustomerManagerPresentationModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#OnSelectionChanged(System.Object,Landmark.Dtv.ContentChangedEventArgs)" Analyze="True" />
          <Member Name="#OnViewLoaded(System.Object,Landmark.Dtv.ViewLoadedEventArgs)" Analyze="True" />
          <Member Name="#OrganisationPropertiesPageName" Analyze="True" />
          <Member Name="#organisations" Analyze="True" />
          <Member Name="#Organisations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisations()" Analyze="True" />
            <Accessor Name="#set_Organisations(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.TreeNodePresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#Refresh(System.Object)" Analyze="True" />
          <Member Name="#selectedItem" Analyze="True" />
          <Member Name="#SelectedItem" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedItem()" Analyze="True" />
            <Accessor Name="#set_SelectedItem(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#UserPropertiesPageName" Analyze="True" />
         </Members>
        </Type>
        <Type Name="CustomerManagerPresentationModel+&lt;&gt;c__DisplayClass6" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;OnViewLoaded&gt;b__1(Landmark.Dtv.TreeNodePresentationModel)" Analyze="True" />
          <Member Name="#branch" Analyze="True" />
         </Members>
        </Type>
        <Type Name="CustomerTreeViewControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#CustomerRoot" Analyze="True" />
          <Member Name="#CustomerTreeView" Analyze="True" />
          <Member Name="#CustomerTreeView_SelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs`1&lt;System.Object&gt;)" Analyze="False" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#SelectionChanged" Analyze="True" />
          <Member Name="#SelectionChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_SelectionChanged(System.EventHandler`1&lt;Landmark.Dtv.ContentChangedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_SelectionChanged(System.EventHandler`1&lt;Landmark.Dtv.ContentChangedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CustomerTreeViewPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#NodeSelectionChanged" Analyze="True" />
          <Member Name="#OnNodeSelected(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#organisations" Analyze="True" />
          <Member Name="#Organisations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisations()" Analyze="True" />
            <Accessor Name="#set_Organisations(System.Collections.Generic.List`1&lt;Landmark.Dtv.TreeNodePresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#NodeSelectionChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_NodeSelectionChanged(System.EventHandler`1&lt;Landmark.Dtv.CustomerManagerEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_NodeSelectionChanged(System.EventHandler`1&lt;Landmark.Dtv.CustomerManagerEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DashboardControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DateConverter" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
          <Member Name="#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DialogPresentationModelBase" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__0(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#closeWindowCommand" Analyze="True" />
          <Member Name="#CloseWindowCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CloseWindowCommand()" Analyze="True" />
            <Accessor Name="#set_CloseWindowCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#formVisibility" Analyze="True" />
          <Member Name="#FormVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FormVisibility()" Analyze="True" />
            <Accessor Name="#set_FormVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#successVisibility" Analyze="True" />
          <Member Name="#SuccessVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SuccessVisibility()" Analyze="True" />
            <Accessor Name="#set_SuccessVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DialogWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;ShowDialog&gt;b__1(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#DialogClosed" Analyze="True" />
          <Member Name="#FindName(System.String)" Analyze="True" />
          <Member Name="#ShowDialog(System.Boolean)" Analyze="True" />
          <Member Name="#DialogClosed" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_DialogClosed(System.EventHandler`1&lt;Landmark.Dtv.DialogWindowClosedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_DialogClosed(System.EventHandler`1&lt;Landmark.Dtv.DialogWindowClosedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DialogWindowClosedEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;DialogResult&gt;k__BackingField" Analyze="True" />
          <Member Name="#DialogResult" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DialogResult()" Analyze="True" />
            <Accessor Name="#set_DialogResult(System.Nullable`1&lt;System.Boolean&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="EditReviewTargetProperty" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#addedFeatureEditorControl" Analyze="True" />
          <Member Name="#addFeatureHeaderTextBlock" Analyze="True" />
          <Member Name="#DataGrid_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#descriptionTextBlock" Analyze="True" />
          <Member Name="#featureEditorControl" Analyze="True" />
          <Member Name="#featureHeaderTextBlock" Analyze="True" />
          <Member Name="#headerTextBlock" Analyze="True" />
          <Member Name="#informationTextBlock" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#photoTextBlock" Analyze="True" />
          <Member Name="#propertyTransactionsDataGrid" Analyze="True" />
          <Member Name="#relatedLinksDataGrid" Analyze="True" />
          <Member Name="#relatedLinksTextBlock" Analyze="True" />
          <Member Name="#showOnMapTextBlock" Analyze="True" />
          <Member Name="#transactionsTextBlock" Analyze="True" />
         </Members>
        </Type>
        <Type Name="EditReviewTargetPropertyPresentationalModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#featurelist" Analyze="True" />
          <Member Name="#FeatureList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureList()" Analyze="True" />
            <Accessor Name="#set_FeatureList(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.FeatureItem&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#images" Analyze="True" />
          <Member Name="#Images" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Images()" Analyze="True" />
            <Accessor Name="#set_Images(System.Collections.Generic.List`1&lt;Landmark.Dtv.ImagePresenterItemPresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Intialise()" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#LoadFeautures()" Analyze="True" />
          <Member Name="#LoadImages()" Analyze="True" />
          <Member Name="#LoadPropertyTransactions()" Analyze="True" />
          <Member Name="#LoadRelatedLinks()" Analyze="True" />
          <Member Name="#property" Analyze="True" />
          <Member Name="#Property" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Property()" Analyze="True" />
            <Accessor Name="#set_Property(Landmark.Dtv.ServiceModel.PropertyServices.Property)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PropertyTransactions" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PropertyTransactions()" Analyze="True" />
            <Accessor Name="#set_PropertyTransactions(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.PropertyTransactionsPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#propertyTransactionsPresentationModel" Analyze="True" />
          <Member Name="#RelatedLinks" Analyze="True">
           <Accessors>
            <Accessor Name="#get_RelatedLinks()" Analyze="True" />
            <Accessor Name="#set_RelatedLinks(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.RelatedLinksPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#relatedLinksPresentationModel" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
         </Members>
        </Type>
        <Type Name="EnterTargetPropertyControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AddressHolderImage" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#MapHolderImage" Analyze="True" />
          <Member Name="#TabControl_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#TargetSearch" Analyze="True" />
         </Members>
        </Type>
        <Type Name="EnterTargetPropertyPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;SearchCommand_Executing&gt;b__2(System.Object,Landmark.Dtv.ServiceModel.PropertyServices.GetMatchedPropertiesCompletedEventArgs)" Analyze="True" />
          <Member Name="#addNewAddressCommand" Analyze="True" />
          <Member Name="#AddNewAddressCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddNewAddressCommand()" Analyze="True" />
            <Accessor Name="#set_AddNewAddressCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddNewAddressCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#Intialise()" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#seachIndex" Analyze="True" />
          <Member Name="#searchCommand" Analyze="True" />
          <Member Name="#SearchCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchCommand()" Analyze="True" />
            <Accessor Name="#set_SearchCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#SearchIndex" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchIndex()" Analyze="True" />
            <Accessor Name="#set_SearchIndex(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#searchPostcode" Analyze="True" />
          <Member Name="#SearchPostcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchPostcode()" Analyze="True" />
            <Accessor Name="#set_SearchPostcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#searchText" Analyze="True" />
          <Member Name="#SearchText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchText()" Analyze="True" />
            <Accessor Name="#set_SearchText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#selectedAddress" Analyze="True" />
          <Member Name="#SelectedAddress" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedAddress()" Analyze="True" />
            <Accessor Name="#set_SelectedAddress(Landmark.Dtv.ServiceModel.PropertyServices.Address)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#targetAddressProperties" Analyze="True" />
          <Member Name="#TargetAddressProperties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetAddressProperties()" Analyze="True" />
            <Accessor Name="#set_TargetAddressProperties(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.ServiceModel.PropertyServices.Address&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#targetProperties" Analyze="True" />
          <Member Name="#TargetProperties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetProperties()" Analyze="True" />
            <Accessor Name="#set_TargetProperties(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.MatchedPropertyPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="EntityPresentationModelBase" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#createdBy" Analyze="True" />
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#createdDate" Analyze="True" />
          <Member Name="#id" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Merge(System.Object)" Analyze="True" />
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#modifiedBy" Analyze="True" />
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#modifiedDate" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ErrorWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Exception)" Analyze="True" />
          <Member Name="#.ctor(System.String)" Analyze="True" />
          <Member Name="#.ctor(System.String,System.String)" Analyze="True" />
          <Member Name="#.ctor(System.Uri)" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#ContentStackPanel" Analyze="True" />
          <Member Name="#ErrorTextBox" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#IntroductoryText" Analyze="True" />
          <Member Name="#LabelText" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OKButton" Analyze="True" />
          <Member Name="#OKButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="FeatureEditorControl" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AuditPopup" Analyze="True" />
          <Member Name="#CancelPopupButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#CheckIfWatermarkNeeded()" Analyze="True" />
          <Member Name="#ContolHoverEndStoryBoard" Analyze="True" />
          <Member Name="#ContolHoverStoryBoard" Analyze="True" />
          <Member Name="#controlBorder" Analyze="True" />
          <Member Name="#ControlGrid" Analyze="True" />
          <Member Name="#FeatureComboBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Analyze="True" />
          <Member Name="#FeatureContainerGrid" Analyze="True" />
          <Member Name="#FeatureContainerGrid_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#featureDescriptionTextBlock" Analyze="True" />
          <Member Name="#FeatureList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureList()" Analyze="True" />
            <Accessor Name="#set_FeatureList(System.Collections.Generic.List`1&lt;System.String&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#featureListComboBox" Analyze="True" />
          <Member Name="#FeatureListComboBox_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#FeatureListProperty" Analyze="True" />
          <Member Name="#FeatureType" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureType()" Analyze="True" />
            <Accessor Name="#set_FeatureType(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureTypeProperty" Analyze="True" />
          <Member Name="#featureTypeTextBlock" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#OnFeatureListLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnFeatureTypeLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnReasonLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnSelectedValue(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#PopupGrid" Analyze="True" />
          <Member Name="#Reason" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Reason()" Analyze="True" />
            <Accessor Name="#set_Reason(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#reasonForChangeTextBox" Analyze="True" />
          <Member Name="#ReasonForChangeTextBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)" Analyze="True" />
          <Member Name="#ReasonProperty" Analyze="True" />
          <Member Name="#rectangle" Analyze="True" />
          <Member Name="#SaveButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#SelectedValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedValue()" Analyze="True" />
            <Accessor Name="#set_SelectedValue(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SelectedValueProperty" Analyze="True" />
          <Member Name="#SelectFeatureButtonDownState()" Analyze="True" />
          <Member Name="#SelectFeatureButtonUpState()" Analyze="True" />
          <Member Name="#SelectFeatureTypeButton" Analyze="True" />
          <Member Name="#SelectFeatureTypeButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="FeatureEditorListManager" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#featureEditorControl" Analyze="True" />
          <Member Name="#featureHeaderTextBlock" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="FeatureEditorManager" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#FeatureAuditorManagerTest_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#featureEditorControl" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#TestControlButton" Analyze="True" />
          <Member Name="#TestControlButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="FeatureEditorWrappedList" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#FeatureEditorWrappedList_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#Features" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Features()" Analyze="True" />
            <Accessor Name="#set_Features(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.FeatureItem&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#FeaturesProperty" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#ItemsPresenter_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnFeatureListLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#WrappedFeatureList" Analyze="True" />
          <Member Name="#WrappedFeatureList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Analyze="False" />
         </Members>
        </Type>
        <Type Name="FeatureItem" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;FeatureList&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;FeatureType&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Reason&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;SelectedValue&gt;k__BackingField" Analyze="True" />
          <Member Name="#FeatureList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureList()" Analyze="True" />
            <Accessor Name="#set_FeatureList(System.Collections.Generic.List`1&lt;System.String&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureType" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureType()" Analyze="True" />
            <Accessor Name="#set_FeatureType(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Reason" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Reason()" Analyze="True" />
            <Accessor Name="#set_Reason(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SelectedValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedValue()" Analyze="True" />
            <Accessor Name="#set_SelectedValue(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="FeatureListPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#featurelist" Analyze="True" />
          <Member Name="#FeatureList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureList()" Analyze="True" />
            <Accessor Name="#set_FeatureList(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.FeatureItem&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#Intialise()" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#numberList" Analyze="True" />
          <Member Name="#NumberList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_NumberList()" Analyze="True" />
            <Accessor Name="#set_NumberList(System.Collections.ObjectModel.ObservableCollection`1&lt;System.Int32&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#SaveChanges()" Analyze="True" />
         </Members>
        </Type>
        <Type Name="Home" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ImageFlowControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AssignItems()" Analyze="True" />
          <Member Name="#first" Analyze="True" />
          <Member Name="#First_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#FirstHolderImage" Analyze="True" />
          <Member Name="#FirstToolTip" Analyze="True" />
          <Member Name="#flowControl" Analyze="True" />
          <Member Name="#Image_ImageOpened(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#last" Analyze="True" />
          <Member Name="#Last_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#LastHolderImage" Analyze="True" />
          <Member Name="#LastToolTip" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#loadingControl" Analyze="True" />
          <Member Name="#MainPage_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#MainPageMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)" Analyze="False" />
          <Member Name="#next" Analyze="True" />
          <Member Name="#Next_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#NextHolderImage" Analyze="True" />
          <Member Name="#nextPage" Analyze="True" />
          <Member Name="#NextPage_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#NextPageHolderImage" Analyze="True" />
          <Member Name="#NextPageToolTip" Analyze="True" />
          <Member Name="#NextToolTip" Analyze="True" />
          <Member Name="#prev" Analyze="True" />
          <Member Name="#Prev_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#PrevHolderImage" Analyze="True" />
          <Member Name="#PreviousPageToolTip" Analyze="True" />
          <Member Name="#PreviousPagHolderImage" Analyze="True" />
          <Member Name="#prevPage" Analyze="True" />
          <Member Name="#PrevPage_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#PrevToolTip" Analyze="True" />
          <Member Name="#slider" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ImagePresenterItemPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#id" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#imageUrl" Analyze="True" />
          <Member Name="#ImageUrl" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ImageUrl()" Analyze="True" />
            <Accessor Name="#set_ImageUrl(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#title" Analyze="True" />
          <Member Name="#Title" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Title()" Analyze="True" />
            <Accessor Name="#set_Title(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ImagePresenterPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#images" Analyze="True" />
          <Member Name="#Images" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Images()" Analyze="True" />
            <Accessor Name="#set_Images(System.Collections.Generic.List`1&lt;Landmark.Dtv.ImagePresenterItemPresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
         </Members>
        </Type>
        <Type Name="IWindowManager" Analyze="True">
         <Members>
          <Member Name="#CurrentDialog" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CurrentDialog()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SetDialogWindow(Landmark.Dtv.DialogWindow)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="Landing" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#_IsCtrlDown" Analyze="True" />
          <Member Name="#_OsmMapnikTileLayer" Analyze="True" />
          <Member Name="#_OsmOsmarendTileLayer" Analyze="True" />
          <Member Name="#_SourceControl" Analyze="True" />
          <Member Name="#AddNewAddress" Analyze="True" />
          <Member Name="#AddressDisplayControl" Analyze="True" />
          <Member Name="#AddressDisplayControl_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#Events_MapLoaded(DeepEarth.Map,DeepEarth.Events.MapEventArgs)" Analyze="True" />
          <Member Name="#InitAnimations" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#InitNewAddressPosition" Analyze="True" />
          <Member Name="#Landing_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#map" Analyze="True" />
          <Member Name="#MapKeyDown(DeepEarth.Map,System.Windows.Input.KeyEventArgs)" Analyze="True" />
          <Member Name="#MapKeyUp(DeepEarth.Map,System.Windows.Input.KeyEventArgs)" Analyze="True" />
          <Member Name="#mapSourceControl" Analyze="True" />
          <Member Name="#OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#OnShowAddress(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#Page_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#PlaceHolderImage_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#ReviewPropertyButton" Analyze="True" />
          <Member Name="#RotateLeft_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#RotateRight_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#SetMapSource(DeepEarth.Provider.LandmarkMaps.LmkMapModes)" Analyze="True" />
          <Member Name="#ShowAddressPanel" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ShowAddressPanel()" Analyze="True" />
            <Accessor Name="#set_ShowAddressPanel(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ShowAddressPanelProperty" Analyze="True" />
          <Member Name="#ShowDashboardView" Analyze="True" />
          <Member Name="#ShowNewAddress" Analyze="True" />
          <Member Name="#ShowSearchView" Analyze="True" />
          <Member Name="#ShowTargetPropertySearch" Analyze="True" />
          <Member Name="#TargetPropertySearch" Analyze="True" />
          <Member Name="#TargetPropertySearchSP" Analyze="True" />
         </Members>
        </Type>
        <Type Name="LandingPagePresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;ReviewPropertyCommand_Executing&gt;b__3(System.Object,Landmark.Dtv.ServiceModel.PropertyServices.SavePropertyCompletedEventArgs)" Analyze="True" />
          <Member Name="#&lt;SearchCommand_Executing&gt;b__1(System.Object,Landmark.Dtv.ServiceModel.PropertyServices.GetMatchedPropertiesCompletedEventArgs)" Analyze="True" />
          <Member Name="#addNewAddressCommand" Analyze="True" />
          <Member Name="#AddNewAddressCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddNewAddressCommand()" Analyze="True" />
            <Accessor Name="#set_AddNewAddressCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddNewAddressCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#addNewAddressPanelVisibility" Analyze="True" />
          <Member Name="#AddNewAddressPanelVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddNewAddressPanelVisibility()" Analyze="True" />
            <Accessor Name="#set_AddNewAddressPanelVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#addressSearchPanelVisibility" Analyze="True" />
          <Member Name="#AddressSearchPanelVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddressSearchPanelVisibility()" Analyze="True" />
            <Accessor Name="#set_AddressSearchPanelVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#featurelist" Analyze="True" />
          <Member Name="#FeatureList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureList()" Analyze="True" />
            <Accessor Name="#set_FeatureList(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.FeatureItem&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#LandingPagePresentationModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#matchedAddressProperties" Analyze="True" />
          <Member Name="#MatchedAddressProperties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MatchedAddressProperties()" Analyze="True" />
            <Accessor Name="#set_MatchedAddressProperties(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.AddressPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#navigatePreviewCommand" Analyze="True" />
          <Member Name="#NavigatePreviewCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_NavigatePreviewCommand()" Analyze="True" />
            <Accessor Name="#set_NavigatePreviewCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#NavigatePreviewCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#reveiwPropertyCommand" Analyze="True" />
          <Member Name="#ReviewPropertyCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ReviewPropertyCommand()" Analyze="True" />
            <Accessor Name="#set_ReviewPropertyCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ReviewPropertyCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#saveAddressCommand" Analyze="True" />
          <Member Name="#SaveAddressCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SaveAddressCommand()" Analyze="True" />
            <Accessor Name="#set_SaveAddressCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SaveAddressCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#seachIndex" Analyze="True" />
          <Member Name="#searchButtonEnabled" Analyze="True" />
          <Member Name="#SearchButtonEnabled" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchButtonEnabled()" Analyze="True" />
            <Accessor Name="#set_SearchButtonEnabled(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#searchCommand" Analyze="True" />
          <Member Name="#SearchCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchCommand()" Analyze="True" />
            <Accessor Name="#set_SearchCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#SearchIndex" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchIndex()" Analyze="True" />
            <Accessor Name="#set_SearchIndex(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#searchText" Analyze="True" />
          <Member Name="#SearchText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchText()" Analyze="True" />
            <Accessor Name="#set_SearchText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#showOnMapCommand" Analyze="True" />
          <Member Name="#ShowOnMapCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ShowOnMapCommand()" Analyze="True" />
            <Accessor Name="#set_ShowOnMapCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ShowOnMapCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#targetAddress" Analyze="True" />
          <Member Name="#TargetAddress" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetAddress()" Analyze="True" />
            <Accessor Name="#set_TargetAddress(Landmark.Dtv.AddressPresentationModel)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="LogOnPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;LogOnCommand_Executing&gt;b__1(System.Object,Landmark.Dtv.ServiceModel.SecurityServices.AuthenticateUserCompletedEventArgs)" Analyze="True" />
          <Member Name="#failedAuthentication" Analyze="True" />
          <Member Name="#FailedAuthentication" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FailedAuthentication()" Analyze="True" />
            <Accessor Name="#set_FailedAuthentication(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#isAuthenticated" Analyze="True" />
          <Member Name="#IsAuthenticated" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsAuthenticated()" Analyze="True" />
            <Accessor Name="#set_IsAuthenticated(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#logOnCommand" Analyze="True" />
          <Member Name="#LogOnCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LogOnCommand()" Analyze="True" />
            <Accessor Name="#set_LogOnCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LogOnCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#password" Analyze="True" />
          <Member Name="#Password" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Password()" Analyze="True" />
            <Accessor Name="#set_Password(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#userName" Analyze="True" />
          <Member Name="#UserName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UserName()" Analyze="True" />
            <Accessor Name="#set_UserName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="LogOnWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__0(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#authenticationMessage" Analyze="True" />
          <Member Name="#cancelButton" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#layoutRoot" Analyze="True" />
          <Member Name="#logOnButton" Analyze="True" />
          <Member Name="#LogOnChildWindow" Analyze="True" />
          <Member Name="#LogOnChildWindow_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)" Analyze="True" />
          <Member Name="#logOnPanel" Analyze="True" />
          <Member Name="#logOnPasswordBox" Analyze="True" />
          <Member Name="#logOnUserNameBox" Analyze="True" />
         </Members>
        </Type>
        <Type Name="MapSourceControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#_Map" Analyze="True" />
          <Member Name="#_SelectedSourceId" Analyze="True" />
          <Member Name="#_TileSources" Analyze="True" />
          <Member Name="#_Toolbar" Analyze="True" />
          <Member Name="#&lt;ID&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;IsVisible&gt;k__BackingField" Analyze="True" />
          <Member Name="#GetDisplayName(Landmark.Dtv.MapSourceControl+TileSourceIds)" Analyze="True" />
          <Member Name="#GetSourceId(DeepEarth.Layers.TileSource)" Analyze="True" />
          <Member Name="#ID" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ID()" Analyze="True" />
            <Accessor Name="#set_ID(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#InitializeList()" Analyze="True" />
          <Member Name="#IsVisible" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsVisible()" Analyze="True" />
            <Accessor Name="#set_IsVisible(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#MapInstance" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MapInstance()" Analyze="True" />
            <Accessor Name="#set_MapInstance(DeepEarth.Map)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#OnTileSourceChanged(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#SelectedSource" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedSource()" Analyze="True" />
            <Accessor Name="#set_SelectedSource(Landmark.Dtv.MapSourceControl+TileSourceIds)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SelectionChanged(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#SetMapSource(Landmark.Dtv.MapSourceControl+TileSourceIds)" Analyze="True" />
          <Member Name="#TileSources" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TileSources()" Analyze="True" />
            <Accessor Name="#set_TileSources(System.Collections.Generic.List`1&lt;Landmark.Dtv.MapSourceControl+TileSourceIds&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="MapSourceControl+TileSourceIds" Analyze="True">
         <Members>
          <Member Name="#BlueMarbleLocal" Analyze="True" />
          <Member Name="#BlueMarbleWeb" Analyze="True" />
          <Member Name="#CB200k" Analyze="True" />
          <Member Name="#CB800k" Analyze="True" />
          <Member Name="#CBGB" Analyze="True" />
          <Member Name="#CmCycle" Analyze="True" />
          <Member Name="#CmMobile" Analyze="True" />
          <Member Name="#CmNoNames" Analyze="True" />
          <Member Name="#CmWeb" Analyze="True" />
          <Member Name="#Default" Analyze="True" />
          <Member Name="#GoogleMarsElevation" Analyze="True" />
          <Member Name="#GoogleMarsInfraRed" Analyze="True" />
          <Member Name="#GoogleMarsVisible" Analyze="True" />
          <Member Name="#GoogleMoon" Analyze="True" />
          <Member Name="#GoogleMoonClemBw" Analyze="True" />
          <Member Name="#GoogleMoonTerrain" Analyze="True" />
          <Member Name="#LandmarkOS10k" Analyze="True" />
          <Member Name="#LandmarkOSMasterMap" Analyze="True" />
          <Member Name="#Mapnik" Analyze="True" />
          <Member Name="#OAM" Analyze="True" />
          <Member Name="#OS250k" Analyze="True" />
          <Member Name="#OS25k" Analyze="True" />
          <Member Name="#OS50k" Analyze="True" />
          <Member Name="#Osmarend" Analyze="True" />
          <Member Name="#OSMiniScale" Analyze="True" />
          <Member Name="#value__" Analyze="True" />
          <Member Name="#VeAerial" Analyze="True" />
          <Member Name="#VeHybrid" Analyze="True" />
          <Member Name="#VeRoad" Analyze="True" />
          <Member Name="#WMS" Analyze="True" />
          <Member Name="#YahooAerial" Analyze="True" />
          <Member Name="#YahooHybrid" Analyze="True" />
          <Member Name="#YahooStreet" Analyze="True" />
         </Members>
        </Type>
        <Type Name="MatchedProperty" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#DisplayText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DisplayText()" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="MatchedPropertyPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#displayText" Analyze="True" />
          <Member Name="#DisplayText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DisplayText()" Analyze="True" />
            <Accessor Name="#set_DisplayText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="NavigateEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;Data&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;PageName&gt;k__BackingField" Analyze="True" />
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PageName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PageName()" Analyze="True" />
            <Accessor Name="#set_PageName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="NavigationPresentationModelBase" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#Navigate" Analyze="True" />
          <Member Name="#NavigateTo(System.String,System.Object)" Analyze="True" />
          <Member Name="#OnViewLoaded(System.Object,Landmark.Dtv.ViewLoadedEventArgs)" Analyze="True" />
          <Member Name="#view" Analyze="True" />
          <Member Name="#View" Analyze="True">
           <Accessors>
            <Accessor Name="#get_View()" Analyze="True" />
            <Accessor Name="#set_View(System.Windows.FrameworkElement)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#viewTitle" Analyze="True" />
          <Member Name="#ViewTitle" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ViewTitle()" Analyze="True" />
            <Accessor Name="#set_ViewTitle(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Navigate" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_Navigate(System.EventHandler`1&lt;Landmark.Dtv.NavigateEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_Navigate(System.EventHandler`1&lt;Landmark.Dtv.NavigateEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="NewAddressPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#address" Analyze="True" />
          <Member Name="#Address" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address()" Analyze="True" />
            <Accessor Name="#set_Address(Landmark.Dtv.AddressPresentationModel)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Intialise()" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#showOnMapCommand" Analyze="True" />
          <Member Name="#ShowOnMapCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ShowOnMapCommand()" Analyze="True" />
            <Accessor Name="#set_ShowOnMapCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ShowOnMapCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="NewBranchPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,Landmark.Dtv.OrganisationPropertiesPresentationModel)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__7(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#&lt;Load&gt;b__5(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.GetOrganisationsCompletedEventArgs)" Analyze="True" />
          <Member Name="#&lt;SaveChanges&gt;b__3(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.SaveBranchCompletedEventArgs)" Analyze="True" />
          <Member Name="#address1" Analyze="True" />
          <Member Name="#Address1" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address1()" Analyze="True" />
            <Accessor Name="#set_Address1(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address2" Analyze="True" />
          <Member Name="#Address2" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address2()" Analyze="True" />
            <Accessor Name="#set_Address2(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#address3" Analyze="True" />
          <Member Name="#Address3" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address3()" Analyze="True" />
            <Accessor Name="#set_Address3(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#branch" Analyze="True" />
          <Member Name="#branchs" Analyze="True" />
          <Member Name="#county" Analyze="True" />
          <Member Name="#County" Analyze="True">
           <Accessors>
            <Accessor Name="#get_County()" Analyze="True" />
            <Accessor Name="#set_County(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#name" Analyze="True" />
          <Member Name="#Name" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Name()" Analyze="True" />
            <Accessor Name="#set_Name(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Organisation" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisation()" Analyze="True" />
            <Accessor Name="#set_Organisation(Landmark.Dtv.OrganisationListItemPresentationModel)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Organisations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisations()" Analyze="True" />
            <Accessor Name="#set_Organisations(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.OrganisationListItemPresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#parent" Analyze="True" />
          <Member Name="#postCode" Analyze="True" />
          <Member Name="#Postcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Postcode()" Analyze="True" />
            <Accessor Name="#set_Postcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#town" Analyze="True" />
          <Member Name="#Town" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Town()" Analyze="True" />
            <Accessor Name="#set_Town(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="NewBranchWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#CloseWindow" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#PageForm" Analyze="True" />
          <Member Name="#SuccessMessage" Analyze="True" />
         </Members>
        </Type>
        <Type Name="NewItemWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#layoutRoot" Analyze="True" />
          <Member Name="#pageForm" Analyze="True" />
         </Members>
        </Type>
        <Type Name="NewOrganisationPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__3(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#&lt;SaveChanges&gt;b__1(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.SaveOrganisationCompletedEventArgs)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#organisationId" Analyze="True" />
          <Member Name="#OrganisationId" Analyze="True">
           <Accessors>
            <Accessor Name="#get_OrganisationId()" Analyze="True" />
            <Accessor Name="#set_OrganisationId(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#statutoryName" Analyze="True" />
          <Member Name="#StatutoryName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_StatutoryName()" Analyze="True" />
            <Accessor Name="#set_StatutoryName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#tradingName" Analyze="True" />
          <Member Name="#TradingName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TradingName()" Analyze="True" />
            <Accessor Name="#set_TradingName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="NewOrganisationWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#CloseWindow" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#PageForm" Analyze="True" />
          <Member Name="#SuccessMessage" Analyze="True" />
         </Members>
        </Type>
        <Type Name="NewUserProfileWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#closeWindow" Analyze="True" />
          <Member Name="#infoMessage" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#layoutRoot" Analyze="True" />
          <Member Name="#pageForm" Analyze="True" />
          <Member Name="#successMessage" Analyze="True" />
         </Members>
        </Type>
        <Type Name="NewUserWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#closeWindow" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#layoutRoot" Analyze="True" />
          <Member Name="#pageForm" Analyze="True" />
          <Member Name="#sucessMessage" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ObjectBooleanConverter" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
          <Member Name="#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OrganisationGridItemPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(Landmark.Dtv.ServiceModel.CustomerServices.Organisation)" Analyze="True" />
          <Member Name="#organisationId" Analyze="True" />
          <Member Name="#OrganisationId" Analyze="True">
           <Accessors>
            <Accessor Name="#get_OrganisationId()" Analyze="True" />
            <Accessor Name="#set_OrganisationId(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#statutoryName" Analyze="True" />
          <Member Name="#StatutoryName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_StatutoryName()" Analyze="True" />
            <Accessor Name="#set_StatutoryName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#tradingName" Analyze="True" />
          <Member Name="#TradingName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TradingName()" Analyze="True" />
            <Accessor Name="#set_TradingName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="OrganisationListItemPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(Landmark.Dtv.ServiceModel.CustomerServices.Organisation)" Analyze="True" />
          <Member Name="#tradingName" Analyze="True" />
          <Member Name="#TradingName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TradingName()" Analyze="True" />
            <Accessor Name="#set_TradingName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="OrganisationManager" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AddOrganisation" Analyze="True" />
          <Member Name="#DeleteOrganisation" Analyze="True" />
          <Member Name="#EditOrganisation" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#OrganisationList" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OrganisationManagerPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;Load&gt;b__3(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.GetOrganisationsCompletedEventArgs)" Analyze="True" />
          <Member Name="#addOrganisationCommand" Analyze="True" />
          <Member Name="#AddOrganisationCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddOrganisationCommand()" Analyze="True" />
            <Accessor Name="#set_AddOrganisationCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddOrganisationCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#deleteOrganisationCommand" Analyze="True" />
          <Member Name="#DeleteOrganisationCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DeleteOrganisationCommand()" Analyze="True" />
            <Accessor Name="#set_DeleteOrganisationCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#DeleteOrganisationCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#editOrganisationCommand" Analyze="True" />
          <Member Name="#EditOrganisationCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_EditOrganisationCommand()" Analyze="True" />
            <Accessor Name="#set_EditOrganisationCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#EditOrganisationCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#isAddOrganisatinEnabled" Analyze="True" />
          <Member Name="#IsAddOrganisationEnabled" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsAddOrganisationEnabled()" Analyze="True" />
            <Accessor Name="#set_IsAddOrganisationEnabled(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#isDeleteOrganisatinEnabled" Analyze="True" />
          <Member Name="#IsDeleteOrganisationEnabled" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsDeleteOrganisationEnabled()" Analyze="True" />
            <Accessor Name="#set_IsDeleteOrganisationEnabled(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#isEditOrganisatinEnabled" Analyze="True" />
          <Member Name="#IsEditOrganisationEnabled" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsEditOrganisationEnabled()" Analyze="True" />
            <Accessor Name="#set_IsEditOrganisationEnabled(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#OrganisationManagerPresentationModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#organisations" Analyze="True" />
          <Member Name="#Organisations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisations()" Analyze="True" />
            <Accessor Name="#set_Organisations(System.Collections.ObjectModel.Collection`1&lt;Landmark.Dtv.OrganisationGridItemPresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#selectedItem" Analyze="True" />
          <Member Name="#SelectedItem" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedItem()" Analyze="True" />
            <Accessor Name="#set_SelectedItem(Landmark.Dtv.OrganisationListItemPresentationModel)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="OrganisationManagerPresentationModel+&lt;&gt;c__DisplayClass1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;AddOrganisationCommand_Executing&gt;b__0(System.Object,Landmark.Dtv.DialogWindowClosedEventArgs)" Analyze="True" />
          <Member Name="#model" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OrganisationProperties" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AddBranch" Analyze="True" />
          <Member Name="#BranchList" Analyze="True" />
          <Member Name="#DeleteBranch" Analyze="True" />
          <Member Name="#EditBranch" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#PageForm" Analyze="True" />
          <Member Name="#SuccessMessage" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OrganisationPropertiesPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,Landmark.Dtv.TreeNodePresentationModel)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__c(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#&lt;AddBranchCommand_Executing&gt;b__e(System.Object,Landmark.Dtv.ContentChangedEventArgs)" Analyze="True" />
          <Member Name="#&lt;SaveChanges&gt;b__4(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.SaveOrganisationCompletedEventArgs)" Analyze="True" />
          <Member Name="#addBranchCommand" Analyze="True" />
          <Member Name="#AddBranchCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddBranchCommand()" Analyze="True" />
            <Accessor Name="#set_AddBranchCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddBranchCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#branches" Analyze="True" />
          <Member Name="#Branches" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Branches()" Analyze="True" />
            <Accessor Name="#set_Branches(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.BranchGridItemPresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#data" Analyze="True" />
          <Member Name="#deleteBranchCommand" Analyze="True" />
          <Member Name="#DeleteBranchCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DeleteBranchCommand()" Analyze="True" />
            <Accessor Name="#set_DeleteBranchCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#DeleteBranchCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#editBranchCommand" Analyze="True" />
          <Member Name="#EditBranchCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_EditBranchCommand()" Analyze="True" />
            <Accessor Name="#set_EditBranchCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#EditBranchCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#isDeleteBranchEnabled" Analyze="True" />
          <Member Name="#IsDeleteBranchEnabled" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsDeleteBranchEnabled()" Analyze="True" />
            <Accessor Name="#set_IsDeleteBranchEnabled(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#isEditBranchEnabled" Analyze="True" />
          <Member Name="#IsEditBranchEnabled" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsEditBranchEnabled()" Analyze="True" />
            <Accessor Name="#set_IsEditBranchEnabled(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#Merge(System.Object)" Analyze="True" />
          <Member Name="#organisationId" Analyze="True" />
          <Member Name="#OrganisationId" Analyze="True">
           <Accessors>
            <Accessor Name="#get_OrganisationId()" Analyze="True" />
            <Accessor Name="#set_OrganisationId(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#OrganisationPropertiesPresentationModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#selectedBranch" Analyze="True" />
          <Member Name="#SelectedBranch" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedBranch()" Analyze="True" />
            <Accessor Name="#set_SelectedBranch(Landmark.Dtv.BranchGridItemPresentationModel)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#statutoryName" Analyze="True" />
          <Member Name="#StatutoryName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_StatutoryName()" Analyze="True" />
            <Accessor Name="#set_StatutoryName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#successVisibility" Analyze="True" />
          <Member Name="#SuccessVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SuccessVisibility()" Analyze="True" />
            <Accessor Name="#set_SuccessVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#tradingName" Analyze="True" />
          <Member Name="#TradingName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TradingName()" Analyze="True" />
            <Accessor Name="#set_TradingName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="OrganisationPropertiesPresentationModel+&lt;&gt;c__DisplayClassa" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;Load&gt;b__6(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.GetOrganisationCompletedEventArgs)" Analyze="True" />
          <Member Name="#&lt;Load&gt;b__7(System.Object,Landmark.Dtv.ServiceModel.CustomerServices.GetBranchesCompletedEventArgs)" Analyze="True" />
          <Member Name="#loadCount" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PasswordControl" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#password" Analyze="True" />
          <Member Name="#Password_LostFocus(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#PasswordText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PasswordText()" Analyze="True" />
            <Accessor Name="#set_PasswordText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PasswordTextProperty" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PresentationModelBase" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__2(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#BeginEdit()" Analyze="True" />
          <Member Name="#CancelEdit()" Analyze="True" />
          <Member Name="#EditCanceled" Analyze="True" />
          <Member Name="#EditCommitted" Analyze="True" />
          <Member Name="#EditStarted" Analyze="True" />
          <Member Name="#EndEdit()" Analyze="True" />
          <Member Name="#hasChanges" Analyze="True" />
          <Member Name="#HasChanges" Analyze="True">
           <Accessors>
            <Accessor Name="#get_HasChanges()" Analyze="True" />
            <Accessor Name="#set_HasChanges(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#isIdle" Analyze="True" />
          <Member Name="#IsIdle" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsIdle()" Analyze="True" />
            <Accessor Name="#set_IsIdle(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#NavigateTo(System.String,System.Object)" Analyze="True" />
          <Member Name="#NotifyNavigate" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#saveChangesCommand" Analyze="True" />
          <Member Name="#SaveChangesCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SaveChangesCommand()" Analyze="True" />
            <Accessor Name="#set_SaveChangesCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#view" Analyze="True" />
          <Member Name="#View" Analyze="True">
           <Accessors>
            <Accessor Name="#get_View()" Analyze="True" />
            <Accessor Name="#set_View(System.Windows.FrameworkElement)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#viewTitle" Analyze="True" />
          <Member Name="#ViewTitle" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ViewTitle()" Analyze="True" />
            <Accessor Name="#set_ViewTitle(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#EditCanceled" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_EditCanceled(System.EventHandler)" Analyze="True" />
            <Accessor Name="#remove_EditCanceled(System.EventHandler)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#EditCommitted" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_EditCommitted(System.EventHandler)" Analyze="True" />
            <Accessor Name="#remove_EditCommitted(System.EventHandler)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#EditStarted" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_EditStarted(System.EventHandler)" Analyze="True" />
            <Accessor Name="#remove_EditStarted(System.EventHandler)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#NotifyNavigate" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_NotifyNavigate(System.EventHandler`1&lt;Landmark.Dtv.NavigateEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_NotifyNavigate(System.EventHandler`1&lt;Landmark.Dtv.NavigateEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="PropertiesWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#layoutRoot" Analyze="True" />
          <Member Name="#pageForm" Analyze="True" />
          <Member Name="#successMessage" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PropertyFeatureEditorControl" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#CancelPopupButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#childWindow" Analyze="True" />
          <Member Name="#ChildWindow_Closed(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#ContolHoverEndStoryBoard" Analyze="True" />
          <Member Name="#ContolHoverStoryBoard" Analyze="True" />
          <Member Name="#controlBorder" Analyze="True" />
          <Member Name="#ControlGrid" Analyze="True" />
          <Member Name="#FeatureComboBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Analyze="True" />
          <Member Name="#FeatureContainerGrid" Analyze="True" />
          <Member Name="#FeatureContainerGrid_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#FeatureList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureList()" Analyze="True" />
            <Accessor Name="#set_FeatureList(System.Collections.Generic.List`1&lt;System.String&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#featureListComboBox" Analyze="True" />
          <Member Name="#FeatureListComboBox_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#FeatureListProperty" Analyze="True" />
          <Member Name="#featureListSelectionTextBlock" Analyze="True" />
          <Member Name="#FeatureType" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureType()" Analyze="True" />
            <Accessor Name="#set_FeatureType(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureTypeProperty" Analyze="True" />
          <Member Name="#featureTypeTextBlock" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#mementoReason" Analyze="True" />
          <Member Name="#mementoSelection" Analyze="True" />
          <Member Name="#OnFeatureListLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnFeatureTypeLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnReasonLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#OnSelectedValue(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#Reason" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Reason()" Analyze="True" />
            <Accessor Name="#set_Reason(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ReasonProperty" Analyze="True" />
          <Member Name="#rectangle" Analyze="True" />
          <Member Name="#SaveButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#SelectedValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedValue()" Analyze="True" />
            <Accessor Name="#set_SelectedValue(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SelectedValueProperty" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PropertyFeatureEditorManager" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#FeatureAuditorManagerTest_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#featureEditorControl" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#TestControlButton" Analyze="True" />
          <Member Name="#TestControlButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PropertyFeatureEditorReason" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#CancelButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#FeatureReasonChildWindow" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#OnReasonChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#PropertyFeatureEditorReason_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#Reason" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Reason()" Analyze="True" />
            <Accessor Name="#set_Reason(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#reasonForChangeLabel" Analyze="True" />
          <Member Name="#reasonForChangeTextBox" Analyze="True" />
          <Member Name="#ReasonForChangeTextBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)" Analyze="True" />
          <Member Name="#ReasonProperty" Analyze="True" />
          <Member Name="#SaveButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PropertyFeatureWrappedList" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#FeatureEditorWrappedList_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#Features" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Features()" Analyze="True" />
            <Accessor Name="#set_Features(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.FeatureItem&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeaturesProperty" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#ItemsPresenter_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OnFeatureListLoaded(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)" Analyze="True" />
          <Member Name="#PropertyFeatureWrappedList_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#WrappedFeatureList" Analyze="True" />
          <Member Name="#WrappedFeatureList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PropertyListControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#PropertyListControl_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#PropertyListHeaderTextBlock" Analyze="True" />
          <Member Name="#SimilarPropertiesList" Analyze="True" />
         </Members>
        </Type>
        <Type Name="PropertyTransactionsPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#createdDate" Analyze="True" />
          <Member Name="#CreatedDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedDate()" Analyze="True" />
            <Accessor Name="#set_CreatedDate(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#salePrice" Analyze="True" />
          <Member Name="#SalePrice" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SalePrice()" Analyze="True" />
            <Accessor Name="#set_SalePrice(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#tenure" Analyze="True" />
          <Member Name="#Tenure" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Tenure()" Analyze="True" />
            <Accessor Name="#set_Tenure(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#transactionType" Analyze="True" />
          <Member Name="#TransactionType" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TransactionType()" Analyze="True" />
            <Accessor Name="#set_TransactionType(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ReadOnlyPresentationModelBase" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#NavigateTo(System.String,System.Object)" Analyze="True" />
          <Member Name="#NotifyNavigate" Analyze="True" />
          <Member Name="#view" Analyze="True" />
          <Member Name="#View" Analyze="True">
           <Accessors>
            <Accessor Name="#get_View()" Analyze="True" />
            <Accessor Name="#set_View(System.Windows.FrameworkElement)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#viewTitle" Analyze="True" />
          <Member Name="#ViewTitle" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ViewTitle()" Analyze="True" />
            <Accessor Name="#set_ViewTitle(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#NotifyNavigate" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_NotifyNavigate(System.EventHandler`1&lt;Landmark.Dtv.NavigateEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_NotifyNavigate(System.EventHandler`1&lt;Landmark.Dtv.NavigateEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="RelatedLinksPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#createdDate" Analyze="True" />
          <Member Name="#CreatedDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedDate()" Analyze="True" />
            <Accessor Name="#set_CreatedDate(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#description" Analyze="True" />
          <Member Name="#Description" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Description()" Analyze="True" />
            <Accessor Name="#set_Description(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#linkName" Analyze="True" />
          <Member Name="#LinkName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LinkName()" Analyze="True" />
            <Accessor Name="#set_LinkName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewTargetPropertyPage" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#EditReviewControl" Analyze="True" />
          <Member Name="#featureEditorControl" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#Page_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#ValuationButton" Analyze="True" />
          <Member Name="#ViewSelectorHolderImage" Analyze="True" />
          <Member Name="#ViewSelectorToolbar" Analyze="True" />
         </Members>
        </Type>
        <Type Name="SearchControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#BingMap" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#InitOsmPosition" Analyze="True" />
          <Member Name="#isLoaded" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#OSMap" Analyze="True" />
          <Member Name="#SearchBingMaps" Analyze="True" />
          <Member Name="#SearchBingMaps_Checked(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#SearchButton" Analyze="True" />
          <Member Name="#SearchOSMaps" Analyze="True" />
          <Member Name="#SearchOSMaps_Checked(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#SearchText" Analyze="True" />
          <Member Name="#ShowBingMap" Analyze="True" />
          <Member Name="#ShowOSMap" Analyze="True" />
          <Member Name="#UserControl_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="SelectionChangedEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;Data&gt;k__BackingField" Analyze="True" />
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="SharedResourceDictionary" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;SharedDictionaries&gt;k__BackingField" Analyze="True" />
          <Member Name="#SharedDictionaries" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SharedDictionaries()" Analyze="True" />
            <Accessor Name="#set_SharedDictionaries(System.Collections.Generic.Dictionary`2&lt;System.Uri,System.Windows.ResourceDictionary&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Source" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Source()" Analyze="True" />
            <Accessor Name="#set_Source(System.Uri)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#sourceUri" Analyze="True" />
         </Members>
        </Type>
        <Type Name="Shell" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#About" Analyze="True" />
          <Member Name="#ChangePassword" Analyze="True" />
          <Member Name="#ContentFrame" Analyze="True" />
          <Member Name="#ContentFrame_Navigated(System.Object,System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#CustomerManager" Analyze="True" />
          <Member Name="#Edit" Analyze="True" />
          <Member Name="#File" Analyze="True" />
          <Member Name="#Help" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#Logo" Analyze="True" />
          <Member Name="#LogOff" Analyze="True" />
          <Member Name="#LogOn" Analyze="True" />
          <Member Name="#NewValuation" Analyze="True" />
          <Member Name="#OnNavigate(System.Object,Landmark.Dtv.NavigateEventArgs)" Analyze="True" />
          <Member Name="#OpenValuation" Analyze="True" />
          <Member Name="#RecoverPassword" Analyze="True" />
          <Member Name="#Tools" Analyze="True" />
          <Member Name="#View" Analyze="True" />
          <Member Name="#ViewLoaded" Analyze="True" />
          <Member Name="#Window" Analyze="True" />
          <Member Name="#ViewLoaded" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_ViewLoaded(System.EventHandler`1&lt;Landmark.Dtv.ViewLoadedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_ViewLoaded(System.EventHandler`1&lt;Landmark.Dtv.ViewLoadedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ShellPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,System.EventHandler`1&lt;Landmark.Dtv.NavigateEventArgs&gt;)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__2(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__3(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#&lt;LogOnCommand_Executing&gt;b__6(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#&lt;LogOnWindow&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;OnViewLoaded&gt;b__0(System.Object,Landmark.Dtv.NavigateEventArgs)" Analyze="True" />
          <Member Name="#AboutPageName" Analyze="True" />
          <Member Name="#anonymousUserVisibility" Analyze="True" />
          <Member Name="#AnonymousUserVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AnonymousUserVisibility()" Analyze="True" />
            <Accessor Name="#set_AnonymousUserVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#authenticatedUserVisibility" Analyze="True" />
          <Member Name="#AuthenticatedUserVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AuthenticatedUserVisibility()" Analyze="True" />
            <Accessor Name="#set_AuthenticatedUserVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CheckAndDownloadUpdate_Completed(System.Object,System.Windows.CheckAndDownloadUpdateCompletedEventArgs)" Analyze="True" />
          <Member Name="#currentUsername" Analyze="True" />
          <Member Name="#CustomerManagerPageName" Analyze="True" />
          <Member Name="#getLatestCommand" Analyze="True" />
          <Member Name="#GetLatestCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_GetLatestCommand()" Analyze="True" />
            <Accessor Name="#set_GetLatestCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#GetLatestCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#HomePageName" Analyze="True" />
          <Member Name="#installCommand" Analyze="True" />
          <Member Name="#InstallCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_InstallCommand()" Analyze="True" />
            <Accessor Name="#set_InstallCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#InstallCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#installVisibility" Analyze="True" />
          <Member Name="#InstallVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_InstallVisibility()" Analyze="True" />
            <Accessor Name="#set_InstallVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LandingPageName" Analyze="True" />
          <Member Name="#logOffCommand" Analyze="True" />
          <Member Name="#LogOffCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LogOffCommand()" Analyze="True" />
            <Accessor Name="#set_LogOffCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LogOffCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#logOnCommand" Analyze="True" />
          <Member Name="#LogOnCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LogOnCommand()" Analyze="True" />
            <Accessor Name="#set_LogOnCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LogOnCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#LogOnWindow" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LogOnWindow()" Analyze="True" />
            <Accessor Name="#set_LogOnWindow(Landmark.Dtv.LogOnWindow)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#logOnWindowClosed" Analyze="True" />
          <Member Name="#navigateAboutCommand" Analyze="True" />
          <Member Name="#NavigateAboutCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_NavigateAboutCommand()" Analyze="True" />
            <Accessor Name="#set_NavigateAboutCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#navigateCustomerManagerCommand" Analyze="True" />
          <Member Name="#NavigateCustomerManagerCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_NavigateCustomerManagerCommand()" Analyze="True" />
            <Accessor Name="#set_NavigateCustomerManagerCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#navigateHomeCommand" Analyze="True" />
          <Member Name="#NavigateHomeCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_NavigateHomeCommand()" Analyze="True" />
            <Accessor Name="#set_NavigateHomeCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#NavigateHomeCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#newValuationCommand" Analyze="True" />
          <Member Name="#NewValuationCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_NewValuationCommand()" Analyze="True" />
            <Accessor Name="#set_NewValuationCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#NewValuationCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#OnViewLoaded(System.Object,Landmark.Dtv.ViewLoadedEventArgs)" Analyze="True" />
          <Member Name="#outOfBrowserVisibility" Analyze="True" />
          <Member Name="#OutOfBrowserVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_OutOfBrowserVisibility()" Analyze="True" />
            <Accessor Name="#set_OutOfBrowserVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ReviewTargetPropertyPageName" Analyze="True" />
          <Member Name="#SetAuthenticatedState(System.Boolean)" Analyze="True" />
          <Member Name="#uninstallCommand" Analyze="True" />
          <Member Name="#UninstallCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UninstallCommand()" Analyze="True" />
            <Accessor Name="#set_UninstallCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#UninstallCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#userLogOnTimeString" Analyze="True" />
          <Member Name="#UserLogOnTimeString" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UserLogOnTimeString()" Analyze="True" />
            <Accessor Name="#set_UserLogOnTimeString(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#UserName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UserName()" Analyze="True" />
            <Accessor Name="#set_UserName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ValuationPageName" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ShellWebTestMock" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#About" Analyze="True" />
          <Member Name="#ChangePassword" Analyze="True" />
          <Member Name="#ContentFrame" Analyze="True" />
          <Member Name="#ContentFrame_Navigated(System.Object,System.Windows.Navigation.NavigationEventArgs)" Analyze="True" />
          <Member Name="#CustomerManager" Analyze="True" />
          <Member Name="#GetLatest" Analyze="True" />
          <Member Name="#Help" Analyze="True" />
          <Member Name="#Home" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#Install" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#LogOff" Analyze="True" />
          <Member Name="#LogOn" Analyze="True" />
          <Member Name="#NewValuation" Analyze="True" />
          <Member Name="#OnNavigate(System.Object,Landmark.Dtv.NavigateEventArgs)" Analyze="True" />
          <Member Name="#OpenValuation" Analyze="True" />
          <Member Name="#RecoverPassword" Analyze="True" />
          <Member Name="#UnInstall" Analyze="True" />
          <Member Name="#UserDisplay" Analyze="True" />
          <Member Name="#ViewLoaded" Analyze="True" />
          <Member Name="#ViewLoaded" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_ViewLoaded(System.EventHandler`1&lt;Landmark.Dtv.ViewLoadedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_ViewLoaded(System.EventHandler`1&lt;Landmark.Dtv.ViewLoadedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="SimilarProperty" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;Address&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Bedrooms&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Date&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Distance&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Price&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;PropertyImage&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;PropertyType&gt;k__BackingField" Analyze="False" />
          <Member Name="#&lt;Rank&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Selected&gt;k__BackingField" Analyze="True" />
          <Member Name="#Address" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address()" Analyze="True" />
            <Accessor Name="#set_Address(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Bedrooms" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Bedrooms()" Analyze="True" />
            <Accessor Name="#set_Bedrooms(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Date" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Date()" Analyze="True" />
            <Accessor Name="#set_Date(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Distance" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Distance()" Analyze="True" />
            <Accessor Name="#set_Distance(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Price" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Price()" Analyze="True" />
            <Accessor Name="#set_Price(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PropertyImage" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PropertyImage()" Analyze="True" />
            <Accessor Name="#set_PropertyImage(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PropertyType" Analyze="False">
           <Accessors>
            <Accessor Name="#get_PropertyType()" Analyze="True" />
            <Accessor Name="#set_PropertyType(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Rank" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Rank()" Analyze="True" />
            <Accessor Name="#set_Rank(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Selected" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Selected()" Analyze="True" />
            <Accessor Name="#set_Selected(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="SimilarPropertyPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#findSimilarPropertiesCommand" Analyze="True" />
          <Member Name="#FindSimilarPropertiesCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FindSimilarPropertiesCommand()" Analyze="True" />
            <Accessor Name="#set_FindSimilarPropertiesCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FindSimilarPropertiesCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#Intialise()" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#transactionAgeMonthsChecked" Analyze="True" />
          <Member Name="#TransactionAgeMonthsChecked" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TransactionAgeMonthsChecked()" Analyze="True" />
            <Accessor Name="#set_TransactionAgeMonthsChecked(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#transactionAgeMonthsVisibility" Analyze="True" />
          <Member Name="#TransactionAgeMonthsVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TransactionAgeMonthsVisibility()" Analyze="True" />
            <Accessor Name="#set_TransactionAgeMonthsVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#transactionAgeYearsChecked" Analyze="True" />
          <Member Name="#TransactionAgeYearsChecked" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TransactionAgeYearsChecked()" Analyze="True" />
            <Accessor Name="#set_TransactionAgeYearsChecked(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#transactionAgeYearsVisibility" Analyze="True" />
          <Member Name="#TransactionAgeYearsVisibility" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TransactionAgeYearsVisibility()" Analyze="True" />
            <Accessor Name="#set_TransactionAgeYearsVisibility(System.Windows.Visibility)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="SimilarPropertySearchControl" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AddNewAddressIcon" Analyze="True" />
          <Member Name="#AddNewAddressLabel" Analyze="True" />
          <Member Name="#AddressTextBlock" Analyze="True" />
          <Member Name="#AddressTitleTextBlock" Analyze="True" />
          <Member Name="#BedroomsDropDown" Analyze="True" />
          <Member Name="#BedroomsTextBlock" Analyze="True" />
          <Member Name="#DistanceDropDown" Analyze="True" />
          <Member Name="#DistanceTextBlock" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#SearchButton" Analyze="True" />
          <Member Name="#TransactionAgeGroup" Analyze="True" />
          <Member Name="#TransactionAgeMonths" Analyze="True" />
          <Member Name="#TransactionAgePeriodGroup" Analyze="True" />
          <Member Name="#TransactionAgeRangeMonthsTextBlock" Analyze="True" />
          <Member Name="#TransactionAgeRangeSlider" Analyze="True" />
          <Member Name="#TransactionAgeRangeYearsTextBlock" Analyze="True" />
          <Member Name="#TransactionAgeTextBlock" Analyze="True" />
          <Member Name="#TransactionAgeYears" Analyze="True" />
          <Member Name="#TypeDropDown" Analyze="True" />
          <Member Name="#TypeTextBlock" Analyze="True" />
         </Members>
        </Type>
        <Type Name="TargetPropertySearchControl" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#AddNewAddressButton" Analyze="True" />
          <Member Name="#AddNewAddressIcon" Analyze="True" />
          <Member Name="#AddNewAddressLabel" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#SearchButton" Analyze="True" />
          <Member Name="#SearchResults" Analyze="True" />
          <Member Name="#SearchResults_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)" Analyze="True" />
          <Member Name="#SelectedItem" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SelectedItem()" Analyze="True" />
            <Accessor Name="#set_SelectedItem(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SelectedItemProperty" Analyze="True" />
          <Member Name="#SelectionChanged" Analyze="True" />
          <Member Name="#WatermarkedSearchValue" Analyze="True" />
          <Member Name="#WatermarkedSearchValue_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)" Analyze="True" />
          <Member Name="#SelectionChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_SelectionChanged(System.EventHandler`1&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;)" Analyze="True" />
            <Accessor Name="#remove_SelectionChanged(System.EventHandler`1&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TargetPropertySearchEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;SearchPostcode&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;SearchString&gt;k__BackingField" Analyze="True" />
          <Member Name="#SearchPostcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchPostcode()" Analyze="True" />
            <Accessor Name="#set_SearchPostcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchString" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchString()" Analyze="True" />
            <Accessor Name="#set_SearchString(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TreeNodePresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Object)" Analyze="True" />
          <Member Name="#children" Analyze="True" />
          <Member Name="#Children" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Children()" Analyze="True" />
            <Accessor Name="#set_Children(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.TreeNodePresentationModel&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#displayText" Analyze="True" />
          <Member Name="#DisplayText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DisplayText()" Analyze="True" />
            <Accessor Name="#set_DisplayText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#id" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#imageSource" Analyze="True" />
          <Member Name="#ImageSource" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ImageSource()" Analyze="True" />
            <Accessor Name="#set_ImageSource(System.Uri)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#nodeType" Analyze="True" />
          <Member Name="#NodeType" Analyze="True">
           <Accessors>
            <Accessor Name="#get_NodeType()" Analyze="True" />
            <Accessor Name="#set_NodeType(Landmark.Dtv.TreeNodeType)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TreeNodeType" Analyze="True">
         <Members>
          <Member Name="#Branch" Analyze="True" />
          <Member Name="#Organisation" Analyze="True" />
          <Member Name="#Unknown" Analyze="True" />
          <Member Name="#User" Analyze="True" />
          <Member Name="#value__" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UserGridItemPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(Landmark.Dtv.ServiceModel.SecurityServices.User)" Analyze="True" />
          <Member Name="#emailAddress" Analyze="True" />
          <Member Name="#EmailAddress" Analyze="True">
           <Accessors>
            <Accessor Name="#get_EmailAddress()" Analyze="True" />
            <Accessor Name="#set_EmailAddress(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#fullName" Analyze="True" />
          <Member Name="#FullName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FullName()" Analyze="True" />
            <Accessor Name="#set_FullName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#isActive" Analyze="True" />
          <Member Name="#IsActive" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsActive()" Analyze="True" />
            <Accessor Name="#set_IsActive(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#isLockedOut" Analyze="True" />
          <Member Name="#IsLockedOut" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsLockedOut()" Analyze="True" />
            <Accessor Name="#set_IsLockedOut(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#lastActivityDate" Analyze="True" />
          <Member Name="#LastActivityDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastActivityDate()" Analyze="True" />
            <Accessor Name="#set_LastActivityDate(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#lastLockoutDate" Analyze="True" />
          <Member Name="#LastLockoutDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastLockoutDate()" Analyze="True" />
            <Accessor Name="#set_LastLockoutDate(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#lastLogOnDate" Analyze="True" />
          <Member Name="#LastLogOnDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastLogOnDate()" Analyze="True" />
            <Accessor Name="#set_LastLogOnDate(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#lastPasswordChangedDate" Analyze="True" />
          <Member Name="#LastPasswordChangedDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastPasswordChangedDate()" Analyze="True" />
            <Accessor Name="#set_LastPasswordChangedDate(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#username" Analyze="True" />
          <Member Name="#UserName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UserName()" Analyze="True" />
            <Accessor Name="#set_UserName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="UserManager" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#UserList" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UserManagerPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,Landmark.Dtv.TreeNodePresentationModel)" Analyze="True" />
          <Member Name="#&lt;Load&gt;b__1(System.Object,Landmark.Dtv.ServiceModel.SecurityServices.GetBranchUsersCompletedEventArgs)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#parent" Analyze="True" />
          <Member Name="#users" Analyze="True" />
          <Member Name="#Users" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Users()" Analyze="True" />
            <Accessor Name="#set_Users(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.UserGridItemPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="UserProperties" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#PageForm" Analyze="True" />
          <Member Name="#PageHeading" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UserPropertiesPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement,Landmark.Dtv.TreeNodePresentationModel)" Analyze="True" />
          <Member Name="#&lt;.ctor&gt;b__0(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#username" Analyze="True" />
          <Member Name="#UserName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UserName()" Analyze="True" />
            <Accessor Name="#set_UserName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="UserPropertiesWindow" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#closeWindow" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#layoutRoot" Analyze="True" />
          <Member Name="#pageForm" Analyze="True" />
         </Members>
        </Type>
        <Type Name="Valuation" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#Compare1Panel" Analyze="True" />
          <Member Name="#Compare2Panel" Analyze="True" />
          <Member Name="#Compare3Panel" Analyze="True" />
          <Member Name="#Compare4Panel" Analyze="True" />
          <Member Name="#ComparePropertiesPreviewPanel" Analyze="True" />
          <Member Name="#ComparePropertiesPreviewPanelHolderImage" Analyze="True" />
          <Member Name="#ControlPanel" Analyze="True" />
          <Member Name="#EditButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#EnterTargetPropertyPanel" Analyze="True" />
          <Member Name="#EnterTargetPropertyPreviewPanel" Analyze="True" />
          <Member Name="#FindAndComparePanel" Analyze="True" />
          <Member Name="#FindAndComparePanelHolderImage" Analyze="True" />
          <Member Name="#FinishValuationPreviewPanel" Analyze="True" />
          <Member Name="#FinishValuationPreviewPanelHolderImage" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#Panel1HolderImage" Analyze="True" />
          <Member Name="#Panel2HolderImage" Analyze="True" />
          <Member Name="#Panel3HolderImage" Analyze="True" />
          <Member Name="#Panel4HolderImage" Analyze="True" />
          <Member Name="#PreviewButton_Click(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
          <Member Name="#PreviewPanel" Analyze="True" />
          <Member Name="#PreviewPanelHolderImage" Analyze="True" />
          <Member Name="#ReviewTargetPropertyPreviewPanel" Analyze="True" />
          <Member Name="#ReviewTargetPropertyPreviewPanelHolderImage" Analyze="True" />
          <Member Name="#SimilarPropertiesPreviewPanel" Analyze="True" />
          <Member Name="#SimilarPropertiesPreviewPanelHolderImage" Analyze="True" />
          <Member Name="#StackedPanel" Analyze="True" />
          <Member Name="#Valuation_Loaded(System.Object,System.Windows.RoutedEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ValuationPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;SearchCommand_Executing&gt;b__2(System.Object,Landmark.Dtv.ServiceModel.PropertyServices.GetMatchedPropertiesCompletedEventArgs)" Analyze="True" />
          <Member Name="#address" Analyze="True" />
          <Member Name="#Address" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address()" Analyze="True" />
            <Accessor Name="#set_Address(Landmark.Dtv.AddressPresentationModel)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#featurelist" Analyze="True" />
          <Member Name="#FeatureList" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureList()" Analyze="True" />
            <Accessor Name="#set_FeatureList(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.FeatureItem&gt;)" Analyze="False" />
           </Accessors>
          </Member>
          <Member Name="#Load()" Analyze="True" />
          <Member Name="#SaveChanges()" Analyze="True" />
          <Member Name="#seachIndex" Analyze="True" />
          <Member Name="#searchCommand" Analyze="True" />
          <Member Name="#SearchCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchCommand()" Analyze="True" />
            <Accessor Name="#set_SearchCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#SearchIndex" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchIndex()" Analyze="True" />
            <Accessor Name="#set_SearchIndex(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#searchPostcode" Analyze="True" />
          <Member Name="#SearchPostcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchPostcode()" Analyze="True" />
            <Accessor Name="#set_SearchPostcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#searchText" Analyze="True" />
          <Member Name="#SearchText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchText()" Analyze="True" />
            <Accessor Name="#set_SearchText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#showOnMapCommand" Analyze="True" />
          <Member Name="#ShowOnMapCommand" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ShowOnMapCommand()" Analyze="True" />
            <Accessor Name="#set_ShowOnMapCommand(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ShowOnMapCommand_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#stepSelectionMode" Analyze="True" />
          <Member Name="#StepSelectionMode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_StepSelectionMode()" Analyze="True" />
            <Accessor Name="#set_StepSelectionMode(System.Windows.Controls.AccordionSelectionMode)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#targetProperties" Analyze="True" />
          <Member Name="#TargetProperties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetProperties()" Analyze="True" />
            <Accessor Name="#set_TargetProperties(System.Collections.ObjectModel.ObservableCollection`1&lt;Landmark.Dtv.MatchedPropertyPresentationModel&gt;)" Analyze="False" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewLoadedEventArgs" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;Data&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;PageName&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;View&gt;k__BackingField" Analyze="True" />
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.Object)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PageName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PageName()" Analyze="True" />
            <Accessor Name="#set_PageName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#View" Analyze="True">
           <Accessors>
            <Accessor Name="#get_View()" Analyze="True" />
            <Accessor Name="#set_View(System.Windows.FrameworkElement)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
     <Resources>
      <Resource Name="Landmark.Dtv.ClientComponents.g.resources" Analyze="True" />
     </Resources>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv" Analyze="True">
       <Types>
        <Type Name="App" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#&lt;AccessToken&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;CurrentDialog&gt;k__BackingField" Analyze="True" />
          <Member Name="#AccessToken" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AccessToken()" Analyze="True" />
            <Accessor Name="#set_AccessToken(Landmark.Dtv.ServiceModel.SecurityServices.AccessToken)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Application_Startup(System.Object,System.Windows.StartupEventArgs)" Analyze="True" />
          <Member Name="#Application_UnhandledException(System.Object,System.Windows.ApplicationUnhandledExceptionEventArgs)" Analyze="True" />
          <Member Name="#appSettings" Analyze="True" />
          <Member Name="#AppSettings" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AppSettings()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CurrentDialog" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CurrentDialog()" Analyze="True" />
            <Accessor Name="#set_CurrentDialog(Landmark.Dtv.DialogWindow)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#IsUserInRole(System.String)" Analyze="True" />
          <Member Name="#IsUserInRoles(System.String[],System.Boolean)" Analyze="True" />
          <Member Name="#SetDialogWindow(Landmark.Dtv.DialogWindow)" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
     <Resources>
      <Resource Name="Landmark.Dtv.g.resources" Analyze="True" />
     </Resources>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.Model.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.model.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv.Model" Analyze="True">
       <Types>
        <Type Name="Address" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Address1" Analyze="True" />
          <Member Name="#_Address2" Analyze="True" />
          <Member Name="#_Address3" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Postcode" Analyze="True" />
          <Member Name="#_Region" Analyze="True" />
          <Member Name="#_Town" Analyze="True" />
          <Member Name="#Address1" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address1()" Analyze="True" />
            <Accessor Name="#set_Address1(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Address2" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address2()" Analyze="True" />
            <Accessor Name="#set_Address2(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Address3" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address3()" Analyze="True" />
            <Accessor Name="#set_Address3(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Branch" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Branch()" Analyze="True" />
            <Accessor Name="#set_Branch(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Branch&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateAddress(System.Int32,System.String,System.String,System.String,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Postcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Postcode()" Analyze="True" />
            <Accessor Name="#set_Postcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Property" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Property()" Analyze="True" />
            <Accessor Name="#set_Property(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Property&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Region" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Region()" Analyze="True" />
            <Accessor Name="#set_Region(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Town" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Town()" Analyze="True" />
            <Accessor Name="#set_Town(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Branch" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Name" Analyze="True" />
          <Member Name="#Address" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address()" Analyze="True" />
            <Accessor Name="#set_Address(Landmark.Dtv.Model.Address)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddressReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddressReference()" Analyze="True" />
            <Accessor Name="#set_AddressReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.Address&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateBranch(System.Int32,System.String,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Name" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Name()" Analyze="True" />
            <Accessor Name="#set_Name(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Organisation" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisation()" Analyze="True" />
            <Accessor Name="#set_Organisation(Landmark.Dtv.Model.Organisation)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#OrganisationReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_OrganisationReference()" Analyze="True" />
            <Accessor Name="#set_OrganisationReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.Organisation&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Users" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Users()" Analyze="True" />
            <Accessor Name="#set_Users(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.User&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Event" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Data" Analyze="True" />
          <Member Name="#_EventType" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Message" Analyze="True" />
          <Member Name="#_Title" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateEvent(System.Int32,System.String,System.String,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#EventType" Analyze="True">
           <Accessors>
            <Accessor Name="#get_EventType()" Analyze="True" />
            <Accessor Name="#set_EventType(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Message" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Message()" Analyze="True" />
            <Accessor Name="#set_Message(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Title" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Title()" Analyze="True" />
            <Accessor Name="#set_Title(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Feature" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Comment" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Value" Analyze="True" />
          <Member Name="#Comment" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Comment()" Analyze="True" />
            <Accessor Name="#set_Comment(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateFeature(System.Int32,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#FeatureDefinition" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureDefinition()" Analyze="True" />
            <Accessor Name="#set_FeatureDefinition(Landmark.Dtv.Model.FeatureDefinition)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureDefinitionReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureDefinitionReference()" Analyze="True" />
            <Accessor Name="#set_FeatureDefinitionReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.FeatureDefinition&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Property" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Property()" Analyze="True" />
            <Accessor Name="#set_Property(Landmark.Dtv.Model.Property)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PropertyReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PropertyReference()" Analyze="True" />
            <Accessor Name="#set_PropertyReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.Property&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Value" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Value()" Analyze="True" />
            <Accessor Name="#set_Value(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="FeatureDefinition" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_FeatureId" Analyze="True" />
          <Member Name="#_FeatureType" Analyze="False" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_IsSystem" Analyze="True" />
          <Member Name="#_MaxValue" Analyze="True" />
          <Member Name="#_MinValue" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Name" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateFeatureDefinition(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#FeatureDefinitionValues" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureDefinitionValues()" Analyze="True" />
            <Accessor Name="#set_FeatureDefinitionValues(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.FeatureDefinitionValue&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureId" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureId()" Analyze="True" />
            <Accessor Name="#set_FeatureId(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Features" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Features()" Analyze="True" />
            <Accessor Name="#set_Features(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Feature&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureType" Analyze="False">
           <Accessors>
            <Accessor Name="#get_FeatureType()" Analyze="True" />
            <Accessor Name="#set_FeatureType(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#IsSystem" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsSystem()" Analyze="True" />
            <Accessor Name="#set_IsSystem(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MaxValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MaxValue()" Analyze="True" />
            <Accessor Name="#set_MaxValue(System.Nullable`1&lt;System.Int32&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MinValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MinValue()" Analyze="True" />
            <Accessor Name="#set_MinValue(System.Nullable`1&lt;System.Int32&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Name" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Name()" Analyze="True" />
            <Accessor Name="#set_Name(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="FeatureDefinitionValue" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Value" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateFeatureDefinitionValue(System.Int32,System.String,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#FeatureDefinition" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureDefinition()" Analyze="True" />
            <Accessor Name="#set_FeatureDefinition(Landmark.Dtv.Model.FeatureDefinition)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureDefinitionReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureDefinitionReference()" Analyze="True" />
            <Accessor Name="#set_FeatureDefinitionReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.FeatureDefinition&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Value" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Value()" Analyze="True" />
            <Accessor Name="#set_Value(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="MatchedProperty" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_BuildingName" Analyze="True" />
          <Member Name="#_BuildingNumber" Analyze="True" />
          <Member Name="#_County" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Locality" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Postcode" Analyze="True" />
          <Member Name="#_ReferenceKey" Analyze="True" />
          <Member Name="#_SearchText" Analyze="True" />
          <Member Name="#_Thoroughfare" Analyze="True" />
          <Member Name="#_Town" Analyze="True" />
          <Member Name="#BuildingName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_BuildingName()" Analyze="True" />
            <Accessor Name="#set_BuildingName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#BuildingNumber" Analyze="True">
           <Accessors>
            <Accessor Name="#get_BuildingNumber()" Analyze="True" />
            <Accessor Name="#set_BuildingNumber(System.Nullable`1&lt;System.Int32&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#County" Analyze="True">
           <Accessors>
            <Accessor Name="#get_County()" Analyze="True" />
            <Accessor Name="#set_County(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateMatchedProperty(System.Int32,System.String,System.String,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Locality" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Locality()" Analyze="True" />
            <Accessor Name="#set_Locality(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Postcode" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Postcode()" Analyze="True" />
            <Accessor Name="#set_Postcode(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ReferenceKey" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ReferenceKey()" Analyze="True" />
            <Accessor Name="#set_ReferenceKey(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchIndexValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchIndexValue()" Analyze="True" />
            <Accessor Name="#set_SearchIndexValue(Landmark.Dtv.Model.SearchIndexValue)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchIndexValueReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchIndexValueReference()" Analyze="True" />
            <Accessor Name="#set_SearchIndexValueReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.SearchIndexValue&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchText" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchText()" Analyze="True" />
            <Accessor Name="#set_SearchText(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Thoroughfare" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Thoroughfare()" Analyze="True" />
            <Accessor Name="#set_Thoroughfare(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Town" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Town()" Analyze="True" />
            <Accessor Name="#set_Town(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ModelContext" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(System.Data.EntityClient.EntityConnection)" Analyze="True" />
          <Member Name="#.ctor(System.String)" Analyze="True" />
          <Member Name="#_Addresses" Analyze="True" />
          <Member Name="#_Branches" Analyze="True" />
          <Member Name="#_Events" Analyze="True" />
          <Member Name="#_Feature" Analyze="True" />
          <Member Name="#_FeatureDefinition" Analyze="True" />
          <Member Name="#_FeatureDefinitionValue" Analyze="True" />
          <Member Name="#_MatchedProperties" Analyze="True" />
          <Member Name="#_Organisations" Analyze="True" />
          <Member Name="#_PreviousPasswords" Analyze="True" />
          <Member Name="#_Properties" Analyze="True" />
          <Member Name="#_Roles" Analyze="True" />
          <Member Name="#_SearchIndexValue" Analyze="True" />
          <Member Name="#_Users" Analyze="True" />
          <Member Name="#_Valuations" Analyze="True" />
          <Member Name="#Addresses" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Addresses()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddToAddresses(Landmark.Dtv.Model.Address)" Analyze="True" />
          <Member Name="#AddToBranches(Landmark.Dtv.Model.Branch)" Analyze="True" />
          <Member Name="#AddToEvents(Landmark.Dtv.Model.Event)" Analyze="True" />
          <Member Name="#AddToFeature(Landmark.Dtv.Model.Feature)" Analyze="True" />
          <Member Name="#AddToFeatureDefinition(Landmark.Dtv.Model.FeatureDefinition)" Analyze="True" />
          <Member Name="#AddToFeatureDefinitionValue(Landmark.Dtv.Model.FeatureDefinitionValue)" Analyze="True" />
          <Member Name="#AddToMatchedProperties(Landmark.Dtv.Model.MatchedProperty)" Analyze="True" />
          <Member Name="#AddToOrganisations(Landmark.Dtv.Model.Organisation)" Analyze="True" />
          <Member Name="#AddToPreviousPasswords(Landmark.Dtv.Model.PreviousPassword)" Analyze="True" />
          <Member Name="#AddToProperties(Landmark.Dtv.Model.Property)" Analyze="True" />
          <Member Name="#AddToRoles(Landmark.Dtv.Model.Role)" Analyze="True" />
          <Member Name="#AddToSearchIndexValue(Landmark.Dtv.Model.SearchIndexValue)" Analyze="True" />
          <Member Name="#AddToUsers(Landmark.Dtv.Model.User)" Analyze="True" />
          <Member Name="#AddToValuations(Landmark.Dtv.Model.Valuation)" Analyze="True" />
          <Member Name="#Branches" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Branches()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Events" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Events()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Feature" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Feature()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureDefinition" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureDefinition()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FeatureDefinitionValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FeatureDefinitionValue()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MatchedProperties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MatchedProperties()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Organisations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisations()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PreviousPasswords" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PreviousPasswords()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Properties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Properties()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Roles" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Roles()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#SearchIndexValue" Analyze="True">
           <Accessors>
            <Accessor Name="#get_SearchIndexValue()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Users" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Users()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Valuations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Valuations()" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Organisation" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_OrganisationId" Analyze="True" />
          <Member Name="#_StatutoryName" Analyze="True" />
          <Member Name="#_TradingName" Analyze="True" />
          <Member Name="#Branches" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Branches()" Analyze="True" />
            <Accessor Name="#set_Branches(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Branch&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateOrganisation(System.Int32,System.String,System.String,System.String,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#OrganisationId" Analyze="True">
           <Accessors>
            <Accessor Name="#get_OrganisationId()" Analyze="True" />
            <Accessor Name="#set_OrganisationId(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Organisations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Organisations()" Analyze="True" />
            <Accessor Name="#set_Organisations(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Organisation&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ParentOrganisation" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ParentOrganisation()" Analyze="True" />
            <Accessor Name="#set_ParentOrganisation(Landmark.Dtv.Model.Organisation)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ParentOrganisationReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ParentOrganisationReference()" Analyze="True" />
            <Accessor Name="#set_ParentOrganisationReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.Organisation&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#StatutoryName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_StatutoryName()" Analyze="True" />
            <Accessor Name="#set_StatutoryName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#TradingName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TradingName()" Analyze="True" />
            <Accessor Name="#set_TradingName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="PreviousPassword" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Password" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatePreviousPassword(System.Int32,System.String,System.DateTime)" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Password" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Password()" Analyze="True" />
            <Accessor Name="#set_Password(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#User" Analyze="True">
           <Accessors>
            <Accessor Name="#get_User()" Analyze="True" />
            <Accessor Name="#set_User(Landmark.Dtv.Model.User)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#UserReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UserReference()" Analyze="True" />
            <Accessor Name="#set_UserReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.User&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Property" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#Address" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Address()" Analyze="True" />
            <Accessor Name="#set_Address(Landmark.Dtv.Model.Address)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#AddressReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_AddressReference()" Analyze="True" />
            <Accessor Name="#set_AddressReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.Address&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ComparableValuations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ComparableValuations()" Analyze="True" />
            <Accessor Name="#set_ComparableValuations(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Valuation&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateProperty(System.Int32,System.DateTime,System.String,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#Feature" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Feature()" Analyze="True" />
            <Accessor Name="#set_Feature(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Feature&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#TargetValuations" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetValuations()" Analyze="True" />
            <Accessor Name="#set_TargetValuations(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Valuation&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Role" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Description" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_IsSystem" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Name" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateRole(System.Int32,System.String,System.String,System.Boolean,System.String,System.DateTime,System.String,System.DateTime)" Analyze="True" />
          <Member Name="#Description" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Description()" Analyze="True" />
            <Accessor Name="#set_Description(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#IsSystem" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsSystem()" Analyze="True" />
            <Accessor Name="#set_IsSystem(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Name" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Name()" Analyze="True" />
            <Accessor Name="#set_Name(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Users" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Users()" Analyze="True" />
            <Accessor Name="#set_Users(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.User&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="SearchIndexValue" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateSearchIndexValue(System.Int32,System.DateTime,System.String)" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MatchedProperties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MatchedProperties()" Analyze="True" />
            <Accessor Name="#set_MatchedProperties(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.MatchedProperty&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="User" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_EmailAddress" Analyze="True" />
          <Member Name="#_FullName" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_IsActive" Analyze="True" />
          <Member Name="#_IsLockedOut" Analyze="True" />
          <Member Name="#_IsSystem" Analyze="True" />
          <Member Name="#_LastActivityDate" Analyze="True" />
          <Member Name="#_LastLockoutDate" Analyze="True" />
          <Member Name="#_LastLogOnDate" Analyze="True" />
          <Member Name="#_LastPasswordChangedDate" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Password" Analyze="True" />
          <Member Name="#_PasswordAnswer" Analyze="True" />
          <Member Name="#_PasswordQuestion" Analyze="True" />
          <Member Name="#_UserName" Analyze="True" />
          <Member Name="#Branch" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Branch()" Analyze="True" />
            <Accessor Name="#set_Branch(Landmark.Dtv.Model.Branch)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#BranchReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_BranchReference()" Analyze="True" />
            <Accessor Name="#set_BranchReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.Branch&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateUser(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.String,System.DateTime,System.String,System.DateTime)" Analyze="True" />
          <Member Name="#EmailAddress" Analyze="True">
           <Accessors>
            <Accessor Name="#get_EmailAddress()" Analyze="True" />
            <Accessor Name="#set_EmailAddress(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#FullName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_FullName()" Analyze="True" />
            <Accessor Name="#set_FullName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#IsActive" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsActive()" Analyze="True" />
            <Accessor Name="#set_IsActive(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#IsLockedOut" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsLockedOut()" Analyze="True" />
            <Accessor Name="#set_IsLockedOut(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#IsSystem" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsSystem()" Analyze="True" />
            <Accessor Name="#set_IsSystem(System.Boolean)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LastActivityDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastActivityDate()" Analyze="True" />
            <Accessor Name="#set_LastActivityDate(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LastLockoutDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastLockoutDate()" Analyze="True" />
            <Accessor Name="#set_LastLockoutDate(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LastLogOnDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastLogOnDate()" Analyze="True" />
            <Accessor Name="#set_LastLogOnDate(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LastPasswordChangedDate" Analyze="True">
           <Accessors>
            <Accessor Name="#get_LastPasswordChangedDate()" Analyze="True" />
            <Accessor Name="#set_LastPasswordChangedDate(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Password" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Password()" Analyze="True" />
            <Accessor Name="#set_Password(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PasswordAnswer" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PasswordAnswer()" Analyze="True" />
            <Accessor Name="#set_PasswordAnswer(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PasswordQuestion" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PasswordQuestion()" Analyze="True" />
            <Accessor Name="#set_PasswordQuestion(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PreviousPasswords" Analyze="True">
           <Accessors>
            <Accessor Name="#get_PreviousPasswords()" Analyze="True" />
            <Accessor Name="#set_PreviousPasswords(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.PreviousPassword&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Roles" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Roles()" Analyze="True" />
            <Accessor Name="#set_Roles(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Role&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#UserName" Analyze="True">
           <Accessors>
            <Accessor Name="#get_UserName()" Analyze="True" />
            <Accessor Name="#set_UserName(System.String)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Valuation" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_Created" Analyze="True" />
          <Member Name="#_CreatedBy" Analyze="True" />
          <Member Name="#_Id" Analyze="True" />
          <Member Name="#_Modified" Analyze="True" />
          <Member Name="#_ModifiedBy" Analyze="True" />
          <Member Name="#_Reference" Analyze="True" />
          <Member Name="#ComparableProperties" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ComparableProperties()" Analyze="True" />
            <Accessor Name="#set_ComparableProperties(System.Data.Objects.DataClasses.EntityCollection`1&lt;Landmark.Dtv.Model.Property&gt;)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Created" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Created()" Analyze="True" />
            <Accessor Name="#set_Created(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreatedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CreatedBy()" Analyze="True" />
            <Accessor Name="#set_CreatedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#CreateValuation(System.Int32,System.DateTime,System.String,System.DateTime,System.String,System.String)" Analyze="True" />
          <Member Name="#Id" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Id()" Analyze="True" />
            <Accessor Name="#set_Id(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Modified" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Modified()" Analyze="True" />
            <Accessor Name="#set_Modified(System.DateTime)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#ModifiedBy" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ModifiedBy()" Analyze="True" />
            <Accessor Name="#set_ModifiedBy(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Reference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Reference()" Analyze="True" />
            <Accessor Name="#set_Reference(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#TargetProperty" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetProperty()" Analyze="True" />
            <Accessor Name="#set_TargetProperty(Landmark.Dtv.Model.Property)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#TargetPropertyReference" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TargetPropertyReference()" Analyze="True" />
            <Accessor Name="#set_TargetPropertyReference(System.Data.Objects.DataClasses.EntityReference`1&lt;Landmark.Dtv.Model.Property&gt;)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
     <Resources>
      <Resource Name="Model.csdl" Analyze="True" />
      <Resource Name="Model.msl" Analyze="True" />
      <Resource Name="Model.ssdl" Analyze="True" />
     </Resources>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.SilverlightExtensions.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.silverlightextensions.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark" Analyze="True">
       <Types>
        <Type Name="DecimalExtensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Decimal,System.Decimal,System.Decimal,System.Boolean)" Analyze="True" />
          <Member Name="#ToDouble(System.Decimal)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DictionaryExtensions" Analyze="True">
         <Members>
          <Member Name="#GetValueOrDefault`1(System.Collections.Generic.Dictionary`2&lt;System.String,!!0&gt;,System.String,!!0)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DictionaryExtensions+&lt;&gt;c__DisplayClass1`1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;GetValueOrDefault&gt;b__0(System.Collections.Generic.KeyValuePair`2&lt;System.String,!0&gt;)" Analyze="True" />
          <Member Name="#name" Analyze="True" />
         </Members>
        </Type>
        <Type Name="DoubleExtensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Double,System.Double,System.Double,System.Boolean)" Analyze="True" />
          <Member Name="#ToDecimal(System.Double)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="EnumExtensions" Analyze="True">
         <Members>
          <Member Name="#ToInt32(System.Enum)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="FloatExtensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Single,System.Single,System.Single,System.Boolean)" Analyze="True" />
          <Member Name="#ToDouble(System.Single)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="Int32Extensions" Analyze="True">
         <Members>
          <Member Name="#IsBetween(System.Int32,System.Int32,System.Int32,System.Boolean)" Analyze="True" />
          <Member Name="#ToDouble(System.Int32)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="StreamReaderExtensions" Analyze="True">
         <Members>
          <Member Name="#SkipLines(System.IO.StreamReader,System.Int32)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="StringExtensions" Analyze="True">
         <Members>
          <Member Name="#IsEmptyOrNull(System.String)" Analyze="True" />
          <Member Name="#IsNotEmptyOrNull(System.String)" Analyze="True" />
          <Member Name="#Left(System.String,System.Int32)" Analyze="True" />
          <Member Name="#ToDecimal(System.String)" Analyze="True" />
          <Member Name="#ToDouble(System.String)" Analyze="True" />
          <Member Name="#ToInt32(System.String)" Analyze="True" />
          <Member Name="#ToTitleCase(System.String)" Analyze="True" />
          <Member Name="#ToUnquotedString(System.String)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="StringExtensions+&lt;&gt;c__DisplayClass1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;ToTitleCase&gt;b__0(System.String)" Analyze="True" />
          <Member Name="#builder" Analyze="True" />
         </Members>
        </Type>
        <Type Name="WpfExtensions" Analyze="True">
         <Members>
          <Member Name="#ToVisibility(System.Boolean)" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.Testing.InternetExplorerTestSuite.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.testing.internetexplorertestsuite.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv.Testing" Analyze="True">
       <Types>
        <Type Name="DragDockExperimentalTests" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#ExpandPanelTest()" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Testing" Analyze="True">
       <Types>
        <Type Name="DtvTestBase" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;App&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;TestContext&gt;k__BackingField" Analyze="True" />
          <Member Name="#App" Analyze="True">
           <Accessors>
            <Accessor Name="#get_App()" Analyze="True" />
            <Accessor Name="#set_App(ArtOfTest.WebAii.Silverlight.SilverlightApp)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LogOn(System.String,System.String)" Analyze="True" />
          <Member Name="#MyClassCleanup()" Analyze="True" />
          <Member Name="#MyClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)" Analyze="True" />
          <Member Name="#MyTestCleanup()" Analyze="True" />
          <Member Name="#MyTestInitialize()" Analyze="True" />
          <Member Name="#TestContext" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestContext()" Analyze="True" />
            <Accessor Name="#set_TestContext(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ExperimentalTestBase" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;App&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;TestContext&gt;k__BackingField" Analyze="True" />
          <Member Name="#App" Analyze="True">
           <Accessors>
            <Accessor Name="#get_App()" Analyze="True" />
            <Accessor Name="#set_App(ArtOfTest.WebAii.Silverlight.SilverlightApp)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#LogOn(System.String,System.String)" Analyze="True" />
          <Member Name="#MyClassCleanup()" Analyze="True" />
          <Member Name="#MyClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)" Analyze="True" />
          <Member Name="#MyTestCleanup()" Analyze="True" />
          <Member Name="#MyTestInitialize()" Analyze="True" />
          <Member Name="#TestContext" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestContext()" Analyze="True" />
            <Accessor Name="#set_TestContext(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="WebAiiVSUnitTest1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#ValidAdminLogOnTest()" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.Testing.SilverlightUnitTests.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.testing.silverlightunittests.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv" Analyze="True">
       <Types>
        <Type Name="FeatureEditorWrapPanelUnitTest" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;MockUi&gt;k__BackingField" Analyze="True" />
          <Member Name="#FeatureAuditorInitialisationTest()" Analyze="True" />
          <Member Name="#Initialise()" Analyze="True" />
          <Member Name="#MockUi" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MockUi()" Analyze="True" />
            <Accessor Name="#set_MockUi(Landmark.Dtv.FeatureEditorListManager)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv.Testing" Analyze="True">
       <Types>
        <Type Name="ValuationMock" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SilverlightUnitTests" Analyze="True">
       <Types>
        <Type Name="App" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#&lt;CurrentDialog&gt;k__BackingField" Analyze="True" />
          <Member Name="#Application_Exit(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#Application_Startup(System.Object,System.Windows.StartupEventArgs)" Analyze="True" />
          <Member Name="#Application_UnhandledException(System.Object,System.Windows.ApplicationUnhandledExceptionEventArgs)" Analyze="True" />
          <Member Name="#CurrentDialog" Analyze="True">
           <Accessors>
            <Accessor Name="#get_CurrentDialog()" Analyze="True" />
            <Accessor Name="#set_CurrentDialog(Landmark.Dtv.DialogWindow)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#ReportErrorToDOM(System.Windows.ApplicationUnhandledExceptionEventArgs)" Analyze="True" />
          <Member Name="#SetDialogWindow(Landmark.Dtv.DialogWindow)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="App+&lt;&gt;c__DisplayClass2" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;Application_UnhandledException&gt;b__0()" Analyze="True" />
          <Member Name="#e" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
     <Resources>
      <Resource Name="Landmark.Dtv.Testing.SilverlightUnitTests.g.resources" Analyze="True" />
     </Resources>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.TileSourceHelperTests.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.tilesourcehelpertests.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv" Analyze="True">
       <Types>
        <Type Name="BoundingBox" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#&lt;Height&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Width&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#Height" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Height()" Analyze="True" />
            <Accessor Name="#set_Height(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Width" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Width()" Analyze="True" />
            <Accessor Name="#set_Width(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Constants" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#DegreesToRadiansFactor" Analyze="True" />
          <Member Name="#DevelopmentKey" Analyze="True" />
          <Member Name="#EarthCircumference" Analyze="True" />
          <Member Name="#EarthMaxLatitude" Analyze="True" />
          <Member Name="#EarthMaxLongitude" Analyze="True" />
          <Member Name="#EarthMinLatitude" Analyze="True" />
          <Member Name="#EarthMinLongitude" Analyze="True" />
          <Member Name="#EarthRadius" Analyze="True" />
          <Member Name="#HalfEarthCircumference" Analyze="True" />
          <Member Name="#InchToMeter" Analyze="True" />
          <Member Name="#MeterToInch" Analyze="True" />
          <Member Name="#MeterToMile" Analyze="True" />
          <Member Name="#MileToMeter" Analyze="True" />
          <Member Name="#OsgMaxLatitude" Analyze="True" />
          <Member Name="#OsgMaxLongitude" Analyze="True" />
          <Member Name="#OsgMinLatitude" Analyze="True" />
          <Member Name="#OsgMinLongitude" Analyze="True" />
          <Member Name="#ProjectionOffset" Analyze="True" />
          <Member Name="#ProMapServiceUrlBase" Analyze="True" />
          <Member Name="#RadiansToDegreesFactor" Analyze="True" />
          <Member Name="#TileSize" Analyze="True" />
         </Members>
        </Type>
        <Type Name="GeographicLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;Height&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Latitude&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Longitude&gt;k__BackingField" Analyze="True" />
          <Member Name="#Height" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Height()" Analyze="True" />
            <Accessor Name="#set_Height(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Latitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Latitude()" Analyze="True" />
            <Accessor Name="#set_Latitude(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Longitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Longitude()" Analyze="True" />
            <Accessor Name="#set_Longitude(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="OsgLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;Easting&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Height&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Northing&gt;k__BackingField" Analyze="True" />
          <Member Name="#Easting" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Easting()" Analyze="True" />
            <Accessor Name="#set_Easting(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Height" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Height()" Analyze="True" />
            <Accessor Name="#set_Height(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Northing" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Northing()" Analyze="True" />
            <Accessor Name="#set_Northing(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="PixelLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TileLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TilePoint" Analyze="True">
         <Members>
          <Member Name="#&lt;DetailLevel&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#DetailLevel" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DetailLevel()" Analyze="True" />
            <Accessor Name="#set_DetailLevel(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TileSourceHelper" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Clip(System.Double,System.Double,System.Double)" Analyze="True" />
          <Member Name="#GroundResolution(System.Double,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#LatLongToPixelXY(System.Double,System.Double,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#LatLonToNorthingEasting(System.Double,System.Double)" Analyze="True" />
          <Member Name="#MapScale(System.Double,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#MapSize(System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#Marc(System.Double,System.Double,System.Double,System.Double)" Analyze="True" />
          <Member Name="#NorthingEastingToNationalGridReference(System.Double,System.Double)" Analyze="True" />
          <Member Name="#PixelXYToLatLong(Landmark.Dtv.PixelLocation,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#PixelXYToLatLong(System.Int32,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#PixelXYToTileXY(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#QuadKeyToBoundingBox(System.String)" Analyze="True" />
          <Member Name="#QuadKeyToBoundingBox(System.String,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#QuadKeyToTileXY(System.String)" Analyze="True" />
          <Member Name="#RadiansToDegrees(System.Double)" Analyze="True" />
          <Member Name="#TileXYToCentrePixelXY(Landmark.Dtv.TileLocation,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToCentrePixelXY(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToPixelXY(Landmark.Dtv.TileLocation,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToPixelXY(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToQuadKey(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#TransformWgsToOsg(Landmark.Dtv.GeographicLocation)" Analyze="True" />
          <Member Name="#TransformWgsToOsg(System.Double,System.Double,System.Double)" Analyze="True" />
          <Member Name="#XToLongitudeAtZoom(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#YToLatitudeAtZoom(System.Int32,System.Int32,System.Int32)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="TileSourceHelperTests" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;TestContext&gt;k__BackingField" Analyze="True" />
          <Member Name="#MapSizeTest()" Analyze="True" />
          <Member Name="#PixelXYToLatLongTest()" Analyze="True" />
          <Member Name="#QuadKeyToBoundingBoxTest()" Analyze="True" />
          <Member Name="#TestContext" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestContext()" Analyze="True" />
            <Accessor Name="#set_TestContext(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#TileSize" Analyze="True" />
          <Member Name="#TileXYToCentrePixelXY()" Analyze="True" />
          <Member Name="#TileXYToPixelXYTest()" Analyze="True" />
          <Member Name="#TransformWgsToOsgTest()" Analyze="True" />
          <Member Name="#XToLongitudeAtZoomTest()" Analyze="True" />
          <Member Name="#YToLatitudeAtZoomTest()" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.TileSources.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.tilesources.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv" Analyze="True">
       <Types>
        <Type Name="BoundingBox" Analyze="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#&lt;Height&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Width&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#Height" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Height()" Analyze="True" />
            <Accessor Name="#set_Height(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Width" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Width()" Analyze="True" />
            <Accessor Name="#set_Width(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Constants" Analyze="True">
         <Members>
          <Member Name="#.cctor()" Analyze="True" />
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#DegreesToRadiansFactor" Analyze="True" />
          <Member Name="#DevelopmentKey" Analyze="True" />
          <Member Name="#EarthCircumference" Analyze="True" />
          <Member Name="#EarthMaxLatitude" Analyze="True" />
          <Member Name="#EarthMaxLongitude" Analyze="True" />
          <Member Name="#EarthMinLatitude" Analyze="True" />
          <Member Name="#EarthMinLongitude" Analyze="True" />
          <Member Name="#EarthRadius" Analyze="True" />
          <Member Name="#HalfEarthCircumference" Analyze="True" />
          <Member Name="#InchToMeter" Analyze="True" />
          <Member Name="#MeterToInch" Analyze="True" />
          <Member Name="#MeterToMile" Analyze="True" />
          <Member Name="#MileToMeter" Analyze="True" />
          <Member Name="#OsgMaxLatitude" Analyze="True" />
          <Member Name="#OsgMaxLongitude" Analyze="True" />
          <Member Name="#OsgMinLatitude" Analyze="True" />
          <Member Name="#OsgMinLongitude" Analyze="True" />
          <Member Name="#ProjectionOffset" Analyze="True" />
          <Member Name="#ProMapServiceUrlBase" Analyze="True" />
          <Member Name="#RadiansToDegreesFactor" Analyze="True" />
          <Member Name="#TileSize" Analyze="True" />
         </Members>
        </Type>
        <Type Name="GeographicLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;Height&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Latitude&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Longitude&gt;k__BackingField" Analyze="True" />
          <Member Name="#Height" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Height()" Analyze="True" />
            <Accessor Name="#set_Height(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Latitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Latitude()" Analyze="True" />
            <Accessor Name="#set_Latitude(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Longitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Longitude()" Analyze="True" />
            <Accessor Name="#set_Longitude(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="HashFactory" Analyze="True">
         <Members>
          <Member Name="#APHash(System.String)" Analyze="True" />
          <Member Name="#CombinedRSAPHash(System.String)" Analyze="True" />
          <Member Name="#GetHashKey(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" Analyze="True" />
          <Member Name="#RSHash(System.String)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OsgLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;Easting&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Height&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Northing&gt;k__BackingField" Analyze="True" />
          <Member Name="#Easting" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Easting()" Analyze="True" />
            <Accessor Name="#set_Easting(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Height" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Height()" Analyze="True" />
            <Accessor Name="#set_Height(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Northing" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Northing()" Analyze="True" />
            <Accessor Name="#set_Northing(System.Double)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="PixelLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ProMapBingTileSource" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;ContactKey&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Data&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Format&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Layer&gt;k__BackingField" Analyze="True" />
          <Member Name="#ContactKey" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ContactKey()" Analyze="True" />
            <Accessor Name="#set_ContactKey(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Format" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Format()" Analyze="True" />
            <Accessor Name="#set_Format(Landmark.Dtv.ProMapFormat)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#GetUri(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#Layer" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Layer()" Analyze="True" />
            <Accessor Name="#set_Layer(Landmark.Dtv.ProMapLayer)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ProMapFormat" Analyze="True">
         <Members>
          <Member Name="#Jpg" Analyze="True" />
          <Member Name="#NotSet" Analyze="True" />
          <Member Name="#Png" Analyze="True" />
          <Member Name="#value__" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ProMapLayer" Analyze="True">
         <Members>
          <Member Name="#NotSet" Analyze="True" />
          <Member Name="#Street" Analyze="True" />
          <Member Name="#Town" Analyze="True" />
          <Member Name="#value__" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ProMapTileSource" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#contactKey" Analyze="True" />
          <Member Name="#ContactKey" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ContactKey()" Analyze="True" />
            <Accessor Name="#set_ContactKey(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#data" Analyze="True" />
          <Member Name="#Data" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Data()" Analyze="True" />
            <Accessor Name="#set_Data(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#format" Analyze="True" />
          <Member Name="#Format" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Format()" Analyze="True" />
            <Accessor Name="#set_Format(Landmark.Dtv.ProMapFormat)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#GetTile(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#InitializeCompleted" Analyze="True" />
          <Member Name="#isInitialized" Analyze="True" />
          <Member Name="#IsInitialized" Analyze="True">
           <Accessors>
            <Accessor Name="#get_IsInitialized()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#layer" Analyze="True" />
          <Member Name="#Layer" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Layer()" Analyze="True" />
            <Accessor Name="#set_Layer(Landmark.Dtv.ProMapLayer)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MaxLatitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MaxLatitude()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MaxLongitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MaxLongitude()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MinLatitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MinLatitude()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#MinLongitude" Analyze="True">
           <Accessors>
            <Accessor Name="#get_MinLongitude()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#RaiseInitialized()" Analyze="True" />
          <Member Name="#TileColor" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TileColor()" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#InitializeCompleted" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_InitializeCompleted(System.EventHandler)" Analyze="True" />
            <Accessor Name="#remove_InitializeCompleted(System.EventHandler)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TileLocation" Analyze="True">
         <Members>
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TilePoint" Analyze="True">
         <Members>
          <Member Name="#&lt;DetailLevel&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;X&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;Y&gt;k__BackingField" Analyze="True" />
          <Member Name="#DetailLevel" Analyze="True">
           <Accessors>
            <Accessor Name="#get_DetailLevel()" Analyze="True" />
            <Accessor Name="#set_DetailLevel(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#X" Analyze="True">
           <Accessors>
            <Accessor Name="#get_X()" Analyze="True" />
            <Accessor Name="#set_X(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Y" Analyze="True">
           <Accessors>
            <Accessor Name="#get_Y()" Analyze="True" />
            <Accessor Name="#set_Y(System.Int32)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TileSourceHelper" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#Clip(System.Double,System.Double,System.Double)" Analyze="True" />
          <Member Name="#GroundResolution(System.Double,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#LatLongToPixelXY(System.Double,System.Double,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#LatLonToNorthingEasting(System.Double,System.Double)" Analyze="True" />
          <Member Name="#MapScale(System.Double,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#MapSize(System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#Marc(System.Double,System.Double,System.Double,System.Double)" Analyze="True" />
          <Member Name="#NorthingEastingToNationalGridReference(System.Double,System.Double)" Analyze="True" />
          <Member Name="#PixelXYToLatLong(Landmark.Dtv.PixelLocation,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#PixelXYToLatLong(System.Int32,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#PixelXYToTileXY(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#QuadKeyToBoundingBox(System.String)" Analyze="True" />
          <Member Name="#QuadKeyToBoundingBox(System.String,System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#QuadKeyToTileXY(System.String)" Analyze="True" />
          <Member Name="#RadiansToDegrees(System.Double)" Analyze="True" />
          <Member Name="#TileXYToCentrePixelXY(Landmark.Dtv.TileLocation,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToCentrePixelXY(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToPixelXY(Landmark.Dtv.TileLocation,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToPixelXY(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#TileXYToQuadKey(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#TransformWgsToOsg(Landmark.Dtv.GeographicLocation)" Analyze="True" />
          <Member Name="#TransformWgsToOsg(System.Double,System.Double,System.Double)" Analyze="True" />
          <Member Name="#XToLongitudeAtZoom(System.Int32,System.Int32,System.Int32)" Analyze="True" />
          <Member Name="#YToLatitudeAtZoom(System.Int32,System.Int32,System.Int32)" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Dtv.Web.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.dtv.web.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Dtv.Web" Analyze="True">
       <Types>
        <Type Name="Default" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#appHost" Analyze="True" />
          <Member Name="#GetAppSettingString()" Analyze="True" />
          <Member Name="#header" Analyze="True" />
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#pageForm" Analyze="True" />
          <Member Name="#scriptManager" Analyze="True" />
         </Members>
        </Type>
        <Type Name="TestDefault" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#appHost" Analyze="True" />
          <Member Name="#GetAppSettingString()" Analyze="True" />
          <Member Name="#header" Analyze="True" />
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#pageForm" Analyze="True" />
          <Member Name="#scriptManager" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Testing.CommandManagerTests.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.testing.commandmanagertests.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Testing" Analyze="True">
       <Types>
        <Type Name="App" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#Application_Exit(System.Object,System.EventArgs)" Analyze="True" />
          <Member Name="#Application_Startup(System.Object,System.Windows.StartupEventArgs)" Analyze="True" />
          <Member Name="#Application_UnhandledException(System.Object,System.Windows.ApplicationUnhandledExceptionEventArgs)" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#ReportErrorToDOM(System.Windows.ApplicationUnhandledExceptionEventArgs)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="App+&lt;&gt;c__DisplayClass2" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;Application_UnhandledException&gt;b__0()" Analyze="True" />
          <Member Name="#e" Analyze="True" />
         </Members>
        </Type>
        <Type Name="CommandBindingTest" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#_contentLoaded" Analyze="True" />
          <Member Name="#InitializeComponent()" Analyze="True" />
          <Member Name="#LayoutRoot" Analyze="True" />
          <Member Name="#testCommandNoArgs" Analyze="True" />
          <Member Name="#testCommandNoArgsStatus" Analyze="True" />
          <Member Name="#testCommandStringArg" Analyze="True" />
          <Member Name="#testCommandStringArgStatus" Analyze="True" />
         </Members>
        </Type>
        <Type Name="CommandManagerTests" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;CommandManagerCommandWithNoArgumentsTest&gt;b__0()" Analyze="True" />
          <Member Name="#&lt;CommandManagerCommandWithNoArgumentsTest&gt;b__1()" Analyze="True" />
          <Member Name="#&lt;CommandManagerCommandWithStringArgumentTest&gt;b__4()" Analyze="True" />
          <Member Name="#&lt;CommandManagerCommandWithStringArgumentTest&gt;b__5()" Analyze="True" />
          <Member Name="#CommandManagerCommandWithNoArgumentsTest()" Analyze="True" />
          <Member Name="#CommandManagerCommandWithStringArgumentTest()" Analyze="True" />
          <Member Name="#Init()" Analyze="True" />
          <Member Name="#testPage" Analyze="True" />
         </Members>
        </Type>
        <Type Name="TestPresentationModel" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;TestCommandNoArgs&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;TestCommandStringArg&gt;k__BackingField" Analyze="True" />
          <Member Name="#CommandNoArgs_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#CommandStringArg_Executing(System.Object,Landmark.NotifyExecutingCommandEventArgs)" Analyze="True" />
          <Member Name="#PropertyChanged" Analyze="True" />
          <Member Name="#RaisePropertyChanged(System.String)" Analyze="True" />
          <Member Name="#TestCommandNoArgs" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestCommandNoArgs()" Analyze="True" />
            <Accessor Name="#set_TestCommandNoArgs(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#TestCommandStringArg" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestCommandStringArg()" Analyze="True" />
            <Accessor Name="#set_TestCommandStringArg(System.Windows.Input.ActionCommand)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#testOneStatus" Analyze="True" />
          <Member Name="#TestOneStatus" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestOneStatus()" Analyze="True" />
            <Accessor Name="#set_TestOneStatus(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#testTwoStatus" Analyze="True" />
          <Member Name="#TestTwoStatus" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestTwoStatus()" Analyze="True" />
            <Accessor Name="#set_TestTwoStatus(System.String)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#PropertyChanged" Kind="Event" Analyze="True">
           <Accessors>
            <Accessor Name="#add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler)" Analyze="True" />
            <Accessor Name="#remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler)" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
     <Resources>
      <Resource Name="Landmark.Testing.CommandManagerTests.g.resources" Analyze="True" />
     </Resources>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../ReferenceAssemblies/Landmark.Testing.SilverlightTestHelpers.dll" Analyze="True">
   <Modules>
    <Module Name="landmark.testing.silverlighttesthelpers.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="Landmark" Analyze="True">
       <Types>
        <Type Name="DelegateHandler" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#DelegateHasBeenInvoked()" Analyze="True" />
          <Member Name="#eventHasBeenCalled" Analyze="True" />
          <Member Name="#GenericDelegateHandler`1(System.Object,!!0)" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Landmark.Testing" Analyze="True">
       <Types>
        <Type Name="AutomationHelper" Analyze="True">
         <Members>
          <Member Name="#GetButtonInvokeProvider(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#GetControl`1(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#GetListBoxInvokeProvider(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#GetListBoxValueProvider(System.Windows.FrameworkElement,System.String)" Analyze="True" />
          <Member Name="#GetTextBlockAutomationPeer(System.Windows.FrameworkElement,System.String)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="Extensions" Analyze="True">
         <Members>
          <Member Name="#CreateUiTestHelper(Microsoft.Silverlight.Testing.SilverlightTest,System.Windows.FrameworkElement)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#.ctor(Microsoft.Silverlight.Testing.SilverlightTest,System.Windows.FrameworkElement)" Analyze="True" />
          <Member Name="#&lt;Dispose&gt;b__16()" Analyze="True" />
          <Member Name="#&lt;ElementUnderTest&gt;k__BackingField" Analyze="True" />
          <Member Name="#&lt;TestClass&gt;k__BackingField" Analyze="True" />
          <Member Name="#AssertAreEqual`1(!!0,!!0,System.String)" Analyze="True" />
          <Member Name="#AssertAreNotEqual`1(!!0,!!0,System.String)" Analyze="True" />
          <Member Name="#AssertTextBlockText(System.String,System.String)" Analyze="True" />
          <Member Name="#ClickButton(System.String)" Analyze="True" />
          <Member Name="#ClickButton(System.String,System.String)" Analyze="True" />
          <Member Name="#ClickDialogButton(System.String)" Analyze="True" />
          <Member Name="#Dispose()" Analyze="True" />
          <Member Name="#Dispose(System.Boolean)" Analyze="True" />
          <Member Name="#disposed" Analyze="True" />
          <Member Name="#ElementUnderTest" Analyze="True">
           <Accessors>
            <Accessor Name="#get_ElementUnderTest()" Analyze="True" />
            <Accessor Name="#set_ElementUnderTest(System.Windows.FrameworkElement)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#Execute(System.Action)" Analyze="True" />
          <Member Name="#Execute(System.Action[])" Analyze="True" />
          <Member Name="#GetControl`1(System.String)" Analyze="True" />
          <Member Name="#LoadUI()" Analyze="True" />
          <Member Name="#SelectListBoxItem`1(System.String,System.Int32,System.Boolean)" Analyze="True" />
          <Member Name="#SetTextBoxText(System.String,System.String)" Analyze="True" />
          <Member Name="#TestClass" Analyze="True">
           <Accessors>
            <Accessor Name="#get_TestClass()" Analyze="True" />
            <Accessor Name="#set_TestClass(Microsoft.Silverlight.Testing.SilverlightTest)" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="#WaitFor(System.Int32)" Analyze="True" />
          <Member Name="#WaitFor(System.TimeSpan)" Analyze="True" />
          <Member Name="#WaitUntil(System.Func`1&lt;System.Boolean&gt;)" Analyze="False" />
          <Member Name="#WaitUntilTextBlockChange(System.String,System.String)" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper+&lt;&gt;c__DisplayClass1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;AssertTextBlockText&gt;b__0()" Analyze="True" />
          <Member Name="#control" Analyze="True" />
          <Member Name="#expectedText" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper+&lt;&gt;c__DisplayClass11" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;SetTextBoxText&gt;b__10()" Analyze="True" />
          <Member Name="#targetName" Analyze="True" />
          <Member Name="#text" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper+&lt;&gt;c__DisplayClass14" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;WaitUntilTextBlockChange&gt;b__13()" Analyze="True" />
          <Member Name="#changeFrom" Analyze="True" />
          <Member Name="#targetName" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper+&lt;&gt;c__DisplayClass4`1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;AssertAreEqual&gt;b__3()" Analyze="True" />
          <Member Name="#actual" Analyze="True" />
          <Member Name="#expected" Analyze="True" />
          <Member Name="#message" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper+&lt;&gt;c__DisplayClass7`1" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;AssertAreNotEqual&gt;b__6()" Analyze="True" />
          <Member Name="#actual" Analyze="True" />
          <Member Name="#message" Analyze="True" />
          <Member Name="#notExpected" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper+&lt;&gt;c__DisplayClassa" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;ClickButton&gt;b__9()" Analyze="True" />
          <Member Name="#targetName" Analyze="True" />
         </Members>
        </Type>
        <Type Name="UiTestHelper+&lt;&gt;c__DisplayClasse" Analyze="True">
         <Members>
          <Member Name="#.ctor()" Analyze="True" />
          <Member Name="#&lt;&gt;4__this" Analyze="True" />
          <Member Name="#&lt;ClickButton&gt;b__c()" Analyze="True" />
          <Member Name="#&lt;ClickButton&gt;b__d()" Analyze="True" />
          <Member Name="#parent" Analyze="True" />
          <Member Name="#targetName" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="False" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="False" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="False" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="False" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" />
  </RuleFiles>
  <Groups>
   <Group Name="Message Level" IsSystem="True" Selected="True">
    <Categories>
     <Category Name="Critical Error">
      <Rules>
       <Rule Name="AptcaMethodsShouldOnlyCallAptcaMethods" Enabled="True" />
       <Rule Name="AptcaTypesShouldOnlyExtendAptcaBaseTypes" Enabled="True" />
       <Rule Name="AssembliesShouldHaveValidStrongNames" Enabled="True" />
       <Rule Name="DeclarePInvokesCorrectly" Enabled="False" />
       <Rule Name="DoNotCatchGeneralExceptionTypes" Enabled="True" />
       <Rule Name="DoNotIndirectlyExposeMethodsWithLinkDemands" Enabled="True" />
       <Rule Name="DoNotNestGenericTypesInMemberSignatures" Enabled="True" />
       <Rule Name="DoNotUseAutoDualClassInterfaceType" Enabled="False" />
       <Rule Name="EnumsShouldHaveZeroValue" Enabled="True" />
       <Rule Name="FinalizersShouldBeProtected" Enabled="True" />
       <Rule Name="FinalizersShouldCallBaseClassFinalizer" Enabled="True" />
       <Rule Name="IdentifiersShouldNotHaveIncorrectSuffix" Enabled="True" />
       <Rule Name="InitializeValueTypeStaticFieldsInline" Enabled="True" />
       <Rule Name="InstantiateArgumentExceptionsCorrectly" Enabled="True" />
       <Rule Name="MarkAssembliesWithComVisible" Enabled="True" />
       <Rule Name="MethodSecurityShouldBeASupersetOfType" Enabled="True" />
       <Rule Name="OperatorsShouldHaveSymmetricalOverloads" Enabled="True" />
       <Rule Name="OverrideLinkDemandsShouldBeIdenticalToBase" Enabled="True" />
       <Rule Name="PInvokesShouldNotBeVisible" Enabled="False" />
       <Rule Name="PointersShouldNotBeVisible" Enabled="True" />
       <Rule Name="ReviewImperativeSecurity" Enabled="True" />
       <Rule Name="ReviewSuppressUnmanagedCodeSecurityUsage" Enabled="True" />
       <Rule Name="ReviewVisibleEventHandlers" Enabled="False" />
       <Rule Name="SecureAsserts" Enabled="True" />
       <Rule Name="SecuredTypesShouldNotExposeFields" Enabled="True" />
       <Rule Name="SecureSerializationConstructors" Enabled="True" />
       <Rule Name="SecurityTransparentAssembliesShouldNotContainSecurityCriticalCode" Enabled="True" />
       <Rule Name="SecurityTransparentCodeShouldNotAssert" Enabled="True" />
       <Rule Name="SecurityTransparentCodeShouldNotReferenceNonpublicSecurityCriticalCode" Enabled="True" />
       <Rule Name="TestForNaNCorrectly" Enabled="True" />
       <Rule Name="TypeLinkDemandsRequireInheritanceDemands" Enabled="True" />
       <Rule Name="TypesThatOwnDisposableFieldsShouldBeDisposable" Enabled="True" />
       <Rule Name="TypesThatOwnNativeResourcesShouldBeDisposable" Enabled="True" />
       <Rule Name="UseGenericsWhereAppropriate" Enabled="True" />
       <Rule Name="ValueTypeFieldsShouldBePortable" Enabled="False" />
      </Rules>
     </Category>
     <Category Name="Critical Warning">
      <Rules>
       <Rule Name="AbstractTypesShouldNotHaveConstructors" Enabled="True" />
       <Rule Name="ArrayFieldsShouldNotBeReadOnly" Enabled="True" />
       <Rule Name="AvoidOverloadsInComVisibleInterfaces" Enabled="False" />
       <Rule Name="CallGCSuppressFinalizeCorrectly" Enabled="True" />
       <Rule Name="ComRegistrationMethodsShouldBeMatched" Enabled="False" />
       <Rule Name="ComRegistrationMethodsShouldNotBeVisible" Enabled="False" />
       <Rule Name="DoNotCallOverridableMethodsInConstructors" Enabled="True" />
       <Rule Name="DoNotHideBaseClassMethods" Enabled="True" />
       <Rule Name="DoNotMarkServicedComponentsWithWebMethod" Enabled="True" />
       <Rule Name="IdentifiersShouldBeSpelledCorrectly" Enabled="True" />
       <Rule Name="InitializeReferenceTypeStaticFieldsInline" Enabled="True" />
       <Rule Name="MovePInvokesToNativeMethodsClass" Enabled="True" />
       <Rule Name="OperationsShouldNotOverflow" Enabled="True" />
       <Rule Name="PInvokeEntryPointsShouldExist" Enabled="False" />
       <Rule Name="ResourceStringsShouldBeSpelledCorrectly" Enabled="True" />
       <Rule Name="ReviewDenyAndPermitOnlyUsage" Enabled="True" />
       <Rule Name="StaticHolderTypesShouldBeSealed" Enabled="True" />
      </Rules>
     </Category>
     <Category Name="Error">
      <Rules>
       <Rule Name="AutoLayoutTypesShouldNotBeComVisible" Enabled="False" />
       <Rule Name="AvoidDuplicateAccelerators" Enabled="False" />
       <Rule Name="AvoidExcessiveParametersOnGenericTypes" Enabled="True" />
       <Rule Name="CallBaseClassMethodsOnISerializableTypes" Enabled="True" />
       <Rule Name="CallGetLastErrorImmediatelyAfterPInvoke" Enabled="False" />
       <Rule Name="CatchNonClsCompliantExceptionsInGeneralHandlers" Enabled="True" />
       <Rule Name="CollectionsShouldImplementGenericInterface" Enabled="True" />
       <Rule Name="CompoundWordsShouldBeCasedCorrectly" Enabled="True" />
       <Rule Name="ComVisibleTypeBaseTypesShouldBeComVisible" Enabled="False" />
       <Rule Name="ComVisibleTypesShouldBeCreatable" Enabled="False" />
       <Rule Name="ConsiderPassingBaseTypesAsParameters" Enabled="False" />
       <Rule Name="DeclareEventHandlersCorrectly" Enabled="True" />
       <Rule Name="DeclareTypesInNamespaces" Enabled="True" />
       <Rule Name="DefaultParametersShouldNotBeUsed" Enabled="True" />
       <Rule Name="DefineAccessorsForAttributeArguments" Enabled="True" />
       <Rule Name="DisposableTypesShouldDeclareFinalizer" Enabled="False" />
       <Rule Name="DoNotDeclareProtectedMembersInSealedTypes" Enabled="True" />
       <Rule Name="DoNotDeclareReadOnlyMutableReferenceTypes" Enabled="True" />
       <Rule Name="DoNotDeclareStaticMembersOnGenericTypes" Enabled="True" />
       <Rule Name="DoNotDeclareVirtualMembersInSealedTypes" Enabled="True" />
       <Rule Name="DoNotDeclareVisibleInstanceFields" Enabled="True" />
       <Rule Name="DoNotDecreaseInheritedMemberVisibility" Enabled="True" />
       <Rule Name="DoNotExposeGenericLists" Enabled="False" />
       <Rule Name="DoNotHardcodeLocaleSpecificStrings" Enabled="False" />
       <Rule Name="DoNotMarkEnumsWithFlags" Enabled="True" />
       <Rule Name="DoNotNameEnumValuesReserved" Enabled="True" />
       <Rule Name="DoNotPrefixEnumValuesWithTypeName" Enabled="True" />
       <Rule Name="DoNotRaiseExceptionsInExceptionClauses" Enabled="True" />
       <Rule Name="DoNotRaiseExceptionsInUnexpectedLocations" Enabled="True" />
       <Rule Name="DoNotRaiseReservedExceptionTypes" Enabled="True" />
       <Rule Name="DoNotShipUnreleasedResourceFormats" Enabled="True" />
       <Rule Name="DoNotUseIdleProcessPriority" Enabled="False" />
       <Rule Name="DoNotUseTimersThatPreventPowerStateChanges" Enabled="False" />
       <Rule Name="EnumeratorsShouldBeStronglyTyped" Enabled="True" />
       <Rule Name="EventsShouldNotHaveBeforeOrAfterPrefix" Enabled="True" />
       <Rule Name="FlagsEnumsShouldHavePluralNames" Enabled="True" />
       <Rule Name="ICollectionImplementationsHaveStronglyTypedMembers" Enabled="False" />
       <Rule Name="IdentifiersShouldBeCasedCorrectly" Enabled="True" />
       <Rule Name="IdentifiersShouldDifferByMoreThanCase" Enabled="True" />
       <Rule Name="IdentifiersShouldHaveCorrectPrefix" Enabled="True" />
       <Rule Name="IdentifiersShouldHaveCorrectSuffix" Enabled="True" />
       <Rule Name="IdentifiersShouldNotContainTypeNames" Enabled="True" />
       <Rule Name="IdentifiersShouldNotContainUnderscores" Enabled="True" />
       <Rule Name="IdentifiersShouldNotHaveIncorrectPrefix" Enabled="True" />
       <Rule Name="IdentifiersShouldNotMatchKeywords" Enabled="False" />
       <Rule Name="ImplementIDisposableCorrectly" Enabled="True" />
       <Rule Name="ImplementISerializableCorrectly" Enabled="True" />
       <Rule Name="ImplementSerializationConstructors" Enabled="True" />
       <Rule Name="ImplementSerializationMethodsCorrectly" Enabled="True" />
       <Rule Name="ImplementStandardExceptionConstructors" Enabled="True" />
       <Rule Name="InterfaceMethodsShouldBeCallableByChildTypes" Enabled="True" />
       <Rule Name="ListsAreStronglyTyped" Enabled="False" />
       <Rule Name="MarkAllNonSerializableFields" Enabled="True" />
       <Rule Name="MarkAssembliesWithAssemblyVersion" Enabled="True" />
       <Rule Name="MarkAssembliesWithClsCompliant" Enabled="True" />
       <Rule Name="MarkAttributesWithAttributeUsage" Enabled="True" />
       <Rule Name="MarkComSourceInterfacesAsIDispatch" Enabled="False" />
       <Rule Name="MarkWindowsFormsEntryPointsWithStaThread" Enabled="True" />
       <Rule Name="MembersShouldDifferByMoreThanReturnType" Enabled="True" />
       <Rule Name="MembersShouldNotExposeCertainConcreteTypes" Enabled="True" />
       <Rule Name="NestedTypesShouldNotBeVisible" Enabled="True" />
       <Rule Name="NormalizeStringsToUppercase" Enabled="False" />
       <Rule Name="OnlyFlagsEnumsShouldHavePluralNames" Enabled="True" />
       <Rule Name="OperatorOverloadsHaveNamedAlternates" Enabled="True" />
       <Rule Name="OverloadOperatorEqualsOnOverloadingAddAndSubtract" Enabled="True" />
       <Rule Name="OverrideEqualsOnOverloadingOperatorEquals" Enabled="True" />
       <Rule Name="OverrideGetHashCodeOnOverridingEquals" Enabled="True" />
       <Rule Name="OverrideMethodsOnComparableTypes" Enabled="True" />
       <Rule Name="ParameterNamesShouldMatchBaseDeclaration" Enabled="True" />
       <Rule Name="ParameterNamesShouldNotMatchMemberNames" Enabled="True" />
       <Rule Name="PInvokeDeclarationsShouldBePortable" Enabled="False" />
       <Rule Name="PropertiesShouldNotBeWriteOnly" Enabled="True" />
       <Rule Name="PropertyNamesShouldNotMatchGetMethods" Enabled="True" />
       <Rule Name="ProvideObsoleteAttributeMessage" Enabled="True" />
       <Rule Name="ResourceStringCompoundWordsShouldBeCasedCorrectly" Enabled="True" />
       <Rule Name="RethrowToPreserveStackDetails" Enabled="True" />
       <Rule Name="ReviewDeclarativeSecurityOnValueTypes" Enabled="True" />
       <Rule Name="SealMethodsThatSatisfyPrivateInterfaces" Enabled="True" />
       <Rule Name="SetLocaleForDataTypes" Enabled="False" />
       <Rule Name="SpecifyCultureInfo" Enabled="False" />
       <Rule Name="SpecifyIFormatProvider" Enabled="False" />
       <Rule Name="SpecifyMarshalingForPInvokeStringArguments" Enabled="False" />
       <Rule Name="SpecifyMessageBoxOptions" Enabled="False" />
       <Rule Name="SpecifyStringComparison" Enabled="False" />
       <Rule Name="StaticConstructorsShouldBePrivate" Enabled="True" />
       <Rule Name="StaticHolderTypesShouldNotHaveConstructors" Enabled="True" />
       <Rule Name="StringUriOverloadsCallSystemUriOverloads" Enabled="True" />
       <Rule Name="TypeNamesShouldNotMatchNamespaces" Enabled="True" />
       <Rule Name="TypesShouldNotExtendCertainBaseTypes" Enabled="True" />
       <Rule Name="UriParametersShouldNotBeStrings" Enabled="True" />
       <Rule Name="UriPropertiesShouldNotBeStrings" Enabled="True" />
       <Rule Name="UriReturnValuesShouldNotBeStrings" Enabled="True" />
       <Rule Name="UseGenericEventHandlerInstances" Enabled="True" />
       <Rule Name="UseIntegralOrStringArgumentForIndexers" Enabled="True" />
       <Rule Name="UseManagedEquivalentsOfWin32Api" Enabled="True" />
       <Rule Name="UseOnlyApiFromTargetedFramework" Enabled="False" />
       <Rule Name="UseOrdinalStringComparison" Enabled="False" />
       <Rule Name="UseParamsForVariableArguments" Enabled="True" />
       <Rule Name="UsePreferredTerms" Enabled="True" />
       <Rule Name="WrapVulnerableFinallyClausesInOuterTry" Enabled="True" />
      </Rules>
     </Category>
     <Category Name="Information">
      <Rules />
     </Category>
     <Category Name="Warning">
      <Rules>
       <Rule Name="AttributeStringLiteralsShouldParseCorrectly" Enabled="True" />
       <Rule Name="AvoidEmptyInterfaces" Enabled="False" />
       <Rule Name="AvoidExcessiveLocals" Enabled="True" />
       <Rule Name="AvoidInt64ArgumentsForVB6Clients" Enabled="False" />
       <Rule Name="AvoidNamespacesWithFewTypes" Enabled="False" />
       <Rule Name="AvoidNonpublicFieldsInComVisibleValueTypes" Enabled="False" />
       <Rule Name="AvoidOutParameters" Enabled="True" />
       <Rule Name="AvoidStaticMembersInComVisibleTypes" Enabled="False" />
       <Rule Name="AvoidUncalledPrivateCode" Enabled="True" />
       <Rule Name="AvoidUninstantiatedInternalClasses" Enabled="True" />
       <Rule Name="AvoidUnsealedAttributes" Enabled="True" />
       <Rule Name="AvoidUnusedPrivateFields" Enabled="True" />
       <Rule Name="CallGCKeepAliveWhenUsingNativeResources" Enabled="True" />
       <Rule Name="CollectionPropertiesShouldBeReadOnly" Enabled="False" />
       <Rule Name="DisposableFieldsShouldBeDisposed" Enabled="True" />
       <Rule Name="DoNotCastUnnecessarily" Enabled="True" />
       <Rule Name="DoNotIgnoreMethodResults" Enabled="False" />
       <Rule Name="DoNotInitializeUnnecessarily" Enabled="True" />
       <Rule Name="DoNotOverloadOperatorEqualsOnReferenceTypes" Enabled="True" />
       <Rule Name="DoNotPassTypesByReference" Enabled="True" />
       <Rule Name="EnumStorageShouldBeInt32" Enabled="True" />
       <Rule Name="ExceptionsShouldBePublic" Enabled="True" />
       <Rule Name="GenericMethodsShouldProvideTypeParameter" Enabled="False" />
       <Rule Name="IndexersShouldNotBeMultidimensional" Enabled="True" />
       <Rule Name="MarkAssembliesWithNeutralResourcesLanguage" Enabled="True" />
       <Rule Name="MarkBooleanPInvokeArgumentsWithMarshalAs" Enabled="False" />
       <Rule Name="MarkEnumsWithFlags" Enabled="True" />
       <Rule Name="MarkISerializableTypesWithSerializable" Enabled="True" />
       <Rule Name="MarkMembersAsStatic" Enabled="False" />
       <Rule Name="NonConstantFieldsShouldNotBeVisible" Enabled="True" />
       <Rule Name="OverloadOperatorEqualsOnOverridingValueTypeEquals" Enabled="True" />
       <Rule Name="OverrideEqualsAndOperatorEqualsOnValueTypes" Enabled="False" />
       <Rule Name="PassSystemUriObjectsInsteadOfStrings" Enabled="True" />
       <Rule Name="PreferJaggedArraysOverMultidimensional" Enabled="True" />
       <Rule Name="PropertiesShouldNotReturnArrays" Enabled="True" />
       <Rule Name="ProvideDeserializationMethodsForOptionalFields" Enabled="True" />
       <Rule Name="RemoveEmptyFinalizers" Enabled="True" />
       <Rule Name="RemoveUnusedLocals" Enabled="True" />
       <Rule Name="ReplaceRepetitiveArgumentsWithParamsArray" Enabled="True" />
       <Rule Name="ReviewUnusedParameters" Enabled="True" />
       <Rule Name="TestForEmptyStringsUsingStringLength" Enabled="True" />
       <Rule Name="UseEventsWhereAppropriate" Enabled="True" />
       <Rule Name="UseLiteralsWhereAppropriate" Enabled="True" />
       <Rule Name="UsePropertiesWhereAppropriate" Enabled="True" />
      </Rules>
     </Category>
    </Categories>
   </Group>
  </Groups>
  <Settings />
 </Rules>
 <FxCopReport Version="1.36" LastAnalysis="2009-10-30 11:17:06Z" />
</FxCopProject>
